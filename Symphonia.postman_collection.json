{
	"info": {
		"_postman_id": "a8e36ff4-890f-4487-91e4-01ab00a3e324",
		"name": "Symphonia",
		"description": "## error response\n\nif a request went wrong due to misuse or server error an error response will be sent it will have two fields\n\n<table>\n\t<th>\n\tfield\n\t</th>\n\t<th>\n\tdescription\n\t</th>\n\t<th>\n\tpossible values\n\t</th>\n\t<tr>\n\t\t<td><code>status</code></td>\n\t\t<td>it describes the source of the error if value is <code>fail</code> it means the error comes from the sender of the request else if its value was <code>error</code> it means it's a server error and should return for the back end developers to solve that issue</td>\n\t\t<td><code>error</code> | <code>fail</code></td>\n\t</tr>\n\t<tr>\n\t\t<td><code>msg</code> or <code>message</code></td>\n\t\t<td>it contains information about the error which is safe to send to the user as it doesn't contain any sensetive data</td>\n\t\t<td>you have to be logged in!</td>\n\t</tr>\n</table>",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Album",
			"item": [
				{
					"name": "Get Several Albums",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}api/v1/albums?ids=5e701f4d2672a63a60573a02,5e701fdf2672a63a60573a06",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"v1",
								"albums"
							],
							"query": [
								{
									"key": "ids",
									"value": "5e701f4d2672a63a60573a02,5e701fdf2672a63a60573a06",
									"description": "comma separated ids of the albums you want to retrieve their data"
								}
							]
						}
					},
					"response": [
						{
							"name": "Get Several Albums",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{URL}}api/v1/albums?ids=5e701f4d2672a63a60573a02,5e701fdf2672a63a60573a06",
									"host": [
										"{{URL}}api"
									],
									"path": [
										"v1",
										"albums"
									],
									"query": [
										{
											"key": "ids",
											"value": "5e701f4d2672a63a60573a02,5e701fdf2672a63a60573a06",
											"description": "comma separated ids of the albums you want to retrieve their data"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "ETag",
									"value": "W/\"d3b-7XzQAqz7DYbPGo6Z31dOqTQcqZ0\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "Date",
									"value": "Thu, 16 Apr 2020 00:10:06 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"tracks\": [\n            {\n                \"category\": [\n                    \"5e807517e478cf39b47bd1f0\"\n                ],\n                \"explicit\": false,\n                \"_id\": \"5e7d334860cd930408a5f995\",\n                \"album\": \"5e701f4d2672a63a60573a02\",\n                \"name\": \"Everything Is Wrong\",\n                \"durationMs\": 30000,\n                \"artist\": \"5e82a48054660672fd699883\",\n                \"trackPath\": \"assets/tracks/Everything-Is-Wrong.mp3\",\n                \"premium\": false,\n                \"type\": \"track\"\n            },\n            {\n                \"category\": [\n                    \"5e807517e478cf39b47bd1f0\"\n                ],\n                \"explicit\": false,\n                \"_id\": \"5e8a1e0f7937ec4d40c6deba\",\n                \"album\": \"5e701f4d2672a63a60573a02\",\n                \"name\": \"My Desire\",\n                \"durationMs\": 30000,\n                \"artist\": \"5e82a48054660672fd699883\",\n                \"trackPath\": \"assets/tracks/My-Desire.mp3\",\n                \"premium\": true,\n                \"type\": \"track\"\n            },\n            {\n                \"category\": [\n                    \"5e807517e478cf39b47bd1f0\"\n                ],\n                \"explicit\": false,\n                \"_id\": \"5e8a1e727937ec4d40c6debb\",\n                \"album\": \"5e701f4d2672a63a60573a02\",\n                \"name\": \"All The Rage Back Home\",\n                \"durationMs\": 30000,\n                \"artist\": \"5e82a48054660672fd699883\",\n                \"trackPath\": \"assets/tracks/All-The-Rage-Back-Home.mp3\",\n                \"premium\": false,\n                \"type\": \"track\"\n            }\n        ],\n        \"releaseDate\": \"2020-04-16T00:07:21.580Z\",\n        \"_id\": \"5e701f4d2672a63a60573a02\",\n        \"name\": \"El Pintor\",\n        \"year\": 2014,\n        \"image\": \"https://thesymphonia.ddns.net/api/v1/images/albums/El-Pintor.jpg\",\n        \"artist\": {\n            \"queue\": {\n                \"currentlyPlaying\": {\n                    \"currentTrack\": null\n                },\n                \"queueTracks\": [],\n                \"previousTrack\": null,\n                \"repeat\": false,\n                \"shuffle\": false,\n                \"play\": false,\n                \"repeatOnce\": false,\n                \"devices\": [\n                    {\n                        \"_id\": \"5e8a5b0db2859207bf1fc2e9\",\n                        \"devicesName\": \"chrome\"\n                    }\n                ]\n            },\n            \"followedUsers\": [],\n            \"tracks\": [\n                \"5e7d334860cd930408a5f995\",\n                \"5e8a1e0f7937ec4d40c6deba\",\n                \"5e8a1e727937ec4d40c6debb\"\n            ],\n            \"ownedPlaylists\": [],\n            \"followedAlbums\": [],\n            \"followedTracks\": [],\n            \"_id\": \"5e82a48054660672fd699883\",\n            \"email\": \"test4@test.com\",\n            \"name\": \"Interpol\",\n            \"dateOfBirth\": \"1979-12-25T00:00:00.000Z\",\n            \"gender\": \"male\",\n            \"type\": \"artist\",\n            \"imageUrl\": \"https://thesymphonia.ddns.net/api/v1/images/users/Interpol.jpg\"\n        }\n    },\n    {\n        \"tracks\": [\n            {\n                \"category\": [\n                    \"5e8072e5e478cf39b47bd1ef\"\n                ],\n                \"explicit\": false,\n                \"_id\": \"5e7d2dc03429e24340ff1396\",\n                \"album\": \"5e701fdf2672a63a60573a06\",\n                \"name\": \"Instant Destiny\",\n                \"durationMs\": 30000,\n                \"artist\": \"5e8137aa54660672fd699882\",\n                \"trackPath\": \"assets/tracks/Instant-Destiny.mp3\",\n                \"premium\": false,\n                \"type\": \"track\"\n            },\n            {\n                \"category\": [\n                    \"5e8072e5e478cf39b47bd1ef\"\n                ],\n                \"explicit\": false,\n                \"_id\": \"5e7d2ddd3429e24340ff1397\",\n                \"album\": \"5e701fdf2672a63a60573a06\",\n                \"name\": \"Borderline\",\n                \"durationMs\": 30000,\n                \"artist\": \"5e8137aa54660672fd699882\",\n                \"trackPath\": \"assets/tracks/Borderline.mvk\",\n                \"premium\": false,\n                \"type\": \"track\"\n            },\n            {\n                \"category\": [\n                    \"5e8072e5e478cf39b47bd1ef\"\n                ],\n                \"explicit\": false,\n                \"_id\": \"5e7d2e023429e24340ff1398\",\n                \"album\": \"5e701fdf2672a63a60573a06\",\n                \"name\": \"Posthumous Forgiveness\",\n                \"durationMs\": 30000,\n                \"artist\": \"5e8137aa54660672fd699882\",\n                \"trackPath\": \"assets/tracks/Posthumous-Forgiveness.mp3\",\n                \"premium\": true,\n                \"type\": \"track\"\n            }\n        ],\n        \"releaseDate\": \"2020-04-16T00:07:21.580Z\",\n        \"_id\": \"5e701fdf2672a63a60573a06\",\n        \"name\": \"The Slow Rush\",\n        \"year\": 2020,\n        \"image\": \"https://thesymphonia.ddns.net/api/v1/images/albums/The-Slow-Rush.jpg\",\n        \"artist\": {\n            \"queue\": {\n                \"currentlyPlaying\": {\n                    \"currentTrack\": null\n                },\n                \"queueTracks\": [],\n                \"previousTrack\": null,\n                \"repeat\": false,\n                \"shuffle\": false,\n                \"play\": false,\n                \"repeatOnce\": false,\n                \"devices\": [\n                    {\n                        \"_id\": \"5e8a5b0db2859207bf1fc2e9\",\n                        \"devicesName\": \"chrome\"\n                    }\n                ]\n            },\n            \"followedUsers\": [],\n            \"tracks\": [\n                \"5e7d2dc03429e24340ff1396\",\n                \"5e7d2ddd3429e24340ff1397\",\n                \"5e7d2e023429e24340ff1398\"\n            ],\n            \"ownedPlaylists\": [],\n            \"followedAlbums\": [],\n            \"followedTracks\": [],\n            \"_id\": \"5e8137aa54660672fd699882\",\n            \"email\": \"test3@test.com\",\n            \"name\": \"Tame Impala\",\n            \"dateOfBirth\": \"1978-06-25T00:00:00.000Z\",\n            \"gender\": \"male\",\n            \"type\": \"artist\",\n            \"imageUrl\": \"https://thesymphonia.ddns.net/api/v1/images/users/Tame-Impala.jpg\"\n        }\n    }\n]"
						}
					]
				},
				{
					"name": "Get an Album",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}api/v1/albums/:{id}",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"v1",
								"albums",
								":{id}"
							],
							"variable": [
								{
									"key": "{id}",
									"value": "5e701f4d2672a63a60573a02",
									"description": "The `Symphonia` id for the document you want to retrieve"
								}
							]
						}
					},
					"response": [
						{
							"name": "Get an Album",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{URL}}api/v1/albums/5e701f4d2672a63a60573a02",
									"host": [
										"{{URL}}api"
									],
									"path": [
										"v1",
										"albums",
										"5e701f4d2672a63a60573a02"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "932"
								},
								{
									"key": "ETag",
									"value": "W/\"3a4-Y9BeC6hkE2tr2S1DE4gVFdXKvJA\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Date",
									"value": "Mon, 25 May 2020 19:24:37 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"copyrights\": {\n        \"text\": \"Eu excepteur velit cillum dolor enim amet dolore magna. Voluptate \\n      enim ipsum pariatur est ut proident reprehenderit non et aliquip magna est velit. \\n      Consectetur in enim nostrud labore nulla veniam laborum eiusmod quis ex aliqua nisi dolor.\\n      Aliquip Lorem dolore nulla Lorem exercitation ad tempor cillum consectetur. \\n      Ad cillum occaecat aliqua amet pariatur.\",\n        \"type\": \"C\"\n    },\n    \"tracks\": [\n        {\n            \"_id\": \"5e7d334860cd930408a5f995\",\n            \"name\": \"Everything Is Wrong\"\n        },\n        {\n            \"_id\": \"5e8a1e0f7937ec4d40c6deba\",\n            \"name\": \"My Desire\"\n        },\n        {\n            \"_id\": \"5e8a1e727937ec4d40c6debb\",\n            \"name\": \"All The Rage Back Home\"\n        }\n    ],\n    \"type\": \"album\",\n    \"releaseDate\": \"2014-09-08T00:00:00.000Z\",\n    \"_id\": \"5e701f4d2672a63a60573a02\",\n    \"name\": \"El Pintor\",\n    \"image\": \"https://thesymphonia.ddns.net/api/v1/images/albums/El-Pintor.jpg\",\n    \"artist\": {\n        \"_id\": \"5e82a48054660672fd699883\",\n        \"name\": \"Interpol\"\n    },\n    \"albumType\": \"album\",\n    \"tracksCount\": 3,\n    \"id\": \"5e701f4d2672a63a60573a02\"\n}"
						}
					]
				},
				{
					"name": "Get an Album's Tracks",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}api/v1/albums/:{id}/tracks?limit=3&offset=0&source=searchalbum",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"v1",
								"albums",
								":{id}",
								"tracks"
							],
							"query": [
								{
									"key": "limit",
									"value": "3",
									"description": "`Optional`. The maximum number of items to return. Default: 20. Minimum: 1."
								},
								{
									"key": "offset",
									"value": "0",
									"description": "`Optional`. The index of the first item to return. Default: 0 (the first object). Use with `limit` to get the next set of items."
								},
								{
									"key": "source",
									"value": "searchalbum",
									"description": "if added then search history will be stored for that user"
								}
							],
							"variable": [
								{
									"key": "{id}",
									"value": "5e701f4d2672a63a60573a02",
									"description": "The `Symphonia` id for the document you want to retrieve"
								}
							]
						}
					},
					"response": [
						{
							"name": "Get an Album's Tracks",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{URL}}api/v1/albums/5e701f4d2672a63a60573a02/tracks?limit=2&offset=1",
									"host": [
										"{{URL}}api"
									],
									"path": [
										"v1",
										"albums",
										"5e701f4d2672a63a60573a02",
										"tracks"
									],
									"query": [
										{
											"key": "limit",
											"value": "2",
											"description": "the number of results in each page, if not provided the default value is `100`"
										},
										{
											"key": "offset",
											"value": "1"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "1001"
								},
								{
									"key": "ETag",
									"value": "W/\"3e9-Cvi89IB0CnCe+Fb0sL6zMut7HmY\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Date",
									"value": "Sun, 19 Apr 2020 20:22:47 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"tracks\": {\n        \"total\": 2,\n        \"items\": [\n            {\n                \"category\": [\n                    \"5e807517e478cf39b47bd1f0\"\n                ],\n                \"explicit\": false,\n                \"_id\": \"5e8a1e0f7937ec4d40c6deba\",\n                \"album\": {\n                    \"_id\": \"5e701f4d2672a63a60573a02\",\n                    \"name\": \"El Pintor\"\n                },\n                \"name\": \"My Desire\",\n                \"durationMs\": 30000,\n                \"artist\": {\n                    \"_id\": \"5e82a48054660672fd699883\",\n                    \"name\": \"Interpol\"\n                },\n                \"trackPath\": \"assets/tracks/My-Desire.mp3\",\n                \"premium\": true,\n                \"type\": \"track\"\n            },\n            {\n                \"category\": [\n                    \"5e807517e478cf39b47bd1f0\"\n                ],\n                \"explicit\": false,\n                \"_id\": \"5e8a1e727937ec4d40c6debb\",\n                \"album\": {\n                    \"_id\": \"5e701f4d2672a63a60573a02\",\n                    \"name\": \"El Pintor\"\n                },\n                \"name\": \"All The Rage Back Home\",\n                \"durationMs\": 30000,\n                \"artist\": {\n                    \"_id\": \"5e82a48054660672fd699883\",\n                    \"name\": \"Interpol\"\n                },\n                \"trackPath\": \"assets/tracks/All-The-Rage-Back-Home.mp3\",\n                \"premium\": false,\n                \"type\": \"track\"\n            }\n        ],\n        \"limit\": 2,\n        \"offset\": 1,\n        \"next\": \"http://localhost:5000/api/v1/albums/5e701f4d2672a63a60573a02/tracks?offset=3&limit=2\",\n        \"previous\": \"http://localhost:5000/api/v1/albums/5e701f4d2672a63a60573a02/tracks?offset=0&limit=2\",\n        \"href\": \"http://localhost:5000/api/v1/albums/5e701f4d2672a63a60573a02/tracks\"\n    }\n}"
						}
					]
				},
				{
					"name": "Create Album",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "Crystal Castles4",
									"description": "the album name",
									"type": "text"
								},
								{
									"key": "image",
									"description": "the image associated with the album it should be less than 1MB",
									"type": "file",
									"src": "/C:/Users/dell/Downloads/image.png"
								},
								{
									"key": "albumType",
									"value": "single",
									"description": "`signle` or `album` only",
									"type": "text"
								},
								{
									"key": "releaseDate",
									"value": "1999-01-30",
									"description": "the release date of the album in this format `YYYY-MM-DD` eg `2000-02-04` this means february 4th 2000",
									"type": "text"
								},
								{
									"key": "copyrightsText",
									"value": "lorem ipsum",
									"description": "the content of the copy rights",
									"type": "text"
								},
								{
									"key": "copyrightsType",
									"value": "C",
									"description": "`C` or `P`",
									"type": "text"
								}
							],
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}api/v1/albums",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"v1",
								"albums"
							]
						}
					},
					"response": [
						{
							"name": "Create Album",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "name",
											"value": "lol",
											"description": "the album name",
											"type": "text"
										},
										{
											"key": "image",
											"description": "the image associated with the album it should be less than 1MB",
											"type": "file",
											"src": "/C:/Users/dell/Desktop/DSC_0041.jpg"
										},
										{
											"key": "albumType",
											"value": "single",
											"description": "`signle` or `album` only",
											"type": "text"
										},
										{
											"key": "releaseDate",
											"value": "1999-01-30",
											"description": "the release date of the album in this format `YYYY-MM-DD` eg `2000-02-04` this means february 4th 2000",
											"type": "text"
										},
										{
											"key": "copyrightsText",
											"value": "lorem ipsum",
											"description": "the content of the copy rights",
											"type": "text"
										},
										{
											"key": "copyrightsType",
											"value": "C",
											"description": "'C' or 'P'",
											"type": "text"
										}
									],
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}api/v1/albums",
									"host": [
										"{{URL}}api"
									],
									"path": [
										"v1",
										"albums"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "408"
								},
								{
									"key": "ETag",
									"value": "W/\"198-GNDgSmQIbQergCHNEAQUQBeUbcM\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Date",
									"value": "Fri, 24 Apr 2020 13:24:10 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"tracks\": [],\n    \"type\": \"album\",\n    \"releaseDate\": \"1999-01-30T00:00:00.000Z\",\n    \"_id\": \"5ea2e87afee629794c7627ac\",\n    \"name\": \"lol\",\n    \"albumType\": \"single\",\n    \"copyrights\": {\n        \"text\": \"lorem ipsum\",\n        \"type\": \"C\"\n    },\n    \"image\": \"http://localhost:3000/api/v1/images/albums/Lebanon_Hanover-5e8c780ae37ac11ac4f01360/906a29c2997d765f9f34-1587734650667.jpg\",\n    \"artist\": \"5e8c780ae37ac11ac4f01360\",\n    \"__v\": 0,\n    \"tracksCount\": 0,\n    \"id\": \"5ea2e87afee629794c7627ac\"\n}"
						}
					]
				},
				{
					"name": "Delete Album",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}api/v1/albums/:{album_id}",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"v1",
								"albums",
								":{album_id}"
							],
							"variable": [
								{
									"key": "{album_id}",
									"value": "5ecc1079a8d0246dac7fc1bd",
									"description": "The `Symphonia` id for the document you want to retrieve"
								}
							]
						}
					},
					"response": [
						{
							"name": "Delete Album",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{URL}}api/v1/albums/:{album_id}",
									"host": [
										"{{URL}}api"
									],
									"path": [
										"v1",
										"albums",
										":{album_id}"
									],
									"variable": [
										{
											"key": "{album_id}",
											"value": "5ecc0e2d0cc6e020ac744997"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Date",
									"value": "Mon, 25 May 2020 18:28:05 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Rename album",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"Elpintor\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}api/v1/albums/:{album_id}",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"v1",
								"albums",
								":{album_id}"
							],
							"variable": [
								{
									"key": "{album_id}",
									"value": "5ecc1ddbe62e7d49c0014570",
									"description": "The `Symphonia` id for the document you want to retrieve"
								}
							]
						}
					},
					"response": [
						{
							"name": "Rename album",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"Elpintor\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}api/v1/albums/:{album_id}",
									"host": [
										"{{URL}}api"
									],
									"path": [
										"v1",
										"albums",
										":{album_id}"
									],
									"variable": [
										{
											"key": "{album_id}",
											"value": "5ecc1ddbe62e7d49c0014570"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "419"
								},
								{
									"key": "ETag",
									"value": "W/\"1a3-DoedxgQePQNQaWRyDA3+c9fJdTg\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Date",
									"value": "Mon, 25 May 2020 19:39:16 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"copyrights\": {\n        \"text\": \"lorem ipsum\",\n        \"type\": \"C\"\n    },\n    \"tracks\": [],\n    \"type\": \"album\",\n    \"releaseDate\": \"1999-01-30T00:00:00.000Z\",\n    \"_id\": \"5ecc1ddbe62e7d49c0014570\",\n    \"name\": \"Elpintor\",\n    \"albumType\": \"single\",\n    \"image\": \"http://localhost:3000/api/v1/images/albums/Muhammad_Ahmad_Hesham-5e8125dc54660672fd69987f/ed368c1185c5f68da11b-1590435291467.jpg\",\n    \"artist\": \"5e8125dc54660672fd69987f\",\n    \"__v\": 0,\n    \"tracksCount\": 0,\n    \"id\": \"5ecc1ddbe62e7d49c0014570\"\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Artists",
			"item": [
				{
					"name": "Get an Artist",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"description": "*Required*. A valid access token from the Symphonia Accounts service.\n",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}api/v1/artists/:{artist_id}",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"v1",
								"artists",
								":{artist_id}"
							],
							"variable": [
								{
									"key": "{artist_id}",
									"value": "5e8137aa54660672fd699882",
									"description": "The `Symphonia` id for the document you want to retrieve"
								}
							]
						}
					},
					"response": [
						{
							"name": "Get an Artist",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"description": "*Required*. A valid access token from the Symphonia Accounts service.\n",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}api/v1/artists/5e8137aa54660672fd699882",
									"host": [
										"{{URL}}api"
									],
									"path": [
										"v1",
										"artists",
										"5e8137aa54660672fd699882"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "592"
								},
								{
									"key": "ETag",
									"value": "W/\"250-cwG94878hoOUcX0/OpkRvgm9vJw\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Date",
									"value": "Tue, 07 Apr 2020 20:37:26 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"queue\": {\n        \"currentlyPlaying\": {\n            \"currentTrack\": null\n        },\n        \"queueTracks\": [],\n        \"previousTrack\": null,\n        \"repeat\": false,\n        \"shuffle\": false,\n        \"play\": false,\n        \"repeatOnce\": false,\n        \"devices\": [\n            {\n                \"_id\": \"5e8a5b0db2859207bf1fc2e9\",\n                \"devicesName\": \"chrome\"\n            }\n        ]\n    },\n    \"followedUsers\": [],\n    \"tracks\": [],\n    \"ownedPlaylists\": [],\n    \"followedAlbums\": [],\n    \"followedTracks\": [],\n    \"_id\": \"5e8137aa54660672fd699882\",\n    \"email\": \"test3@test.com\",\n    \"name\": \"Tame Impala\",\n    \"dateOfBirth\": \"1978-06-25T00:00:00.000Z\",\n    \"gender\": \"male\",\n    \"type\": \"artist\",\n    \"imageUrl\": \"https://zasymphonia.ddns.net/api/v1/images/users/Tame-Impala.jpg\",\n    \"__v\": 1,\n    \"last_login\": \"2020-04-07T17:58:12.792Z\"\n}"
						}
					]
				},
				{
					"name": "Get an Artist's Albums",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"description": "*Required*. A valid access token from the Symphonia Accounts service.\n",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}api/v1/artists/:{artist_id}/albums?limit=1&offset=0",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"v1",
								"artists",
								":{artist_id}",
								"albums"
							],
							"query": [
								{
									"key": "limit",
									"value": "1",
									"description": "`Optional`. The maximum number of items to return. Default: 20. Minimum: 1."
								},
								{
									"key": "offset",
									"value": "0",
									"description": "`Optional`. The index of the first item to return. Default: 0 (the first object). Use with `limit` to get the next set of items."
								}
							],
							"variable": [
								{
									"key": "{artist_id}",
									"value": "5e84b966681ae439edfc1d6f",
									"description": "The `Symphonia` id for the document you want to retrieve."
								}
							]
						}
					},
					"response": [
						{
							"name": "Get an Artist's Albums",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"description": "*Required*. A valid access token from the Symphonia Accounts service.\n",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}api/v1/artists/:{id}/albums?limit=1&offset=0",
									"host": [
										"{{URL}}api"
									],
									"path": [
										"v1",
										"artists",
										":{id}",
										"albums"
									],
									"query": [
										{
											"key": "limit",
											"value": "1"
										},
										{
											"key": "offset",
											"value": "0"
										}
									],
									"variable": [
										{
											"key": "{id}",
											"value": "5e8137aa54660672fd699882",
											"description": "The Symphonia ID for the artist."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "ETag",
									"value": "W/\"49f-ER4yeEsAafoPTmQ5At5yn/is2Us\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "Date",
									"value": "Mon, 25 May 2020 19:29:20 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"albums\": {\n        \"total\": 1,\n        \"items\": [\n            {\n                \"copyrights\": {\n                    \"text\": \"Eu excepteur velit cillum dolor enim amet dolore magna. Voluptate \\n      enim ipsum pariatur est ut proident reprehenderit non et aliquip magna est velit. \\n      Consectetur in enim nostrud labore nulla veniam laborum eiusmod quis ex aliqua nisi dolor.\\n      Aliquip Lorem dolore nulla Lorem exercitation ad tempor cillum consectetur. \\n      Ad cillum occaecat aliqua amet pariatur.\",\n                    \"type\": \"C\"\n                },\n                \"tracks\": [\n                    {\n                        \"_id\": \"5e7d2dc03429e24340ff1396\",\n                        \"name\": \"Instant Destiny\"\n                    },\n                    {\n                        \"_id\": \"5e7d2ddd3429e24340ff1397\",\n                        \"name\": \"Borderline\"\n                    },\n                    {\n                        \"_id\": \"5e7d2e023429e24340ff1398\",\n                        \"name\": \"Posthumous Forgiveness\"\n                    }\n                ],\n                \"type\": \"album\",\n                \"releaseDate\": \"2020-02-14T00:00:00.000Z\",\n                \"_id\": \"5e701fdf2672a63a60573a06\",\n                \"name\": \"The Slow Rush\",\n                \"image\": \"https://thesymphonia.ddns.net/api/v1/images/albums/The-Slow-Rush.jpg\",\n                \"artist\": {\n                    \"_id\": \"5e8137aa54660672fd699882\",\n                    \"name\": \"Tame Impala\"\n                },\n                \"albumType\": \"album\",\n                \"tracksCount\": 3,\n                \"id\": \"5e701fdf2672a63a60573a06\"\n            }\n        ],\n        \"limit\": 1,\n        \"offset\": 0,\n        \"next\": \"http://localhost:3000/api/v1/artists/5e8137aa54660672fd699882/albums?offset=1&limit=1\",\n        \"previous\": null,\n        \"href\": \"http://localhost:3000/api/v1/artists/5e8137aa54660672fd699882/albums\"\n    }\n}"
						}
					]
				},
				{
					"name": "Get an Artist's Top Tracks",
					"request": {
						"method": "GET",
						"header": [
							{
								"description": "*Required*. A valid access token from the Symphonia Accounts service.\n",
								"key": "Authorization",
								"type": "text",
								"value": ""
							}
						],
						"url": {
							"raw": "{{URL}}api/v1/artists/:{artist_id}/top-tracks?limit=1&offset=1",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"v1",
								"artists",
								":{artist_id}",
								"top-tracks"
							],
							"query": [
								{
									"key": "limit",
									"value": "1",
									"description": "`Optional`. The maximum number of items to return. Default: 20. Minimum: 1."
								},
								{
									"key": "offset",
									"value": "1",
									"description": "`Optional`. The index of the first item to return. Default: 0 (the first object). Use with `limit` to get the next set of items."
								}
							],
							"variable": [
								{
									"key": "{artist_id}",
									"value": "5e84b966681ae439edfc1d6f",
									"description": "The `Symphonia` id for the document you want to retrieve."
								}
							]
						}
					},
					"response": [
						{
							"name": "Get an Artist's Top Tracks",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "*Required*. A valid access token from the Symphonia Accounts service.\n",
										"key": "Authorization",
										"type": "text",
										"value": ""
									}
								],
								"url": {
									"raw": "{{URL}}api/v1/artists/5e84b966681ae439edfc1d6f/top-tracks?limit=1&offset=1",
									"host": [
										"{{URL}}api"
									],
									"path": [
										"v1",
										"artists",
										"5e84b966681ae439edfc1d6f",
										"top-tracks"
									],
									"query": [
										{
											"key": "limit",
											"value": "1"
										},
										{
											"key": "offset",
											"value": "1"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "748"
								},
								{
									"key": "ETag",
									"value": "W/\"2ec-tjYevYP47I4aGE70kxaRa8IxB4g\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Date",
									"value": "Sun, 19 Apr 2020 20:48:03 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"tracks\": {\n        \"total\": 1,\n        \"items\": [\n            {\n                \"category\": [\n                    \"5e8076e6a9902a4328cc285c\"\n                ],\n                \"explicit\": true,\n                \"_id\": \"5e8a1e937937ec4d40c6debd\",\n                \"album\": {\n                    \"_id\": \"5e794163c01c024ecc3c31d3\",\n                    \"name\": \"Violent Rains\",\n                    \"image\": \"https://thesymphonia.ddns.net/api/v1/images/albums/Violent-Rains.jpg\"\n                },\n                \"name\": \"BATTLES\",\n                \"durationMs\": 30000,\n                \"artist\": {\n                    \"_id\": \"5e84b966681ae439edfc1d6f\",\n                    \"name\": \"Minuit Machine\"\n                },\n                \"trackPath\": \"assets/tracks/BATTLES.mp3\",\n                \"premium\": false,\n                \"type\": \"track\"\n            }\n        ],\n        \"limit\": 1,\n        \"offset\": 1,\n        \"next\": \"http://localhost:5000/api/v1/artists/5e84b966681ae439edfc1d6f/top-tracks?offset=2&limit=1\",\n        \"previous\": \"http://localhost:5000/api/v1/artists/5e84b966681ae439edfc1d6f/top-tracks?offset=0&limit=1\",\n        \"href\": \"http://localhost:5000/api/v1/artists/5e84b966681ae439edfc1d6f/top-tracks\"\n    }\n}"
						}
					]
				},
				{
					"name": "Get an Artist's Related Artists",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"description": "*Required*. A valid access token from the Symphonia Accounts service.\n",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}api/v1/artists/:{artist_id}/related-artists",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"v1",
								"artists",
								":{artist_id}",
								"related-artists"
							],
							"variable": [
								{
									"key": "{artist_id}",
									"value": "5e84b966681ae439edfc1d6f",
									"description": "The `Symphonia` id for the document you want to retrieve."
								}
							]
						}
					},
					"response": [
						{
							"name": "Get an Artist's Related Artists",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"description": "*Required*. A valid access token from the Symphonia Accounts service.\n",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}api/v1/artists/5e8137aa54660672fd699882/related-artists",
									"host": [
										"{{URL}}api"
									],
									"path": [
										"v1",
										"artists",
										"5e8137aa54660672fd699882",
										"related-artists"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "ETag",
									"value": "W/\"605-y6K99ZDKHJMBQv35bW22vVGM08Y\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "Date",
									"value": "Sun, 19 Apr 2020 20:50:36 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"artists\": [\n        {\n            \"_id\": \"5e8c7c030fab001100e883fc\",\n            \"followedUsers\": [],\n            \"email\": \"test32@test.com\",\n            \"password\": \"$2b$12$GDzaxr1IqINkhDi7v67F3OLfD..QeYS7PUsLkIxUg8O4NO8lkP0cS\",\n            \"name\": \"Daft Punk\",\n            \"dateOfBirth\": \"1987-12-15T00:00:00.000+00:00\",\n            \"gender\": \"male\",\n            \"type\": \"artist\",\n            \"queue\": {\n                \"devices\": [\n                    {\n                        \"_id\": \"5e8ba7b243427f32bcb6e75d\",\n                        \"devicesName\": \"chrome\"\n                    }\n                ],\n                \"repeat\": false,\n                \"repeatOnce\": false,\n                \"shuffle\": false\n            },\n            \"ownedPlaylists\": [],\n            \"imageUrl\": \"https://thesymphonia.ddns.net/api/v1/images/users/Daft-Punk.jpg\",\n            \"followedAlbums\": []\n        },\n        {\n            \"_id\": \"5e8c769ce37ac11ac4f0135a\",\n            \"followedUsers\": [],\n            \"email\": \"test13@test.com\",\n            \"password\": \"$2b$12$GDzaxr1IqINkhDi7v67F3OLfD..QeYS7PUsLkIxUg8O4NO8lkP0cS\",\n            \"name\": \"Crystal Castles\",\n            \"dateOfBirth\": \"1997-05-16T00:00:00.000+00:00\",\n            \"gender\": \"female\",\n            \"type\": \"artist\",\n            \"queue\": {\n                \"devices\": [\n                    {\n                        \"_id\": \"5e8ba7b243427f32bcb6e75d\",\n                        \"devicesName\": \"chrome\"\n                    }\n                ],\n                \"repeat\": false,\n                \"repeatOnce\": false,\n                \"shuffle\": false\n            },\n            \"ownedPlaylists\": [],\n            \"imageUrl\": \"https://thesymphonia.ddns.net/api/v1/images/users/Crystal-Castles.jpg\",\n            \"followedAlbums\": []\n        },\n        {\n            \"_id\": \"5e8c787de37ac11ac4f01362\",\n            \"followedUsers\": [],\n            \"email\": \"test21@test.com\",\n            \"password\": \"$2b$12$GDzaxr1IqINkhDi7v67F3OLfD..QeYS7PUsLkIxUg8O4NO8lkP0cS\",\n            \"name\": \"Man Without Country\",\n            \"dateOfBirth\": \"1986-04-11T00:00:00.000+00:00\",\n            \"gender\": \"male\",\n            \"type\": \"artist\",\n            \"queue\": {\n                \"devices\": [\n                    {\n                        \"_id\": \"5e8ba7b243427f32bcb6e75d\",\n                        \"devicesName\": \"chrome\"\n                    }\n                ],\n                \"repeat\": false,\n                \"repeatOnce\": false,\n                \"shuffle\": false\n            },\n            \"ownedPlaylists\": [],\n            \"imageUrl\": \"https://thesymphonia.ddns.net/api/v1/images/users/Man-Without-Country.jpg\",\n            \"followedAlbums\": []\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Get Several Artists",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"description": "*Required*. A valid access token from the Symphonia Accounts service.\n",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}api/v1/artists?ids=5e80fd1684c71f6ffb534a08,5e84b966681ae439edfc1d6f",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"v1",
								"artists"
							],
							"query": [
								{
									"key": "ids",
									"value": "5e80fd1684c71f6ffb534a08,5e84b966681ae439edfc1d6f",
									"description": "`Required`. A comma-separated list of the Symphonia IDs for the artists. Maximum: 50 IDs."
								}
							]
						}
					},
					"response": [
						{
							"name": "Get Several Artists",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"description": "*Required*. A valid access token from the Symphonia Accounts service.\n",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}api/v1/artists?ids=5e80fd1684c71f6ffb534a08,5e84b966681ae439edfc1d6f",
									"host": [
										"{{URL}}api"
									],
									"path": [
										"v1",
										"artists"
									],
									"query": [
										{
											"key": "ids",
											"value": "5e80fd1684c71f6ffb534a08,5e84b966681ae439edfc1d6f",
											"description": "<em>Required</em>. A comma-separated list of the Symphonia IDs for the artists. Maximum: 50 IDs."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "ETag",
									"value": "W/\"4df-6WzjFYViQ5ngWv2e90wwWJTcrQU\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "Date",
									"value": "Tue, 07 Apr 2020 20:51:23 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"queue\": {\n            \"currentlyPlaying\": {\n                \"currentTrack\": null\n            },\n            \"queueTracks\": [],\n            \"previousTrack\": null,\n            \"repeat\": false,\n            \"shuffle\": false,\n            \"play\": false,\n            \"repeatOnce\": false,\n            \"devices\": [\n                {\n                    \"_id\": \"5e8a5b0db2859207bf1fc2e9\",\n                    \"devicesName\": \"chrome\"\n                }\n            ]\n        },\n        \"followedUsers\": [],\n        \"tracks\": [\n            \"5e8a1ea07937ec4d40c6debf\",\n            \"5e8a37d0d56ea252c3860a1a\",\n            \"5e8a39f24e11cd46c8bde654\"\n        ],\n        \"ownedPlaylists\": [],\n        \"followedAlbums\": [],\n        \"followedTracks\": [],\n        \"_id\": \"5e80fd1684c71f6ffb534a08\",\n        \"email\": \"test6@test.com\",\n        \"name\": \"TR/ST\",\n        \"dateOfBirth\": \"1985-12-05T00:00:00.000Z\",\n        \"gender\": \"male\",\n        \"type\": \"artist\",\n        \"imageUrl\": \"https://zasymphonia.ddns.net/api/v1/images/users/tr-st.jpg\"\n    },\n    {\n        \"queue\": {\n            \"currentlyPlaying\": {\n                \"currentTrack\": null\n            },\n            \"queueTracks\": [],\n            \"previousTrack\": null,\n            \"repeat\": false,\n            \"shuffle\": false,\n            \"play\": false,\n            \"repeatOnce\": false,\n            \"devices\": [\n                {\n                    \"_id\": \"5e8a5b0db2859207bf1fc2e9\",\n                    \"devicesName\": \"chrome\"\n                }\n            ]\n        },\n        \"followedUsers\": [],\n        \"tracks\": [\n            \"5e8a1e767937ec4d40c6debc\",\n            \"5e8a1e937937ec4d40c6debd\",\n            \"5e8a1e727937ec4d40c6debb\"\n        ],\n        \"ownedPlaylists\": [],\n        \"followedAlbums\": [],\n        \"followedTracks\": [],\n        \"_id\": \"5e84b966681ae439edfc1d6f\",\n        \"email\": \"test5@test.com\",\n        \"name\": \"Minuit Machine\",\n        \"dateOfBirth\": \"1995-06-25T00:00:00.000Z\",\n        \"gender\": \"female\",\n        \"type\": \"artist\",\n        \"imageUrl\": \"https://zasymphonia.ddns.net/api/v1/images/users/Minuit-Machine.jpg\"\n    }\n]"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "browse",
			"item": [
				{
					"name": "Get a category",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"description": "access_token",
								"key": "Authorization",
								"type": "text",
								"value": "{{jwt}}"
							}
						],
						"url": {
							"raw": "{{URL}}api/v1/browse/categories/:{category_name}",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"v1",
								"browse",
								"categories",
								":{category_name}"
							],
							"variable": [
								{
									"key": "{category_name}",
									"value": "Indie-rock",
									"description": "the name of the category you want to retrieve"
								}
							]
						}
					},
					"response": [
						{
							"name": "Get a category",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"description": "access_token",
										"key": "Authorization",
										"type": "text",
										"value": "{{jwt}}"
									}
								],
								"url": {
									"raw": "{{URL}}api/v1/browse/categories/Indie-rock",
									"host": [
										"{{URL}}api"
									],
									"path": [
										"v1",
										"browse",
										"categories",
										"Indie-rock"
									],
									"query": [
										{
											"key": "country",
											"value": "{{country_code}}",
											"description": "\tOptional. A country: an ISO 3166-1 alpha-2 country code. Provide this parameter if you want to narrow the list of returned categories to those relevant to a particular country. If omitted, the returned items will be globally relevant.",
											"disabled": true
										},
										{
											"key": "locale",
											"value": "{{language}}",
											"disabled": true
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "193"
								},
								{
									"key": "ETag",
									"value": "W/\"c1-TCgvelWav44yOSQE2eaAuPfrfKM\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Date",
									"value": "Tue, 07 Apr 2020 20:52:13 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"icons\": [\n        {\n            \"url\": \"https://zasymphonia.ddns.net/api/v1/browse/categories/images/Indie-rock.jpg\",\n            \"width\": 300,\n            \"height\": 300\n        }\n    ],\n    \"name\": \"Indie rock\",\n    \"id\": \"Indie-rock\",\n    \"type\": \"category\",\n    \"href\": \"totot\"\n}"
						}
					]
				},
				{
					"name": "Get List of Categories",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"description": "access_token",
								"key": "Authorization",
								"type": "text",
								"value": "{{jwt}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{URL}}api/v1/browse/categories?limit=2&offset=0",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"v1",
								"browse",
								"categories"
							],
							"query": [
								{
									"key": "limit",
									"value": "2",
									"description": "`Optional`. The maximum number of items to return. Default: 20. Minimum: 1."
								},
								{
									"key": "offset",
									"value": "0",
									"description": "`Optional`. The index of the first item to return. Default: 0 (the first object). Use with `limit` to get the next set of items."
								}
							]
						}
					},
					"response": [
						{
							"name": "Get List of Categories",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "access_token",
										"key": "Authorization",
										"type": "text",
										"value": "{{jwt}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{URL}}api/v1/browse/categories",
									"host": [
										"{{URL}}api"
									],
									"path": [
										"v1",
										"browse",
										"categories"
									],
									"query": [
										{
											"key": "country",
											"value": "{{country_code}}",
											"disabled": true
										},
										{
											"key": "locale",
											"value": "{{language}}",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "10",
											"description": "Optional. The maximum number of items to return. Default: 20. Minimum: 1. Maximum: 50.\n",
											"disabled": true
										},
										{
											"key": "offset",
											"value": "10",
											"description": "Optional. The index of the first item to return. Default: 0 (the first object). Use with limit to get the next set of items.",
											"disabled": true
										},
										{
											"key": "hi",
											"value": "test",
											"description": "test",
											"disabled": true
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "981"
								},
								{
									"key": "ETag",
									"value": "W/\"3d5-+kuA9Tj0aX+XB2/GKpUd+rRb4ME\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Date",
									"value": "Tue, 07 Apr 2020 20:52:39 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"success\",\n    \"results\": 4,\n    \"data\": {\n        \"categorys\": [\n            {\n                \"icons\": [\n                    {\n                        \"url\": \"https://zasymphonia.ddns.net/api/v1/browse/categories/images/Psychedelic-pop.jpg\",\n                        \"width\": 300,\n                        \"height\": 300\n                    }\n                ],\n                \"_id\": \"5e8072e5e478cf39b47bd1ef\",\n                \"name\": \"Psychedelic pop\",\n                \"id\": \"Psychedelic-pop\",\n                \"type\": \"category\",\n                \"href\": \"totot\"\n            },\n            {\n                \"icons\": [\n                    {\n                        \"url\": \"https://zasymphonia.ddns.net/api/v1/browse/categories/images/Indie-rock.jpg\",\n                        \"width\": 300,\n                        \"height\": 300\n                    }\n                ],\n                \"_id\": \"5e807517e478cf39b47bd1f0\",\n                \"name\": \"Indie rock\",\n                \"id\": \"Indie-rock\",\n                \"type\": \"category\",\n                \"href\": \"totot\"\n            },\n            {\n                \"icons\": [\n                    {\n                        \"url\": \"https://zasymphonia.ddns.net/api/v1/browse/categories/images/Alternative.jpg\",\n                        \"width\": 300,\n                        \"height\": 300\n                    }\n                ],\n                \"_id\": \"5e8076e6a9902a4328cc285c\",\n                \"name\": \"Alternative\",\n                \"id\": \"Alternative\",\n                \"type\": \"category\",\n                \"href\": \"totot\"\n            },\n            {\n                \"icons\": [\n                    {\n                        \"url\": \"https://zasymphonia.ddns.net/api/v1/browse/categories/images/Electronic.jpg\",\n                        \"width\": 300,\n                        \"height\": 300\n                    }\n                ],\n                \"_id\": \"5e883e48c808fd1aa40ad1f8\",\n                \"name\": \"Electronic\",\n                \"id\": \"Electronic\",\n                \"type\": \"category\",\n                \"href\": \"totot\"\n            }\n        ]\n    }\n}"
						}
					]
				},
				{
					"name": "Get a Category's Playlists",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"description": "access_token",
								"key": "Authorization",
								"type": "text",
								"value": "{{jwt}}"
							}
						],
						"url": {
							"raw": "{{URL}}api/v1/browse/categories/:{category_name}/playlists?source=searchcategory",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"v1",
								"browse",
								"categories",
								":{category_name}",
								"playlists"
							],
							"query": [
								{
									"key": "source",
									"value": "searchcategory",
									"description": "if you entered the category page from the searchbox"
								}
							],
							"variable": [
								{
									"key": "{category_name}",
									"value": "Alternative",
									"description": "name of the category you want to retrieve"
								}
							]
						}
					},
					"response": [
						{
							"name": "Get a Category's Playlists",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "access_token",
										"key": "Authorization",
										"type": "text",
										"value": "{{jwt}}"
									}
								],
								"url": {
									"raw": "{{URL}}api/v1/browse/categories/Alternative/playlists",
									"host": [
										"{{URL}}api"
									],
									"path": [
										"v1",
										"browse",
										"categories",
										"Alternative",
										"playlists"
									],
									"query": [
										{
											"key": "country",
											"value": "{{country_code}}",
											"disabled": true
										},
										{
											"key": "locale",
											"value": "{{language}}",
											"disabled": true
										},
										{
											"key": "offset",
											"value": "2",
											"description": "Optional. The index of the first item to return. Default: 0 (the first object). Use with limit to get the next set of items.",
											"disabled": true
										},
										{
											"key": "",
											"value": null,
											"disabled": true
										},
										{
											"key": "limit",
											"value": "1",
											"disabled": true
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "ETag",
									"value": "W/\"762-eIoivwJ/Suptbgp0dp72WGSpTeU\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "Date",
									"value": "Tue, 07 Apr 2020 20:53:12 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"playlists\": {\n        \"total\": 3,\n        \"next\": \"http://localhost:3000/api/v1/browse/categories/Alternative/playlists?offset=20&limit=20\",\n        \"previous\": null,\n        \"href\": \"http://localhost:3000/api/v1/browse/categories/Alternative/playlists?offset=0&limit=20\",\n        \"items\": [\n            {\n                \"collaborative\": true,\n                \"images\": [\n                    \"https://zasymphonia.ddns.net/api/v1/images/playlists/playlist3.jpg\"\n                ],\n                \"public\": true,\n                \"tracks\": [\n                    \"5e8a1ea07937ec4d40c6debf\"\n                ],\n                \"followers\": [\n                    \"5e812db054660672fd699881\",\n                    \"5e812a3454660672fd699880\"\n                ],\n                \"_id\": \"5e805a8a3711912168602afa\",\n                \"name\": \"Soak Up the Sun\",\n                \"owner\": \"5e8125dc54660672fd69987f\",\n                \"description\": \"My Parents Pay for my Premium Account, My Rent, and Literally Everything Else\",\n                \"category\": \"5e8076e6a9902a4328cc285c\",\n                \"id\": \"5e805a8a3711912168602afa\"\n            },\n            {\n                \"collaborative\": false,\n                \"images\": [\n                    \"https://zasymphonia.ddns.net/api/v1/images/playlists/playlist6.jpg\"\n                ],\n                \"public\": true,\n                \"tracks\": [\n                    \"5e8a39f24e11cd46c8bde654\",\n                    \"5e8a37d0d56ea252c3860a1a\",\n                    \"5e8a1ea07937ec4d40c6debf\",\n                    \"5e8a1e9a7937ec4d40c6debe\",\n                    \"5e8a1e937937ec4d40c6debd\",\n                    \"5e8a1e767937ec4d40c6debc\"\n                ],\n                \"followers\": [\n                    \"5e8125dc54660672fd69987f\"\n                ],\n                \"_id\": \"5e8078b0dbaafc18605cb029\",\n                \"name\": \"Power Workout\",\n                \"owner\": \"5e812a3454660672fd699880\",\n                \"description\": \"Pump Up Jams for Carrying Groceries Up to My Sixth Floor Walk-Up\",\n                \"category\": \"5e8076e6a9902a4328cc285c\",\n                \"id\": \"5e8078b0dbaafc18605cb029\"\n            },\n            {\n                \"collaborative\": false,\n                \"images\": [\n                    \"https://zasymphonia.ddns.net/api/v1/images/playlists/playlist7.jpg\"\n                ],\n                \"public\": true,\n                \"tracks\": [\n                    \"5e8a1e767937ec4d40c6debc\",\n                    \"5e8a1e937937ec4d40c6debd\",\n                    \"5e8a1e9a7937ec4d40c6debe\"\n                ],\n                \"followers\": [\n                    \"5e8125dc54660672fd69987f\"\n                ],\n                \"_id\": \"5e8088fa79844f135496ec7f\",\n                \"name\": \"Breakup Songs\",\n                \"owner\": \"5e812db054660672fd699881\",\n                \"description\": \"I Have Terrible News for You and I’ll Tell You What Right After This 30 Second Ad for Sam Adams Summer Ale Ends and The Cure Starts Playing\",\n                \"category\": \"5e8076e6a9902a4328cc285c\",\n                \"id\": \"5e8088fa79844f135496ec7f\"\n            }\n        ],\n        \"limit\": 20,\n        \"offset\": 0\n    }\n}"
						}
					]
				},
				{
					"name": "Get a List of Featured Playlists",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"description": "access_token",
								"key": "Authorization",
								"type": "text",
								"value": "{{jwt}}"
							}
						],
						"url": {
							"raw": "{{URL}}api/v1/browse/featured-playlists/:{category_name}?limit=10&offset=0",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"v1",
								"browse",
								"featured-playlists",
								":{category_name}"
							],
							"query": [
								{
									"key": "limit",
									"value": "10",
									"description": "`Optional`. The maximum number of items to return. Default: 20. Minimum: 1."
								},
								{
									"key": "offset",
									"value": "0",
									"description": "`Optional`. The index of the first item to return. Default: 0 (the first object). Use with `limit` to get the next set of items."
								}
							],
							"variable": [
								{
									"key": "{category_name}",
									"value": "Alternative",
									"description": "the name of the category you want to retrieve"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get List of new-releases",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"description": "access_token",
								"key": "Authorization",
								"type": "text",
								"value": "{{jwt}}"
							}
						],
						"url": {
							"raw": "{{URL}}api/v1/browse/new-releases?offset=0&limit=12",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"v1",
								"browse",
								"new-releases"
							],
							"query": [
								{
									"key": "offset",
									"value": "0",
									"description": "`Optional`. The maximum number of items to return. Default: 12. Minimum: 1."
								},
								{
									"key": "limit",
									"value": "12",
									"description": "`Optional`. The index of the first item to return. Default: 0 (the first object). Use with `limit` to get the next set of items."
								}
							]
						}
					},
					"response": [
						{
							"name": "Get List of new-releases",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "access_token",
										"key": "Authorization",
										"type": "text",
										"value": "{{jwt}}"
									}
								],
								"url": {
									"raw": "{{URL}}api/v1/browse/new-releases?offset=0&limit=0",
									"host": [
										"{{URL}}api"
									],
									"path": [
										"v1",
										"browse",
										"new-releases"
									],
									"query": [
										{
											"key": "country",
											"value": "{{country_code}}",
											"disabled": true
										},
										{
											"key": "locale",
											"value": "{{language}}",
											"disabled": true
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Optional. The index of the first item to return. Default: 0 (the first object). Use with limit to get the next set of items."
										},
										{
											"key": "limit",
											"value": "0"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "ETag",
									"value": "W/\"62a-nlGqNhYwotORp6Xm62quhJ3lqa8\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "Date",
									"value": "Sun, 19 Apr 2020 21:36:07 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"albums\": {\n        \"total\": 4,\n        \"items\": [\n            {\n                \"tracks\": [\n                    \"5e7d2dc03429e24340ff1396\",\n                    \"5e7d2ddd3429e24340ff1397\",\n                    \"5e7d2e023429e24340ff1398\"\n                ],\n                \"releaseDate\": \"2020-04-19T21:36:01.444Z\",\n                \"_id\": \"5e701fdf2672a63a60573a06\",\n                \"name\": \"The Slow Rush\",\n                \"year\": 2020,\n                \"image\": \"https://thesymphonia.ddns.net/api/v1/images/albums/The-Slow-Rush.jpg\",\n                \"artist\": \"5e8137aa54660672fd699882\",\n                \"tracksCount\": 3,\n                \"id\": \"5e701fdf2672a63a60573a06\"\n            },\n            {\n                \"tracks\": [\n                    \"5e8a1e767937ec4d40c6debc\",\n                    \"5e8a1e937937ec4d40c6debd\",\n                    \"5e8a1e9a7937ec4d40c6debe\"\n                ],\n                \"releaseDate\": \"2020-04-19T21:36:01.444Z\",\n                \"_id\": \"5e794163c01c024ecc3c31d3\",\n                \"name\": \"Violent Rains\",\n                \"year\": 2015,\n                \"image\": \"https://thesymphonia.ddns.net/api/v1/images/albums/Violent-Rains.jpg\",\n                \"artist\": \"5e84b966681ae439edfc1d6f\",\n                \"tracksCount\": 3,\n                \"id\": \"5e794163c01c024ecc3c31d3\"\n            },\n            {\n                \"tracks\": [\n                    \"5e7d334860cd930408a5f995\",\n                    \"5e8a1e0f7937ec4d40c6deba\",\n                    \"5e8a1e727937ec4d40c6debb\"\n                ],\n                \"releaseDate\": \"2020-04-19T21:36:01.444Z\",\n                \"_id\": \"5e701f4d2672a63a60573a02\",\n                \"name\": \"El Pintor\",\n                \"year\": 2014,\n                \"image\": \"https://thesymphonia.ddns.net/api/v1/images/albums/El-Pintor.jpg\",\n                \"artist\": \"5e82a48054660672fd699883\",\n                \"tracksCount\": 3,\n                \"id\": \"5e701f4d2672a63a60573a02\"\n            },\n            {\n                \"tracks\": [\n                    \"5e8a1ea07937ec4d40c6debf\",\n                    \"5e8a37d0d56ea252c3860a1a\",\n                    \"5e8a39f24e11cd46c8bde654\"\n                ],\n                \"releaseDate\": \"2020-04-19T21:36:01.444Z\",\n                \"_id\": \"5e89f33375bcc40cc4b5a736\",\n                \"name\": \"TRST\",\n                \"year\": 2012,\n                \"image\": \"https://thesymphonia.ddns.net/api/v1/images/albums/TRST.jpg\",\n                \"artist\": \"5e8b6d866253cb184eaac150\",\n                \"tracksCount\": 3,\n                \"id\": \"5e89f33375bcc40cc4b5a736\"\n            }\n        ],\n        \"limit\": 20,\n        \"offset\": 0,\n        \"next\": null,\n        \"previous\": null,\n        \"href\": \"http://localhost:5000/api/v1/browse/new-releases\"\n    }\n}"
						}
					]
				},
				{
					"name": "Create A category",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c19eb97f-4bbe-4d9f-88d7-3db3d9231a6f",
								"exec": [
									"h = parseInt(pm.environment.get(\"lNum\")); ",
									"pm.environment.set(\"lNum\", h + 1 );"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"description": "access_token",
								"key": "Authorization",
								"type": "text",
								"value": "{{jwt}}",
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman."
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "",
									"type": "text",
									"disabled": true
								},
								{
									"key": "icons",
									"type": "file",
									"src": [
										"/E:/DuckUML.JPG",
										"/E:/images.jpg"
									],
									"disabled": true
								},
								{
									"key": "icon",
									"type": "file",
									"src": "/E:/speed net.png",
									"disabled": true
								},
								{
									"key": "icon_md",
									"type": "file",
									"src": "/E:/speed net.png",
									"disabled": true
								},
								{
									"key": "icon_lg",
									"type": "file",
									"src": "/E:/DuckUML.JPG",
									"disabled": true
								},
								{
									"key": "id",
									"value": "haha haha",
									"type": "text",
									"disabled": true
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{url}}api/v1/browse/categories/",
							"host": [
								"{{url}}api"
							],
							"path": [
								"v1",
								"browse",
								"categories",
								""
							]
						}
					},
					"response": [
						{
							"name": "Create A category",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "access_token",
										"key": "Authorization",
										"type": "text",
										"value": "{{jwt}}",
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman."
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "name",
											"value": "rocky has {{lNum}}",
											"type": "text"
										},
										{
											"key": "icons",
											"type": "file",
											"src": [
												"/E:/DuckUML.JPG",
												"/E:/images.jpg"
											],
											"disabled": true
										},
										{
											"key": "icon",
											"type": "file",
											"src": "/E:/speed net.png"
										},
										{
											"key": "icon_md",
											"type": "file",
											"src": "/E:/speed net.png",
											"disabled": true
										},
										{
											"key": "icon_lg",
											"type": "file",
											"src": "/E:/DuckUML.JPG",
											"disabled": true
										},
										{
											"key": "id",
											"value": "haha haha",
											"type": "text",
											"disabled": true
										}
									],
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}api/v1/browse/categories/?test=test",
									"host": [
										"{{url}}api"
									],
									"path": [
										"v1",
										"browse",
										"categories",
										""
									],
									"query": [
										{
											"key": "country",
											"value": "{{country_code}}",
											"description": "\tOptional. A country: an ISO 3166-1 alpha-2 country code. Provide this parameter if you want to narrow the list of returned categories to those relevant to a particular country. If omitted, the returned items will be globally relevant.",
											"disabled": true
										},
										{
											"key": "locale",
											"value": "{{language}}",
											"disabled": true
										},
										{
											"key": "test",
											"value": "test"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "1000"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "997"
								},
								{
									"key": "Date",
									"value": "Sat, 04 Apr 2020 07:59:04 GMT"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1585990596"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "229"
								},
								{
									"key": "ETag",
									"value": "W/\"e5-S94hfcMlmmUVQ+ztKKDb7bM5SLE\""
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"category\": {\n        \"icons\": [\n            {\n                \"url\": \"http://localhost:3000/api/v1/browse/categories/images/rocky-has-34.png\",\n                \"width\": 1355,\n                \"heght\": 1027\n            }\n        ],\n        \"_id\": \"5e883e48c808fd1aa40ad1f8\",\n        \"name\": \"rocky has 34\",\n        \"id\": \"rocky-has-34\",\n        \"__v\": 0,\n        \"href\": \"totot\"\n    }\n}"
						}
					]
				},
				{
					"name": "Get List of Artists",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"description": "access_token",
								"key": "Authorization",
								"type": "text",
								"value": "{{jwt}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{URL}}api/v1/browse/artists?limit=10&offset=0",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"v1",
								"browse",
								"artists"
							],
							"query": [
								{
									"key": "limit",
									"value": "10",
									"description": "`Optional`. The maximum number of items to return. Default: 20. Minimum: 1."
								},
								{
									"key": "offset",
									"value": "0",
									"description": "`Optional`. The index of the first item to return. Default: 0 (the first object). Use with `limit` to get the next set of items."
								}
							]
						}
					},
					"response": [
						{
							"name": "Get List of Artists",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "access_token",
										"key": "Authorization",
										"type": "text",
										"value": "{{jwt}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{URL}}api/v1/browse/artists",
									"host": [
										"{{URL}}api"
									],
									"path": [
										"v1",
										"browse",
										"artists"
									],
									"query": [
										{
											"key": "country",
											"value": "{{country_code}}",
											"disabled": true
										},
										{
											"key": "locale",
											"value": "{{language}}",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "10",
											"description": "Optional. The maximum number of items to return. Default: 20. Minimum: 1. Maximum: 50.\n",
											"disabled": true
										},
										{
											"key": "offset",
											"value": "10",
											"description": "Optional. The index of the first item to return. Default: 0 (the first object). Use with limit to get the next set of items.",
											"disabled": true
										},
										{
											"key": "hi",
											"value": "test",
											"description": "test",
											"disabled": true
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "ETag",
									"value": "W/\"1ae7-XvTaV39jrXYqYaQOEb6gZBC2tZk\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "Date",
									"value": "Tue, 07 Apr 2020 20:55:13 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"artists\": {\n        \"total\": 20,\n        \"next\": \"http://localhost:3000/api/v1/browse/artists?offset=20&limit=20\",\n        \"previous\": null,\n        \"href\": \"http://localhost:3000/api/v1/browse/artists?offset=0&limit=20\",\n        \"items\": [\n            {\n                \"followedUsers\": [],\n                \"tracks\": [\n                    \"5e7d2dc03429e24340ff1396\",\n                    \"5e7d2ddd3429e24340ff1397\",\n                    \"5e7d2e023429e24340ff1398\"\n                ],\n                \"ownedPlaylists\": [],\n                \"followedAlbums\": [],\n                \"followedTracks\": [],\n                \"_id\": \"5e8137aa54660672fd699882\",\n                \"email\": \"test3@test.com\",\n                \"name\": \"Tame Impala\",\n                \"dateOfBirth\": \"1978-06-25T00:00:00.000Z\",\n                \"gender\": \"male\",\n                \"type\": \"artist\",\n                \"imageUrl\": \"https://zasymphonia.ddns.net/api/v1/images/users/Tame-Impala.jpg\"\n            },\n            {\n                \"followedUsers\": [],\n                \"tracks\": [\n                    \"5e8a1ea07937ec4d40c6debf\",\n                    \"5e8a37d0d56ea252c3860a1a\",\n                    \"5e8a39f24e11cd46c8bde654\"\n                ],\n                \"ownedPlaylists\": [],\n                \"followedAlbums\": [],\n                \"followedTracks\": [],\n                \"_id\": \"5e80fd1684c71f6ffb534a08\",\n                \"email\": \"test6@test.com\",\n                \"name\": \"TR/ST\",\n                \"dateOfBirth\": \"1985-12-05T00:00:00.000Z\",\n                \"gender\": \"male\",\n                \"type\": \"artist\",\n                \"imageUrl\": \"https://zasymphonia.ddns.net/api/v1/images/users/tr-st.jpg\"\n            },\n            {\n                \"followedUsers\": [],\n                \"tracks\": [],\n                \"ownedPlaylists\": [],\n                \"followedAlbums\": [],\n                \"followedTracks\": [],\n                \"_id\": \"5e8c73d82a0e4614b88a4ed0\",\n                \"email\": \"test8@test.com\",\n                \"name\": \"Austra\",\n                \"dateOfBirth\": \"1980-09-09T00:00:00.000Z\",\n                \"gender\": \"female\",\n                \"type\": \"artist\",\n                \"imageUrl\": \"https://zasymphonia.ddns.net/api/v1/images/users/Austra.jpg\"\n            },\n            {\n                \"followedUsers\": [],\n                \"tracks\": [],\n                \"ownedPlaylists\": [],\n                \"followedAlbums\": [],\n                \"followedTracks\": [],\n                \"_id\": \"5e8c7572e37ac11ac4f01356\",\n                \"email\": \"test9@test.com\",\n                \"name\": \"Boy Harsher\",\n                \"dateOfBirth\": \"1988-05-09T00:00:00.000Z\",\n                \"gender\": \"female\",\n                \"type\": \"artist\",\n                \"imageUrl\": \"https://zasymphonia.ddns.net/api/v1/images/users/Boy-Harsher.jpg\"\n            },\n            {\n                \"followedUsers\": [],\n                \"tracks\": [],\n                \"ownedPlaylists\": [],\n                \"followedAlbums\": [],\n                \"followedTracks\": [],\n                \"_id\": \"5e8c75c4e37ac11ac4f01357\",\n                \"email\": \"test10@test.com\",\n                \"name\": \"Chairlift\",\n                \"dateOfBirth\": \"1987-05-10T00:00:00.000Z\",\n                \"gender\": \"female\",\n                \"type\": \"artist\",\n                \"imageUrl\": \"https://zasymphonia.ddns.net/api/v1/images/users/Chairlift.jpg\"\n            },\n            {\n                \"followedUsers\": [],\n                \"tracks\": [],\n                \"ownedPlaylists\": [],\n                \"followedAlbums\": [],\n                \"followedTracks\": [],\n                \"_id\": \"5e8c7612e37ac11ac4f01358\",\n                \"email\": \"test11@test.com\",\n                \"name\": \"Cigarettes After Sex\",\n                \"dateOfBirth\": \"1997-05-16T00:00:00.000Z\",\n                \"gender\": \"male\",\n                \"type\": \"artist\",\n                \"imageUrl\": \"https://zasymphonia.ddns.net/api/v1/images/users/Cigarettes-After-Sex.jpg\"\n            },\n            {\n                \"followedUsers\": [],\n                \"tracks\": [],\n                \"ownedPlaylists\": [],\n                \"followedAlbums\": [],\n                \"followedTracks\": [],\n                \"_id\": \"5e8c7669e37ac11ac4f01359\",\n                \"email\": \"test12@test.com\",\n                \"name\": \"Clario\",\n                \"dateOfBirth\": \"1997-05-16T00:00:00.000Z\",\n                \"gender\": \"female\",\n                \"type\": \"artist\",\n                \"imageUrl\": \"https://zasymphonia.ddns.net/api/v1/images/users/Clario.jpg\"\n            },\n            {\n                \"followedUsers\": [],\n                \"tracks\": [],\n                \"ownedPlaylists\": [],\n                \"followedAlbums\": [],\n                \"followedTracks\": [],\n                \"_id\": \"5e8c769ce37ac11ac4f0135a\",\n                \"email\": \"test13@test.com\",\n                \"name\": \"Crystal Castles\",\n                \"dateOfBirth\": \"1997-05-16T00:00:00.000Z\",\n                \"gender\": \"female\",\n                \"type\": \"artist\",\n                \"imageUrl\": \"https://zasymphonia.ddns.net/api/v1/images/users/Crystal-Castles.jpg\"\n            },\n            {\n                \"followedUsers\": [],\n                \"tracks\": [],\n                \"ownedPlaylists\": [],\n                \"followedAlbums\": [],\n                \"followedTracks\": [],\n                \"_id\": \"5e8c76d5e37ac11ac4f0135b\",\n                \"email\": \"test14@test.com\",\n                \"name\": \"Current Joys\",\n                \"dateOfBirth\": \"1987-07-16T00:00:00.000Z\",\n                \"gender\": \"male\",\n                \"type\": \"artist\",\n                \"imageUrl\": \"https://zasymphonia.ddns.net/api/v1/images/users/Current-Joys.jpg\"\n            },\n            {\n                \"followedUsers\": [],\n                \"tracks\": [],\n                \"ownedPlaylists\": [],\n                \"followedAlbums\": [],\n                \"followedTracks\": [],\n                \"_id\": \"5e8c770de37ac11ac4f0135c\",\n                \"email\": \"test15@test.com\",\n                \"name\": \"Drab Majesty\",\n                \"dateOfBirth\": \"1987-07-16T00:00:00.000Z\",\n                \"gender\": \"male\",\n                \"type\": \"artist\",\n                \"imageUrl\": \"https://zasymphonia.ddns.net/api/v1/images/users/Drab-Majesty.jpg\"\n            },\n            {\n                \"followedUsers\": [],\n                \"tracks\": [],\n                \"ownedPlaylists\": [],\n                \"followedAlbums\": [],\n                \"followedTracks\": [],\n                \"_id\": \"5e8c7746e37ac11ac4f0135d\",\n                \"email\": \"test16@test.com\",\n                \"name\": \"Frank Ocean\",\n                \"dateOfBirth\": \"1991-07-16T00:00:00.000Z\",\n                \"gender\": \"male\",\n                \"type\": \"artist\",\n                \"imageUrl\": \"https://zasymphonia.ddns.net/api/v1/images/users/Frank-Ocean.jpg\"\n            },\n            {\n                \"followedUsers\": [],\n                \"tracks\": [],\n                \"ownedPlaylists\": [],\n                \"followedAlbums\": [],\n                \"followedTracks\": [],\n                \"_id\": \"5e8c7786e37ac11ac4f0135e\",\n                \"email\": \"test17@test.com\",\n                \"name\": \"Joji\",\n                \"dateOfBirth\": \"1995-07-16T00:00:00.000Z\",\n                \"gender\": \"male\",\n                \"type\": \"artist\",\n                \"imageUrl\": \"https://zasymphonia.ddns.net/api/v1/images/users/Joji.jpg\"\n            },\n            {\n                \"followedUsers\": [],\n                \"tracks\": [],\n                \"ownedPlaylists\": [],\n                \"followedAlbums\": [],\n                \"followedTracks\": [],\n                \"_id\": \"5e8c77c1e37ac11ac4f0135f\",\n                \"email\": \"test18@test.com\",\n                \"name\": \"Lana Del Rey\",\n                \"dateOfBirth\": \"1985-08-16T00:00:00.000Z\",\n                \"gender\": \"female\",\n                \"type\": \"artist\",\n                \"imageUrl\": \"https://zasymphonia.ddns.net/api/v1/images/users/Lana-Del-Rey.jpg\"\n            },\n            {\n                \"followedUsers\": [],\n                \"tracks\": [],\n                \"ownedPlaylists\": [],\n                \"followedAlbums\": [],\n                \"followedTracks\": [],\n                \"_id\": \"5e8c780ae37ac11ac4f01360\",\n                \"email\": \"test19@test.com\",\n                \"name\": \"Lebanon Hanover\",\n                \"dateOfBirth\": \"1995-08-16T00:00:00.000Z\",\n                \"gender\": \"female\",\n                \"type\": \"artist\",\n                \"imageUrl\": \"https://zasymphonia.ddns.net/api/v1/images/users/Lebanon-Hanover.jpg\"\n            },\n            {\n                \"followedUsers\": [],\n                \"tracks\": [],\n                \"ownedPlaylists\": [],\n                \"followedAlbums\": [],\n                \"followedTracks\": [],\n                \"_id\": \"5e8c7843e37ac11ac4f01361\",\n                \"email\": \"test20@test.com\",\n                \"name\": \"Lil Peep\",\n                \"dateOfBirth\": \"1998-08-16T00:00:00.000Z\",\n                \"gender\": \"male\",\n                \"type\": \"artist\",\n                \"imageUrl\": \"https://zasymphonia.ddns.net/api/v1/images/users/Lil-Peep.jpg\"\n            },\n            {\n                \"followedUsers\": [],\n                \"tracks\": [],\n                \"ownedPlaylists\": [],\n                \"followedAlbums\": [],\n                \"followedTracks\": [],\n                \"_id\": \"5e8c787de37ac11ac4f01362\",\n                \"email\": \"test21@test.com\",\n                \"name\": \"Man Without Country\",\n                \"dateOfBirth\": \"1986-04-11T00:00:00.000Z\",\n                \"gender\": \"male\",\n                \"type\": \"artist\",\n                \"imageUrl\": \"https://zasymphonia.ddns.net/api/v1/images/users/Man-Without-Country.jpg\"\n            },\n            {\n                \"followedUsers\": [],\n                \"tracks\": [],\n                \"ownedPlaylists\": [],\n                \"followedAlbums\": [],\n                \"followedTracks\": [],\n                \"_id\": \"5e8c78c9e37ac11ac4f01363\",\n                \"email\": \"test22@test.com\",\n                \"name\": \"Men I Trust\",\n                \"dateOfBirth\": \"1991-04-01T00:00:00.000Z\",\n                \"gender\": \"female\",\n                \"type\": \"artist\",\n                \"imageUrl\": \"https://zasymphonia.ddns.net/api/v1/images/users/Men-I-Trust.jpg\"\n            },\n            {\n                \"followedUsers\": [],\n                \"tracks\": [],\n                \"ownedPlaylists\": [],\n                \"followedAlbums\": [],\n                \"followedTracks\": [],\n                \"_id\": \"5e8c7914e37ac11ac4f01364\",\n                \"email\": \"test23@test.com\",\n                \"name\": \"Pastel Ghost\",\n                \"dateOfBirth\": \"1995-04-01T00:00:00.000Z\",\n                \"gender\": \"female\",\n                \"type\": \"artist\",\n                \"imageUrl\": \"https://zasymphonia.ddns.net/api/v1/images/users/Pastel-Ghost.jpg\"\n            },\n            {\n                \"followedUsers\": [],\n                \"tracks\": [],\n                \"ownedPlaylists\": [],\n                \"followedAlbums\": [],\n                \"followedTracks\": [],\n                \"_id\": \"5e8c7969e37ac11ac4f01365\",\n                \"email\": \"test24@test.com\",\n                \"name\": \"Purity Ring\",\n                \"dateOfBirth\": \"1997-04-01T00:00:00.000Z\",\n                \"gender\": \"female\",\n                \"type\": \"artist\",\n                \"imageUrl\": \"https://zasymphonia.ddns.net/api/v1/images/users/Purity-Ring.jpg\"\n            },\n            {\n                \"followedUsers\": [],\n                \"tracks\": [],\n                \"ownedPlaylists\": [],\n                \"followedAlbums\": [],\n                \"followedTracks\": [],\n                \"_id\": \"5e8c7994e37ac11ac4f01366\",\n                \"email\": \"test25@test.com\",\n                \"name\": \"Sleep Party People\",\n                \"dateOfBirth\": \"1989-07-01T00:00:00.000Z\",\n                \"gender\": \"male\",\n                \"type\": \"artist\",\n                \"imageUrl\": \"https://zasymphonia.ddns.net/api/v1/images/users/Sleep-Party-People.jpg\"\n            }\n        ],\n        \"limit\": 20,\n        \"offset\": 0\n    }\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "follow",
			"item": [
				{
					"name": "Check if Current User Follows Artists or Users",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"description": "Required. A valid access token from the Spotify Accounts service: see the Web API Authorization Guide for details. The user-library-read scope must have been authorized by the user.\n\n",
								"key": "Authorization",
								"type": "text",
								"value": "{{jwt}}"
							}
						],
						"url": {
							"raw": "{{URL}}api/v1/me/following/contains?ids=5e8c7ab693ec63187898e827,5e84b966681ae439edfc1d6f,5e812a3454660672fd699880",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"v1",
								"me",
								"following",
								"contains"
							],
							"query": [
								{
									"key": "ids",
									"value": "5e8c7ab693ec63187898e827,5e84b966681ae439edfc1d6f,5e812a3454660672fd699880",
									"description": "comma separated `Symphonia` ids for the documents you want to check"
								}
							]
						}
					},
					"response": [
						{
							"name": "Check if Current User Follows Artists or Users",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Required. A valid access token from the Spotify Accounts service: see the Web API Authorization Guide for details. The user-library-read scope must have been authorized by the user.\n\n",
										"key": "Authorization",
										"type": "text",
										"value": "{{jwt}}"
									}
								],
								"url": {
									"raw": "{{URL}}api/v1/me/following/contains?ids=5e8c7ab693ec63187898e827,5e84b966681ae439edfc1d6f,5e812a3454660672fd699880",
									"host": [
										"{{URL}}api"
									],
									"path": [
										"v1",
										"me",
										"following",
										"contains"
									],
									"query": [
										{
											"key": "type",
											"value": "artist",
											"description": "Required. The ID type: either artist or user.\n\n",
											"disabled": true
										},
										{
											"key": "ids",
											"value": "5e8c7ab693ec63187898e827,5e84b966681ae439edfc1d6f,5e812a3454660672fd699880"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "17"
								},
								{
									"key": "ETag",
									"value": "W/\"11-79VXOo+MJ/1NJrdnxxafGHUqJcc\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Date",
									"value": "Tue, 07 Apr 2020 20:32:52 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "[\n    false,\n    true,\n    true\n]"
						}
					]
				},
				{
					"name": "Check if Users Follow a Playlist",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{jwt}}"
							},
							{
								"description": "Required. A valid access token from the Spotify Accounts service: see the Web API Authorization Guide for details.\nFollowing a playlist can be done publicly or privately. Checking if a user publicly follows a playlist doesn’t require any scopes; if the user is publicly following the playlist, this endpoint returns true.\nChecking if the user is privately following a playlist is only possible for the current user when that user has granted access to the playlist-read-private scope. See Using Scopes.",
								"key": "",
								"type": "text",
								"value": ""
							}
						],
						"url": {
							"raw": "{{URL}}api/v1/playlists/:{playlist_id}/followers/contains?ids=5e7e58265d4cc2517c398e9b,5e7s58265d4cc2517c398e9b",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"v1",
								"playlists",
								":{playlist_id}",
								"followers",
								"contains"
							],
							"query": [
								{
									"key": "ids",
									"value": "5e7e58265d4cc2517c398e9b,5e7s58265d4cc2517c398e9b",
									"description": "comma separated `Symphonia` ids for the document you want to check"
								}
							],
							"variable": [
								{
									"key": "{playlist_id}",
									"value": "5e7969965146d92e98ac3ef7",
									"description": "The `Symphonia` id for the document you want to retrieve"
								}
							]
						}
					},
					"response": [
						{
							"name": "Check if Users Follow a Playlist",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "{{jwt}}"
									},
									{
										"description": "Required. A valid access token from the Spotify Accounts service: see the Web API Authorization Guide for details.\nFollowing a playlist can be done publicly or privately. Checking if a user publicly follows a playlist doesn’t require any scopes; if the user is publicly following the playlist, this endpoint returns true.\nChecking if the user is privately following a playlist is only possible for the current user when that user has granted access to the playlist-read-private scope. See Using Scopes.",
										"key": "",
										"type": "text",
										"value": ""
									}
								],
								"url": {
									"raw": "{{URL}}api/v1/playlists/5e7969965146d92e98ac3ef7/followers/contains?ids=5e7e58265d4cc2517c398e9b,5e7s58265d4cc2517c398e9b",
									"host": [
										"{{URL}}api"
									],
									"path": [
										"v1",
										"playlists",
										"5e7969965146d92e98ac3ef7",
										"followers",
										"contains"
									],
									"query": [
										{
											"key": "ids",
											"value": "5e7e58265d4cc2517c398e9b,5e7s58265d4cc2517c398e9b"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "1000"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "999"
								},
								{
									"key": "Date",
									"value": "Sat, 04 Apr 2020 08:03:43 GMT"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1585991021"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "13"
								},
								{
									"key": "ETag",
									"value": "W/\"d-VHM8HlfjJcD4R6oEGdNv5bP7AI4\""
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "[\n    false,\n    false\n]"
						}
					]
				},
				{
					"name": "Follow Artists or Users",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"description": "Required. A valid access token from the Spotify Accounts service: see the Web API Authorization Guide for details. The access token must have been issued on behalf of the current user. Modifying the list of artists or users the current user follows requires authorization of the user-follow-modify scope. See Using Scopes.\n",
								"key": "Authorization",
								"type": "text",
								"value": "{{jwt}}"
							},
							{
								"warning": "Key contains invalid whitespace characters.",
								"description": "Required if IDs are passed in the request body, otherwise ignored. The content type of the request body: application/json.\n",
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{URL}}api/v1/me/following?ids=5e7d349c852bb431c43d77da",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"v1",
								"me",
								"following"
							],
							"query": [
								{
									"key": "ids",
									"value": "5e7d349c852bb431c43d77da",
									"description": "comma separated `Symphonia` ids for the document you want to follow"
								}
							]
						}
					},
					"response": [
						{
							"name": "Follow Artists or Users",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Required. A valid access token from the Spotify Accounts service: see the Web API Authorization Guide for details. The access token must have been issued on behalf of the current user. Modifying the list of artists or users the current user follows requires authorization of the user-follow-modify scope. See Using Scopes.\n",
										"key": "Authorization",
										"type": "text",
										"value": "{{jwt}}"
									},
									{
										"warning": "Key contains invalid whitespace characters.",
										"description": "Required if IDs are passed in the request body, otherwise ignored. The content type of the request body: application/json.\n",
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{URL}}api/v1/me/following?ids=5e7d349c852bb431c43d77da",
									"host": [
										"{{URL}}api"
									],
									"path": [
										"v1",
										"me",
										"following"
									],
									"query": [
										{
											"key": "ids",
											"value": "5e7d349c852bb431c43d77da"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "1000"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "998"
								},
								{
									"key": "Date",
									"value": "Sat, 04 Apr 2020 08:04:07 GMT"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1585991021"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Follow a Playlist",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"description": "Required. A valid access token from the Spotify Accounts service: see the Web API Authorization Guide for details. The access token must have been issued on behalf of the current user. Modifying the list of artists or users the current user follows requires authorization of the user-follow-modify scope. See Using Scopes.\n",
								"key": "Authorization",
								"type": "text",
								"value": "{{jwt}}"
							},
							{
								"warning": "Key contains invalid whitespace characters.",
								"description": "Required if IDs are passed in the request body, otherwise ignored. The content type of the request body: application/json.\n",
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{URL}}api/v1/playlists/:{playlist_id}/followers",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"v1",
								"playlists",
								":{playlist_id}",
								"followers"
							],
							"variable": [
								{
									"key": "{playlist_id}",
									"value": "5e7969965146d92e98ac3ef7",
									"description": "The `Symphonia` id for the document you want to retrieve"
								}
							]
						}
					},
					"response": [
						{
							"name": "Follow a Playlist",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Required. A valid access token from the Spotify Accounts service: see the Web API Authorization Guide for details. The access token must have been issued on behalf of the current user. Modifying the list of artists or users the current user follows requires authorization of the user-follow-modify scope. See Using Scopes.\n",
										"key": "Authorization",
										"type": "text",
										"value": "{{jwt}}"
									},
									{
										"warning": "Key contains invalid whitespace characters.",
										"description": "Required if IDs are passed in the request body, otherwise ignored. The content type of the request body: application/json.\n",
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{URL}}api/v1/playlists/5e7969965146d92e98ac3ef7/followers",
									"host": [
										"{{URL}}api"
									],
									"path": [
										"v1",
										"playlists",
										"5e7969965146d92e98ac3ef7",
										"followers"
									],
									"query": [
										{
											"key": "type",
											"value": "artist",
											"description": "Required. The ID type: either artist or user.\n",
											"disabled": true
										},
										{
											"key": "ids",
											"value": "{{ids}}",
											"description": "Optional. A comma-separated list of the artist or the user Spotify IDs. For example: ids=74ASZWbe4lXaubB36ztrGX,08td7MxkoHQkXnWAYD8d6Q. A maximum of 50 IDs can be sent in one request.\n",
											"disabled": true
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "1000"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "997"
								},
								{
									"key": "Date",
									"value": "Sat, 04 Apr 2020 08:04:35 GMT"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1585991021"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Content-Length",
									"value": "0"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get User's Followed Artists",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"description": "Required. A valid access token from the Spotify Accounts service: see the Web API Authorization Guide for details. The access token must have been issued on behalf of the current user. Modifying the list of artists or users the current user follows requires authorization of the user-follow-modify scope. See Using Scopes.\n",
								"key": "Authorization",
								"type": "text",
								"value": "{{jwt}}"
							},
							{
								"warning": "Key contains invalid whitespace characters.",
								"description": "Required if IDs are passed in the request body, otherwise ignored. The content type of the request body: application/json.\n",
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{URL}}api/v1/me/following?limit=2&after=5e8c77c1e37ac11ac4f0135f",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"v1",
								"me",
								"following"
							],
							"query": [
								{
									"key": "limit",
									"value": "2",
									"description": "`Optional`. The maximum number of items to return. Default: 20. Minimum: 1."
								},
								{
									"key": "after",
									"value": "5e8c77c1e37ac11ac4f0135f",
									"description": "`Optional`. The last artist ID retrieved from the previous request."
								}
							]
						}
					},
					"response": [
						{
							"name": "Get User's Followed Artists",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Required. A valid access token from the Spotify Accounts service: see the Web API Authorization Guide for details. The access token must have been issued on behalf of the current user. Modifying the list of artists or users the current user follows requires authorization of the user-follow-modify scope. See Using Scopes.\n",
										"key": "Authorization",
										"type": "text",
										"value": "{{jwt}}"
									},
									{
										"warning": "Key contains invalid whitespace characters.",
										"description": "Required if IDs are passed in the request body, otherwise ignored. The content type of the request body: application/json.\n",
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{URL}}api/v1/me/following?limit=2",
									"host": [
										"{{URL}}api"
									],
									"path": [
										"v1",
										"me",
										"following"
									],
									"query": [
										{
											"key": "type",
											"value": "artist",
											"description": "Required. The ID type: either artist or user.\n",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "2"
										},
										{
											"key": "after",
											"value": "5e8c7572e37ac11ac4f01356",
											"disabled": true
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.0 (Ubuntu)"
								},
								{
									"key": "Date",
									"value": "Mon, 08 Jun 2020 22:22:05 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "ETag",
									"value": "W/\"c81-Yo34kM+ZSSKphdZ/ylnSht3AkXk\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"artists\": {\n        \"items\": [\n            {\n                \"queue\": {\n                    \"currentlyPlaying\": {\n                        \"currentTrack\": \"https://thesymphonia.ddns.net/api/v1/me/player/tracks/5e7d2dc03429e24340ff1396\",\n                        \"device\": \"5edea1df2bca3458efd204d8\"\n                    },\n                    \"queueTracks\": [\n                        \"https://thesymphonia.ddns.net/api/v1/me/player/tracks/5e7d2dc03429e24340ff1396\",\n                        \"https://thesymphonia.ddns.net/api/v1/me/player/tracks/5e7d2e023429e24340ff1398\"\n                    ],\n                    \"previousTrack\": null,\n                    \"repeat\": false,\n                    \"shuffle\": false,\n                    \"play\": false,\n                    \"repeatOnce\": false,\n                    \"nextTrack\": \"https://thesymphonia.ddns.net/api/v1/me/player/tracks/5e7d2e023429e24340ff1398\",\n                    \"devices\": [\n                        {\n                            \"_id\": \"5edea1df2bca3458efd204d8\",\n                            \"devicesName\": \"Chrome\"\n                        }\n                    ],\n                    \"contextId\": \"5e701fdf2672a63a60573a06\",\n                    \"contextType\": \"album\"\n                },\n                \"premium\": true,\n                \"followedUsers\": [\n                    \"5e8125dc54660672fd69987f\"\n                ],\n                \"tracks\": [\n                    \"5e8a1e767937ec4d40c6debc\",\n                    \"5e8a1e937937ec4d40c6debd\",\n                    \"5e8a1e727937ec4d40c6debb\"\n                ],\n                \"ownedPlaylists\": [\n                    \"5ed2385f2e48cd07cff2be74\"\n                ],\n                \"followedAlbums\": [\n                    \"5e701fdf2672a63a60573a06\"\n                ],\n                \"followedTracks\": [\n                    \"5e7d2ddd3429e24340ff1397\",\n                    \"5e8a1e767937ec4d40c6debc\",\n                    \"5e8a1e937937ec4d40c6debd\",\n                    \"5e8a1e9a7937ec4d40c6debe\"\n                ],\n                \"deleted\": false,\n                \"_id\": \"5e84b966681ae439edfc1d6f\",\n                \"email\": \"test5@test.com\",\n                \"name\": \"Minuit Machine\",\n                \"dateOfBirth\": \"1995-06-25T00:00:00.000Z\",\n                \"gender\": \"female\",\n                \"type\": \"artist\",\n                \"imageUrl\": \"https://thesymphonia.ddns.net/api/v1/images/users/f83c13d4a56066199627-1591442255593.jpg\",\n                \"__v\": 31,\n                \"last_login\": \"2020-06-08T20:38:52.646Z\",\n                \"playerToken\": \"ad1b694f37ea424c83cbc88b0b44880c8001aeb581fde562df648d50a11a646c\",\n                \"playerTokenExpires\": \"2020-06-08T20:58:55.018Z\"\n            },\n            {\n                \"queue\": {\n                    \"currentlyPlaying\": {\n                        \"currentTrack\": \"https://thesymphonia.ddns.net/api/v1/me/player/tracks/5e7d2ddd3429e24340ff1397\",\n                        \"device\": \"5ed26b531f57b719d6ce54c6\"\n                    },\n                    \"queueTracks\": [\n                        \"https://thesymphonia.ddns.net/api/v1/me/player/tracks/5e7d334860cd930408a5f995\",\n                        \"https://thesymphonia.ddns.net/api/v1/me/player/tracks/5e8a1e0f7937ec4d40c6deba\",\n                        \"https://thesymphonia.ddns.net/api/v1/me/player/tracks/5e8a1e727937ec4d40c6debb\"\n                    ],\n                    \"previousTrack\": null,\n                    \"repeat\": false,\n                    \"shuffle\": false,\n                    \"play\": false,\n                    \"repeatOnce\": false,\n                    \"nextTrack\": \"https://thesymphonia.ddns.net/api/v1/me/player/tracks/5e7d334860cd930408a5f995\",\n                    \"devices\": [\n                        {\n                            \"_id\": \"5ed26b531f57b719d6ce54c6\",\n                            \"devicesName\": \"Chrome\"\n                        }\n                    ]\n                },\n                \"premium\": false,\n                \"followedUsers\": [\n                    \"5e8125dc54660672fd69987f\",\n                    \"5e812a3454660672fd699880\"\n                ],\n                \"tracks\": [\n                    \"5e7d334860cd930408a5f995\",\n                    \"5e8a1e0f7937ec4d40c6deba\",\n                    \"5e8a1e727937ec4d40c6debb\"\n                ],\n                \"ownedPlaylists\": [\n                    \"5e8ddce727ab877b8e328712\",\n                    \"5e8ddee127ab877b8e328716\",\n                    \"5e8ddf1a27ab877b8e328718\",\n                    \"5e8ddf4127ab877b8e32871b\",\n                    \"5e8de0c627ab877b8e328733\",\n                    \"5e8de10827ab877b8e328734\",\n                    \"5e8de12e27ab877b8e328735\"\n                ],\n                \"followedAlbums\": [],\n                \"followedTracks\": [],\n                \"deleted\": false,\n                \"_id\": \"5e82a48054660672fd699883\",\n                \"email\": \"test4@test.com\",\n                \"name\": \"Interpol\",\n                \"dateOfBirth\": \"1979-12-25T00:00:00.000Z\",\n                \"gender\": \"male\",\n                \"type\": \"artist\",\n                \"imageUrl\": \"https://thesymphonia.ddns.net/api/v1/images/users/Interpol.jpg\",\n                \"__v\": 122,\n                \"last_login\": \"2020-05-30T14:18:57.432Z\",\n                \"playerToken\": \"239055c3bc7ccd8da858dddc40d56c447be6040ffa6a577d77586847b8c9b99a\",\n                \"playerTokenExpires\": \"2020-05-30T14:38:59.566Z\"\n            }\n        ]\n    },\n    \"limit\": 2,\n    \"total\": 2,\n    \"next\": \"https://thesymphonia.ddns.net/api/v1/me/following?limit=1&after=5e8c7572e37ac11ac4f01356\",\n    \"cursors\": {\n        \"after\": \"5e8c7572e37ac11ac4f01356\"\n    },\n    \"totalFollowed\": 29\n}"
						}
					]
				},
				{
					"name": "Unfollow Artists or Users",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"description": "Required. A valid access token from the Spotify Accounts service: see the Web API Authorization Guide for details. The access token must have been issued on behalf of the current user. Modifying the list of artists or users the current user follows requires authorization of the user-follow-modify scope. See Using Scopes.\n",
								"key": "Authorization",
								"type": "text",
								"value": "{{jwt}}"
							},
							{
								"description": "Required if IDs are passed in the request body, otherwise ignored. The content type of the request body: application/json.\n",
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{URL}}api/v1/me/following?ids=5e8c7c030fab001100e883fc",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"v1",
								"me",
								"following"
							],
							"query": [
								{
									"key": "ids",
									"value": "5e8c7c030fab001100e883fc",
									"description": "comma separated `Symphonia` ids for the document you want to unfollow"
								}
							]
						}
					},
					"response": [
						{
							"name": "Unfollow Artists or Users",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Required. A valid access token from the Spotify Accounts service: see the Web API Authorization Guide for details. The access token must have been issued on behalf of the current user. Modifying the list of artists or users the current user follows requires authorization of the user-follow-modify scope. See Using Scopes.\n",
										"key": "Authorization",
										"type": "text",
										"value": "{{jwt}}"
									},
									{
										"description": "Required if IDs are passed in the request body, otherwise ignored. The content type of the request body: application/json.\n",
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{URL}}api/v1/me/following?ids=5e7f799991f8ed09303e5076",
									"host": [
										"{{URL}}api"
									],
									"path": [
										"v1",
										"me",
										"following"
									],
									"query": [
										{
											"key": "ids",
											"value": "5e7f799991f8ed09303e5076"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "1000"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "999"
								},
								{
									"key": "Date",
									"value": "Sat, 04 Apr 2020 08:44:05 GMT"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1585993430"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unfollow Artists or Users",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Required. A valid access token from the Spotify Accounts service: see the Web API Authorization Guide for details. The access token must have been issued on behalf of the current user. Modifying the list of artists or users the current user follows requires authorization of the user-follow-modify scope. See Using Scopes.\n",
										"key": "Authorization",
										"type": "text",
										"value": "{{jwt}}"
									},
									{
										"description": "Required if IDs are passed in the request body, otherwise ignored. The content type of the request body: application/json.\n",
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{URL}}api/v1/me/following?ids=5e7f799991f8ed09303e5076",
									"host": [
										"{{URL}}api"
									],
									"path": [
										"v1",
										"me",
										"following"
									],
									"query": [
										{
											"key": "ids",
											"value": "5e7f799991f8ed09303e5076"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "1000"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "998"
								},
								{
									"key": "Date",
									"value": "Sat, 04 Apr 2020 08:51:13 GMT"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1585993530"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Unfollow a Playlist",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"description": "Required. A valid access token from the Spotify Accounts service: see the Web API Authorization Guide for details. The access token must have been issued on behalf of the current user. Modifying the list of artists or users the current user follows requires authorization of the user-follow-modify scope. See Using Scopes.\n",
								"key": "Authorization",
								"type": "text",
								"value": "{{jwt}}"
							},
							{
								"description": "Required if IDs are passed in the request body, otherwise ignored. The content type of the request body: application/json.\n",
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{URL}}api/v1/playlists/:{playlist_id}/followers",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"v1",
								"playlists",
								":{playlist_id}",
								"followers"
							],
							"variable": [
								{
									"key": "{playlist_id}",
									"value": "5e7969965146d92e98ac3ef7",
									"description": "The `Symphonia` id for the document you want to retrieve"
								}
							]
						}
					},
					"response": [
						{
							"name": "Unfollow a Playlist",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Required. A valid access token from the Spotify Accounts service: see the Web API Authorization Guide for details. The access token must have been issued on behalf of the current user. Modifying the list of artists or users the current user follows requires authorization of the user-follow-modify scope. See Using Scopes.\n",
										"key": "Authorization",
										"type": "text",
										"value": "{{jwt}}"
									},
									{
										"description": "Required if IDs are passed in the request body, otherwise ignored. The content type of the request body: application/json.\n",
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{URL}}api/v1/playlists/5e7969965146d92e98ac3ef7/followers",
									"host": [
										"{{URL}}api"
									],
									"path": [
										"v1",
										"playlists",
										"5e7969965146d92e98ac3ef7",
										"followers"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "1000"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "995"
								},
								{
									"key": "Date",
									"value": "Sat, 04 Apr 2020 08:25:45 GMT"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1585991899"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Content-Length",
									"value": "0"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get count of followed playlists",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}api/v1/me/following/playlists/count",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"v1",
								"me",
								"following",
								"playlists",
								"count"
							]
						}
					},
					"response": [
						{
							"name": "get count of followed playlists",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{URL}}api/v1/me/following/playlists/count",
									"host": [
										"{{URL}}api"
									],
									"path": [
										"v1",
										"me",
										"following",
										"playlists",
										"count"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "23"
								},
								{
									"key": "ETag",
									"value": "W/\"17-JPyRl7WzFnd0Ld/JrA2gn7RYpWE\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Date",
									"value": "Tue, 07 Apr 2020 20:57:14 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"FollowedPlaylists\": 4\n}"
						}
					]
				},
				{
					"name": "Get current user followed playlists",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}api/v1/me/following/playlists?limit=10&offset=0",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"v1",
								"me",
								"following",
								"playlists"
							],
							"query": [
								{
									"key": "limit",
									"value": "10",
									"description": "`Optional`. The maximum number of items to return. Default: 20. Minimum: 1."
								},
								{
									"key": "offset",
									"value": "0",
									"description": "`Optional`. The index of the first item to return. Default: 0 (the first object). Use with `limit` to get the next set of items."
								}
							]
						}
					},
					"response": [
						{
							"name": "Get current user followed playlists",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{URL}}api/v1/me/following/playlists?limit&offset",
									"host": [
										"{{URL}}api"
									],
									"path": [
										"v1",
										"me",
										"following",
										"playlists"
									],
									"query": [
										{
											"key": "limit",
											"value": null
										},
										{
											"key": "offset",
											"value": null
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "ETag",
									"value": "W/\"81e-eO8EQ01MDt97GRnJN/hes8Fzdt4\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "Date",
									"value": "Tue, 26 May 2020 19:31:13 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"playlists\": {\n        \"total\": 3,\n        \"items\": [\n            {\n                \"collaborative\": false,\n                \"images\": [\n                    \"https://thesymphonia.ddns.net/api/v1/images/playlists/playlist5.jpg\"\n                ],\n                \"public\": true,\n                \"tracks\": [\n                    \"5e8a39f24e11cd46c8bde654\",\n                    \"5e8a37d0d56ea252c3860a1a\",\n                    \"5e8a1ea07937ec4d40c6debf\",\n                    \"5e8a1e9a7937ec4d40c6debe\"\n                ],\n                \"followers\": [\n                    \"5e8125dc54660672fd69987f\",\n                    \"5e812db054660672fd699881\"\n                ],\n                \"deleted\": false,\n                \"_id\": \"5e8069722fcb0d35900c4d64\",\n                \"name\": \"At Work\",\n                \"owner\": {\n                    \"_id\": \"5e812a3454660672fd699880\",\n                    \"name\": \"user1\"\n                },\n                \"description\": \"My Earthly Vessel May Be Trapped in a Windowless, Fluorescent Hellscape but My Soul is Still Pantsless at My Apartment Listening to These Songs\",\n                \"category\": \"5e807517e478cf39b47bd1f0\",\n                \"tracksCount\": 4,\n                \"id\": \"5e8069722fcb0d35900c4d64\"\n            },\n            {\n                \"collaborative\": false,\n                \"images\": [\n                    \"https://thesymphonia.ddns.net/api/v1/images/playlists/playlist6.jpg\"\n                ],\n                \"public\": true,\n                \"tracks\": [\n                    \"5e8a39f24e11cd46c8bde654\",\n                    \"5e8a37d0d56ea252c3860a1a\",\n                    \"5e8a1ea07937ec4d40c6debf\",\n                    \"5e8a1e9a7937ec4d40c6debe\",\n                    \"5e8a1e937937ec4d40c6debd\",\n                    \"5e8a1e767937ec4d40c6debc\"\n                ],\n                \"followers\": [\n                    \"5e8125dc54660672fd69987f\"\n                ],\n                \"deleted\": false,\n                \"_id\": \"5e8078b0dbaafc18605cb029\",\n                \"name\": \"Power Workout\",\n                \"owner\": {\n                    \"_id\": \"5e812a3454660672fd699880\",\n                    \"name\": \"user1\"\n                },\n                \"description\": \"Pump Up Jams for Carrying Groceries Up to My Sixth Floor Walk-Up\",\n                \"category\": \"5e8076e6a9902a4328cc285c\",\n                \"tracksCount\": 6,\n                \"id\": \"5e8078b0dbaafc18605cb029\"\n            },\n            {\n                \"collaborative\": false,\n                \"images\": [\n                    \"https://thesymphonia.ddns.net/api/v1/images/playlists/playlist7.jpg\"\n                ],\n                \"public\": true,\n                \"tracks\": [\n                    \"5e8a1e767937ec4d40c6debc\",\n                    \"5e8a1e937937ec4d40c6debd\",\n                    \"5e8a1e9a7937ec4d40c6debe\"\n                ],\n                \"followers\": [\n                    \"5e8125dc54660672fd69987f\"\n                ],\n                \"deleted\": false,\n                \"_id\": \"5e8088fa79844f135496ec7f\",\n                \"name\": \"Breakup Songs\",\n                \"owner\": {\n                    \"_id\": \"5e812db054660672fd699881\",\n                    \"name\": \"user2\"\n                },\n                \"description\": \"I Have Terrible News for You and I’ll Tell You What Right After This 30 Second Ad for Sam Adams Summer Ale Ends and The Cure Starts Playing\",\n                \"category\": \"5e8076e6a9902a4328cc285c\",\n                \"tracksCount\": 3,\n                \"id\": \"5e8088fa79844f135496ec7f\"\n            }\n        ],\n        \"limit\": 20,\n        \"offset\": 0,\n        \"next\": null,\n        \"previous\": null,\n        \"href\": \"http://localhost:3000/api/v1/me/following/playlists\"\n    }\n}"
						}
					]
				},
				{
					"name": "Get Artist Followers",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}api/v1/Artists/:{artist_id}/followers",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"v1",
								"Artists",
								":{artist_id}",
								"followers"
							],
							"variable": [
								{
									"key": "{artist_id}",
									"value": "5e8137aa54660672fd699882",
									"description": "The `Symphonia` id for the document you want to retrieve"
								}
							]
						}
					},
					"response": [
						{
							"name": "Get Artist Followers",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{URL}}api/v1/Artists/5e82a48054660672fd699883/followers",
									"host": [
										"{{URL}}api"
									],
									"path": [
										"v1",
										"Artists",
										"5e82a48054660672fd699883",
										"followers"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "ETag",
									"value": "W/\"52f-Rs7nprSuDDKdk0EZgV6gfyisoBw\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "Date",
									"value": "Tue, 07 Apr 2020 20:57:51 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"followers\": [\n        {\n            \"followedUsers\": [\n                \"5e84b966681ae439edfc1d6f\",\n                \"5e82a48054660672fd699883\",\n                \"5e812a3454660672fd699880\"\n            ],\n            \"tracks\": [],\n            \"ownedPlaylists\": [\n                \"5e7969965146d92e98ac3ef7\",\n                \"5e7ac3c7d43a2c49909c549c\",\n                \"5e805a8a3711912168602afa\",\n                \"5e875c15ba6ebe663fdbb2c1\"\n            ],\n            \"followedAlbums\": [\n                \"5e701f4d2672a63a60573a02\",\n                \"5e701fdf2672a63a60573a06\"\n            ],\n            \"followedTracks\": [],\n            \"_id\": \"5e8125dc54660672fd69987f\",\n            \"email\": \"generalmohamed1999@gmail.com\",\n            \"name\": \"Muhammad Ahmad Hesham\",\n            \"dateOfBirth\": \"1999-05-12T00:00:00.000Z\",\n            \"gender\": \"male\",\n            \"type\": \"user\",\n            \"last_login\": \"2020-04-06T10:21:58.141Z\",\n            \"passwordChangedAt\": \"2020-04-01T15:38:48.450Z\",\n            \"googleId\": \"googleId\",\n            \"imageGoogleUrl\": \"https://lh3.googleusercontent.com/a-/AOh14Gga4UgHOVM-hgdnV5Sv8OusgKzhsfmiYv5wEgSwxA\",\n            \"imageUrl\": \"https://zasymphonia.ddns.net/api/v1/images/users/default.png\"\n        },\n        {\n            \"followedUsers\": [\n                \"5e82a48054660672fd699883\",\n                \"5e8b6d866253cb184eaac150\"\n            ],\n            \"tracks\": [],\n            \"ownedPlaylists\": [\n                \"5e806865ef653f5a541e0b1d\",\n                \"5e8069722fcb0d35900c4d64\",\n                \"5e8078b0dbaafc18605cb029\",\n                \"5e8828df838d9835d207016d\"\n            ],\n            \"followedAlbums\": [\n                \"5e794163c01c024ecc3c31d3\"\n            ],\n            \"followedTracks\": [],\n            \"_id\": \"5e812a3454660672fd699880\",\n            \"email\": \"test1@test.com\",\n            \"name\": \"user1\",\n            \"dateOfBirth\": \"1999-06-25T00:00:00.000Z\",\n            \"gender\": \"female\",\n            \"type\": \"user\",\n            \"imageUrl\": \"https://zasymphonia.ddns.net/api/v1/images/users/default.png\"\n        }\n    ],\n    \"followers_count\": 2\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "library",
			"item": [
				{
					"name": " Check User's Saved Albums",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"description": "*Required*. A valid access token from the Symphonia Accounts service.\n\n",
								"key": "Authorization",
								"type": "text",
								"value": ""
							}
						],
						"url": {
							"raw": "{{URL}}api/v1/me/albums/contains?ids=5e701f4d2672a63a60573a02,5e701fdf2672a63a60573a05",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"v1",
								"me",
								"albums",
								"contains"
							],
							"query": [
								{
									"key": "ids",
									"value": "5e701f4d2672a63a60573a02,5e701fdf2672a63a60573a05",
									"description": "comma separated `Symphonia` ids for the document you want to check"
								}
							]
						}
					},
					"response": [
						{
							"name": " Check User's Saved Albums",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "*Required*. A valid access token from the Symphonia Accounts service.\n\n",
										"key": "Authorization",
										"type": "text",
										"value": ""
									}
								],
								"url": {
									"raw": "{{URL}}api/v1/me/albums/contains?ids=5e701f4d2672a63a60573a02,5e701fdf2672a63a60573a05",
									"host": [
										"{{URL}}api"
									],
									"path": [
										"v1",
										"me",
										"albums",
										"contains"
									],
									"query": [
										{
											"key": "ids",
											"value": "5e701f4d2672a63a60573a02,5e701fdf2672a63a60573a05",
											"description": "*Required*. A comma-separated list of the Symphonia IDs for the albums. Maximum: 50 IDs."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "12"
								},
								{
									"key": "ETag",
									"value": "W/\"c-L/azHS94l9YtOYJ8D2PfXJ9IGec\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Date",
									"value": "Tue, 07 Apr 2020 20:59:11 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "[\n    true,\n    false\n]"
						}
					]
				},
				{
					"name": "Check User's Saved Tracks",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"description": "*Required*. A valid access token from the Symphonia Accounts service.\n\n",
								"key": "Authorization",
								"type": "text",
								"value": ""
							}
						],
						"url": {
							"raw": "{{URL}}api/v1/me/tracks/contains?ids=5e7d2dc03429e24340ff1396,5e7d2ddd3429e24340ff1397,5e7d2dc03429e24340ff1396",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"v1",
								"me",
								"tracks",
								"contains"
							],
							"query": [
								{
									"key": "ids",
									"value": "5e7d2dc03429e24340ff1396,5e7d2ddd3429e24340ff1397,5e7d2dc03429e24340ff1396",
									"description": "comma separated `Symphonia` ids for the document you want to check"
								}
							]
						}
					},
					"response": [
						{
							"name": "Check User's Saved Tracks",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "*Required*. A valid access token from the Symphonia Accounts service.\n\n",
										"key": "Authorization",
										"type": "text",
										"value": ""
									}
								],
								"url": {
									"raw": "{{URL}}api/v1/me/tracks/contains?ids=5e7d2dc03429e24340ff1396,5e7d2ddd3429e24340ff1397,5e7d2dc03429e24340ff1396",
									"host": [
										"{{URL}}api"
									],
									"path": [
										"v1",
										"me",
										"tracks",
										"contains"
									],
									"query": [
										{
											"key": "ids",
											"value": "5e7d2dc03429e24340ff1396,5e7d2ddd3429e24340ff1397,5e7d2dc03429e24340ff1396",
											"description": "*Required*. A comma-separated list of the Symphonia IDs for the albums. Maximum: 50 IDs."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "19"
								},
								{
									"key": "ETag",
									"value": "W/\"13-JshKSuFWpp89J6UEiCGj/zVgvug\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Date",
									"value": "Tue, 07 Apr 2020 21:01:51 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "[\n    true,\n    false,\n    false\n]"
						}
					]
				},
				{
					"name": "Get Current User's Saved Albums",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"description": "*Required*. A valid access token from the Symphonia Accounts service.\n\n",
								"key": "Authorization",
								"type": "text",
								"value": ""
							}
						],
						"url": {
							"raw": "{{URL}}api/v1/me/albums?limit=10&offset=0",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"v1",
								"me",
								"albums"
							],
							"query": [
								{
									"key": "limit",
									"value": "10",
									"description": "`Optional`. The maximum number of items to return. Default: 20. Minimum: 1."
								},
								{
									"key": "offset",
									"value": "0",
									"description": "`Optional`. The index of the first item to return. Default: 0 (the first object). Use with `limit` to get the next set of items."
								}
							]
						}
					},
					"response": [
						{
							"name": "Get Current User's Saved Albums",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "*Required*. A valid access token from the Symphonia Accounts service.\n\n",
										"key": "Authorization",
										"type": "text",
										"value": ""
									}
								],
								"url": {
									"raw": "{{URL}}api/v1/me/albums?limit&offset",
									"host": [
										"{{URL}}api"
									],
									"path": [
										"v1",
										"me",
										"albums"
									],
									"query": [
										{
											"key": "limit",
											"value": null,
											"description": "*Optional*. The maximum number of objects to return. Default: 20. Minimum: 1. Maximum: 50."
										},
										{
											"key": "offset",
											"value": null,
											"description": "*Optional*. The index of the first object to return. Default: 0 (i.e., the first object). Use with `limit` to get the next set of objects."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "ETag",
									"value": "W/\"a9b-fII1H5plRogcP25TZn/ftk/a2gM\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "Date",
									"value": "Sun, 19 Apr 2020 18:45:10 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"Albums\": {\n        \"total\": 2,\n        \"items\": [\n            {\n                \"tracks\": [\n                    \"5e7d334860cd930408a5f995\",\n                    \"5e8a1e0f7937ec4d40c6deba\",\n                    \"5e8a1e727937ec4d40c6debb\"\n                ],\n                \"releaseDate\": \"2020-04-19T18:45:05.311Z\",\n                \"_id\": \"5e701f4d2672a63a60573a02\",\n                \"name\": \"El Pintor\",\n                \"year\": 2014,\n                \"image\": \"https://thesymphonia.ddns.net/api/v1/images/albums/El-Pintor.jpg\",\n                \"artist\": {\n                    \"queue\": {\n                        \"currentlyPlaying\": {\n                            \"currentTrack\": null\n                        },\n                        \"queueTracks\": [],\n                        \"previousTrack\": null,\n                        \"repeat\": false,\n                        \"shuffle\": false,\n                        \"play\": false,\n                        \"repeatOnce\": false,\n                        \"devices\": [\n                            {\n                                \"_id\": \"5e8a5b0db2859207bf1fc2e9\",\n                                \"devicesName\": \"chrome\"\n                            }\n                        ]\n                    },\n                    \"followedUsers\": [],\n                    \"tracks\": [\n                        \"5e7d334860cd930408a5f995\",\n                        \"5e8a1e0f7937ec4d40c6deba\",\n                        \"5e8a1e727937ec4d40c6debb\"\n                    ],\n                    \"ownedPlaylists\": [],\n                    \"followedAlbums\": [],\n                    \"followedTracks\": [],\n                    \"_id\": \"5e82a48054660672fd699883\",\n                    \"email\": \"test4@test.com\",\n                    \"name\": \"Interpol\",\n                    \"dateOfBirth\": \"1979-12-25T00:00:00.000Z\",\n                    \"gender\": \"male\",\n                    \"type\": \"artist\",\n                    \"imageUrl\": \"https://thesymphonia.ddns.net/api/v1/images/users/Interpol.jpg\"\n                }\n            },\n            {\n                \"tracks\": [\n                    \"5e7d2dc03429e24340ff1396\",\n                    \"5e7d2ddd3429e24340ff1397\",\n                    \"5e7d2e023429e24340ff1398\"\n                ],\n                \"releaseDate\": \"2020-04-19T18:45:05.311Z\",\n                \"_id\": \"5e701fdf2672a63a60573a06\",\n                \"name\": \"The Slow Rush\",\n                \"year\": 2020,\n                \"image\": \"https://thesymphonia.ddns.net/api/v1/images/albums/The-Slow-Rush.jpg\",\n                \"artist\": {\n                    \"queue\": {\n                        \"currentlyPlaying\": {\n                            \"currentTrack\": \"http://localhost:5000/api/v1/me/player/tracks/5e7d2ddd3429e24340ff1397\",\n                            \"device\": \"5e9c67d6b5f92c78144a9aa0\"\n                        },\n                        \"queueTracks\": [\n                            \"http://localhost:5000/api/v1/me/player/tracks/5e7d2ddd3429e24340ff1397\",\n                            \"http://localhost:5000/api/v1/me/player/tracks/5e7d2e023429e24340ff1398\",\n                            \"http://localhost:5000/api/v1/me/player/tracks/5e7d334860cd930408a5f995\",\n                            \"http://localhost:5000/api/v1/me/player/tracks/5e8a1e0f7937ec4d40c6deba\"\n                        ],\n                        \"previousTrack\": null,\n                        \"repeat\": false,\n                        \"shuffle\": false,\n                        \"play\": false,\n                        \"repeatOnce\": false,\n                        \"nextTrack\": \"http://localhost:5000/api/v1/me/player/tracks/5e7d2e023429e24340ff1398\",\n                        \"devices\": [\n                            {\n                                \"_id\": \"5e9c67d6b5f92c78144a9aa0\",\n                                \"devicesName\": \"Android\"\n                            }\n                        ]\n                    },\n                    \"followedUsers\": [],\n                    \"tracks\": [\n                        \"5e7d2dc03429e24340ff1396\",\n                        \"5e7d2ddd3429e24340ff1397\",\n                        \"5e7d2e023429e24340ff1398\"\n                    ],\n                    \"ownedPlaylists\": [\n                        \"5e9c5da308385b29986a9ae5\",\n                        \"5e9c5dcc08385b29986a9ae6\",\n                        \"5e9c5de908385b29986a9ae7\",\n                        \"5e9c5ec35f74b1919c3eb8d2\"\n                    ],\n                    \"followedAlbums\": [],\n                    \"followedTracks\": [],\n                    \"_id\": \"5e8137aa54660672fd699882\",\n                    \"email\": \"test3@test.com\",\n                    \"name\": \"Tame Impala\",\n                    \"dateOfBirth\": \"1978-06-25T00:00:00.000Z\",\n                    \"gender\": \"male\",\n                    \"type\": \"artist\",\n                    \"imageUrl\": \"https://thesymphonia.ddns.net/api/v1/images/users/Tame-Impala.jpg\",\n                    \"__v\": 1,\n                    \"last_login\": \"2020-04-19T15:01:35.813Z\",\n                    \"playerToken\": \"627d4ada6aa649b824fbe082ae391456de53a8750af942d38ac4ad1ce0322e5a\",\n                    \"playerTokenExpires\": \"2020-04-19T15:11:42.895Z\"\n                }\n            }\n        ],\n        \"limit\": 20,\n        \"offset\": 0,\n        \"next\": null,\n        \"previous\": null,\n        \"href\": \"http://localhost:5000/api/v1/me/albums\"\n    }\n}"
						}
					]
				},
				{
					"name": "Get Current User's Saved Tracks",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"description": "*Required*. A valid access token from the Symphonia Accounts service.\n\n",
								"key": "Authorization",
								"type": "text",
								"value": ""
							}
						],
						"url": {
							"raw": "{{URL}}api/v1/me/tracks?offset=0&limit=20",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"v1",
								"me",
								"tracks"
							],
							"query": [
								{
									"key": "offset",
									"value": "0",
									"description": "`Optional`. The maximum number of items to return. Default: 20. Minimum: 1."
								},
								{
									"key": "limit",
									"value": "20",
									"description": "`Optional`. The index of the first item to return. Default: 0 (the first object). Use with `limit` to get the next set of items."
								}
							]
						}
					},
					"response": [
						{
							"name": "Get a User's Saved Tracks",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "*Required*. A valid access token from the Symphonia Accounts service.\n\n",
										"key": "Authorization",
										"type": "text",
										"value": ""
									}
								],
								"url": {
									"raw": "{{URL}}api/v1/me/tracks?limit&offset",
									"host": [
										"{{URL}}api"
									],
									"path": [
										"v1",
										"me",
										"tracks"
									],
									"query": [
										{
											"key": "limit",
											"value": null,
											"description": "*Optional*. The maximum number of objects to return. Default: 20. Minimum: 1. Maximum: 50."
										},
										{
											"key": "offset",
											"value": null,
											"description": "*Optional*. The index of the first object to return. Default: 0 (i.e., the first object). Use with `limit` to get the next set of objects."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "587"
								},
								{
									"key": "ETag",
									"value": "W/\"24b-vZaDOj/4aOhf8qXX3hV9qiAyFcM\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Date",
									"value": "Mon, 20 Apr 2020 12:09:45 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"tracks\": {\n        \"total\": 1,\n        \"items\": [\n            {\n                \"category\": [\n                    \"5e8072e5e478cf39b47bd1ef\"\n                ],\n                \"explicit\": false,\n                \"_id\": \"5e7d2dc03429e24340ff1396\",\n                \"album\": {\n                    \"_id\": \"5e701fdf2672a63a60573a06\",\n                    \"name\": \"The Slow Rush\",\n                    \"image\": \"https://thesymphonia.ddns.net/api/v1/images/albums/The-Slow-Rush.jpg\",\n                    \"id\": \"5e701fdf2672a63a60573a06\"\n                },\n                \"name\": \"Instant Destiny\",\n                \"durationMs\": 30000,\n                \"artist\": {\n                    \"_id\": \"5e8137aa54660672fd699882\",\n                    \"name\": \"Tame Impala\"\n                },\n                \"trackPath\": \"assets/tracks/Instant-Destiny.mp3\",\n                \"premium\": false,\n                \"type\": \"track\"\n            }\n        ],\n        \"limit\": 20,\n        \"offset\": 0,\n        \"next\": null,\n        \"previous\": null,\n        \"href\": \"http://localhost:3000/api/v1/me/tracks\"\n    }\n}"
						}
					]
				},
				{
					"name": "Remove Albums for Current User",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"description": "*Required*. A valid access token from the Symphonia Accounts service.\n",
								"key": "Authorization",
								"type": "text",
								"value": ""
							}
						],
						"url": {
							"raw": "{{URL}}api/v1/me/albums?ids=5e794163c01c024ecc3c31d3,5e89f33375bcc40cc4b5a736",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"v1",
								"me",
								"albums"
							],
							"query": [
								{
									"key": "ids",
									"value": "5e794163c01c024ecc3c31d3,5e89f33375bcc40cc4b5a736",
									"description": "comma separated `Symphonia` ids for the documents you want to unfollow"
								}
							]
						}
					},
					"response": [
						{
							"name": "Remove Albums for Current User",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "*Required*. A valid access token from the Symphonia Accounts service.\n",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {your access token}"
									},
									{
										"warning": "Key contains invalid whitespace characters.",
										"description": "*Required*  The content type of the request body: ",
										"key": "Content-Type\t",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    \"6akEvsycLGftJxYudPjmqK\",\n    \"628oezqK2qfmCjC6eXNors\"\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}api/v1/me/albums",
									"host": [
										"{{URL}api"
									],
									"path": [
										"v1",
										"me",
										"albums"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n\t\"status\": \"success\"\n}"
						}
					]
				},
				{
					"name": "Remove User's Saved Tracks",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"description": "*Required*. A valid access token from the Symphonia Accounts service.\n\n",
								"key": "Authorization",
								"type": "text",
								"value": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}api/v1/me/tracks?ids=5e7d2e023429e24340ff1398,5e7d334860cd930408a5f995",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"v1",
								"me",
								"tracks"
							],
							"query": [
								{
									"key": "ids",
									"value": "5e7d2e023429e24340ff1398,5e7d334860cd930408a5f995",
									"description": "comma separated `Symphonia` ids for the documents you want to unfollow"
								}
							]
						}
					},
					"response": [
						{
							"name": "Remove User's Saved Tracks",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "*Required*. A valid access token from the Symphonia Accounts service.\n\n",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {your access token}"
									},
									{
										"warning": "Key contains invalid whitespace characters.",
										"description": "*Required*  The content type of the request body: ",
										"key": "Content-Type\t",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\"4iV5W9uYEdYUVa79Axb7Rh\", \"1301WleyT98MSxVHPZCA6M\"]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}api/v1/me/tracks",
									"host": [
										"{{URL}api"
									],
									"path": [
										"v1",
										"me",
										"tracks"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n\t\"status\": \"success\"\n}"
						}
					]
				},
				{
					"name": "Save Albums for Current User",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"description": "*Required*. A valid access token from the Symphonia Accounts service.\n\n",
								"key": "Authorization",
								"type": "text",
								"value": ""
							}
						],
						"url": {
							"raw": "{{URL}}api/v1/me/albums?ids=5e794163c01c024ecc3c31d3,5e89f33375bcc40cc4b5a736",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"v1",
								"me",
								"albums"
							],
							"query": [
								{
									"key": "ids",
									"value": "5e794163c01c024ecc3c31d3,5e89f33375bcc40cc4b5a736",
									"description": "comma separated `Symphonia` ids for the document you want to follow"
								}
							]
						}
					},
					"response": [
						{
							"name": "Save Albums for Current User",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "*Required*. A valid access token from the Symphonia Accounts service.\n\n",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {your access token}"
									},
									{
										"warning": "Key contains invalid whitespace characters.",
										"description": "*Required*  The content type of the request body: ",
										"key": "Content-Type\t",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    \"6akEvsycLGftJxYudPjmqK\",\n    \"628oezqK2qfmCjC6eXNors\"\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}api/v1/me/albums",
									"host": [
										"{{URL}api"
									],
									"path": [
										"v1",
										"me",
										"albums"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n\t\"status\": \"success\"\n}"
						}
					]
				},
				{
					"name": "Save Tracks for User",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"description": "*Required*. A valid access token from the Symphonia Accounts service.\n\n",
								"key": "Authorization",
								"type": "text",
								"value": ""
							},
							{
								"description": "*Required*  The content type of the request body: ",
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{URL}}api/v1/me/tracks?ids=5e7d2e023429e24340ff1398,5e7d334860cd930408a5f995",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"v1",
								"me",
								"tracks"
							],
							"query": [
								{
									"key": "ids",
									"value": "5e7d2e023429e24340ff1398,5e7d334860cd930408a5f995",
									"description": "comma separated `Symphonia` ids for the document you want to follow"
								}
							]
						}
					},
					"response": [
						{
							"name": "Save Tracks for User",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "*Required*. A valid access token from the Symphonia Accounts service.\n\n",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {your access token}"
									},
									{
										"warning": "Key contains invalid whitespace characters.",
										"description": "*Required*  The content type of the request body: ",
										"key": "Content-Type\t",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"ids\":[\"4iV5W9uYEdYUVa79Axb7Rh\", \"1301WleyT98MSxVHPZCA6M\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}api/v1/me/tracks",
									"host": [
										"{{URL}api"
									],
									"path": [
										"v1",
										"me",
										"tracks"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n\t\"status\": \"success\"\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Personalization",
			"item": [
				{
					"name": "Top-Track/Atrists",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}api/v1/me/top/:type",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"v1",
								"me",
								"top",
								":type"
							],
							"variable": [
								{
									"key": "type",
									"value": "artist",
									"description": "`track` or `artist`"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get-History",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e97edb76-38b6-4d61-9b83-5fe84038e121",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}api/v1/me/recently-played",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"v1",
								"me",
								"recently-played"
							]
						}
					},
					"response": [
						{
							"name": "empty history",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}api/v1/me/recently-played",
									"host": [
										"{{URL}}api"
									],
									"path": [
										"v1",
										"me",
										"recently-played"
									],
									"query": [
										{
											"key": "limit",
											"value": "inetger",
											"disabled": true
										},
										{
											"key": "page",
											"value": "inetger",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "sorting_field",
											"disabled": true
										},
										{
											"key": "filter",
											"value": "filter_feilds",
											"disabled": true
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "14"
								},
								{
									"key": "ETag",
									"value": "W/\"e-7l4s/MSnfBShnyIdgOMh9wzJapM\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Date",
									"value": "Mon, 20 Apr 2020 11:30:04 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"history\": []\n}"
						},
						{
							"name": "Get-History",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}api/v1/me/recently-played",
									"host": [
										"{{URL}}api"
									],
									"path": [
										"v1",
										"me",
										"recently-played"
									],
									"query": [
										{
											"key": "limit",
											"value": "inetger",
											"disabled": true
										},
										{
											"key": "page",
											"value": "inetger",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "sorting_field",
											"disabled": true
										},
										{
											"key": "filter",
											"value": "filter_feilds",
											"disabled": true
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "ETag",
									"value": "W/\"7bd-5Ft0VLPRHtNdC0xd7FirYFEldWA\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "Date",
									"value": "Sat, 30 May 2020 15:29:54 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"history\": [\n        {\n            \"_id\": \"5ed277408782d8207a7af120\",\n            \"track\": \"5e7d334860cd930408a5f995\",\n            \"played_at\": \"2020-05-30T15:09:52.060Z\",\n            \"contextImage\": \"https://thesymphonia.ddns.net/api/v1/images/playlists/playlist4.jpg\",\n            \"contextName\": \"The Ultimate Indie Playlist\",\n            \"contextId\": \"5e806865ef653f5a541e0b1d\",\n            \"contextDescription\": \"My Parents Pay for my Premium Account, My Rent, and Literally Everything Else\",\n            \"contextType\": \"playlist\"\n        },\n        {\n            \"_id\": \"5ed276e88782d8207a7af108\",\n            \"track\": \"5e7d334860cd930408a5f995\",\n            \"played_at\": \"2020-05-30T15:08:24.206Z\",\n            \"contextImage\": \"https://thesymphonia.ddns.net/api/v1/images/playlists/liked.png\",\n            \"contextName\": \"Liked Songs\",\n            \"contextType\": \"liked\"\n        },\n        {\n            \"_id\": \"5ed276868782d8207a7af0f4\",\n            \"track\": \"5e7d334860cd930408a5f995\",\n            \"played_at\": \"2020-05-30T15:06:46.929Z\",\n            \"contextImage\": \"https://thesymphonia.ddns.net/api/v1/images/albums/El-Pintor.jpg\",\n            \"contextName\": \"El Pintor\",\n            \"contextId\": \"5e701f4d2672a63a60573a02\",\n            \"contextType\": \"album\"\n        },\n        {\n            \"_id\": \"5ed274eb653a461c0f03d2b6\",\n            \"track\": \"5e7d2dc03429e24340ff1396\",\n            \"played_at\": \"2020-05-30T14:59:55.688Z\",\n            \"contextImage\": \"https://thesymphonia.ddns.net/api/v1/images/users/Tame-Impala.jpg\",\n            \"contextName\": \"Tame Impala\",\n            \"contextId\": \"5e8137aa54660672fd699882\",\n            \"contextType\": \"artist\"\n        },\n        {\n            \"_id\": \"5ed03e767ddd9c689c7485c1\",\n            \"track\": \"5e8a39f24e11cd46c8bde654\",\n            \"played_at\": \"2020-05-28T22:43:02.273Z\",\n            \"contextImage\": \"https://thesymphonia.ddns.net/api/v1/images/playlists/playlist10.jpg\",\n            \"contextName\": \"All the Feels\",\n            \"contextId\": \"5e875c15ba6ebe663fdbb2c1\",\n            \"contextDescription\": \"I Just Double Texted and Now I Totally Get What Joan Didion Went Through\",\n            \"contextUrl\": \"https://thesymphonia.ddns.net/\",\n            \"contextType\": \"playlist\"\n        },\n        {\n            \"_id\": \"5e9f0747cd5803708a39e075\",\n            \"track\": \"5e8a1e767937ec4d40c6debc\",\n            \"played_at\": \"2020-04-21T14:46:31.297Z\",\n            \"contextImage\": \"https://thesymphonia.ddns.net/api/v1/images/users/Minuit-Machine.jpg\",\n            \"contextName\": \"Minuit Machine\",\n            \"contextId\": \"5e84b966681ae439edfc1d6f\",\n            \"contextUrl\": \"https://thesymphonia.ddns.net/\",\n            \"contextType\": \"artist\"\n        }\n    ]\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Player",
			"item": [
				{
					"name": "Put-Repeat",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{URL}}api/v1/me/player/repeat",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"v1",
								"me",
								"player",
								"repeat"
							]
						},
						"description": "## Patch user queue to be repeated or not\r\n change the state of the user repeat queue .\r\n\r\n\r\n it toggle the repeat queue property when requested\r\n## Response Format\r\n  On success, the HTTP status code in the response header is 204 no content, the header status code is an error code and the response body contains an error object."
					},
					"response": []
				},
				{
					"name": "Put-Repeat-Once",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{URL}}api/v1/me/player/repeatOnce",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"v1",
								"me",
								"player",
								"repeatOnce"
							]
						},
						"description": "## Patch user queue to be repeat a specific track or not.\r\n change the state of the user repeat Once queue .\r\n\r\n\r\n it toggle the repeat Once queue property when requested\r\n \r\n ## Response Format\r\n  On success, the HTTP status code in the response header is 204 no content, the header status code is an error code and the response body contains an error object."
					},
					"response": []
				},
				{
					"name": "Put-Shuffle",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{URL}}api/v1/me/player/shuffle",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"v1",
								"me",
								"player",
								"shuffle"
							]
						},
						"description": "## Patch user queue to be shuffled or not\r\n change the state of the user shuffle queue .\r\n\r\n\r\n it toggle the shuffle queue property when requested\r\n \r\n ## Response Format\r\n  On success, the HTTP status code in the response header is 204 no content, the header status code is an error code and the response body contains an error object."
					},
					"response": []
				},
				{
					"name": "Put-Seek",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Range",
								"value": "bytes=1000000-1209000",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}api/v1/me/player/seek",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"v1",
								"me",
								"player",
								"seek"
							]
						},
						"description": "## Patch user queue to save seek of current playing track\r\n   just save the seek\r\n\r\n ## Response Format\r\n  On success, the HTTP status code in the response header is 204 no content, the header status code is an error code and the response body contains an error object."
					},
					"response": []
				},
				{
					"name": "Go-Next-Track",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{URL}}api/v1/me/player/next",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"v1",
								"me",
								"player",
								"next"
							]
						},
						"description": "## Post user to next track in queue\r\n\r\n it put current and next and previous track in new postions and return all tracks when succes\r\n \r\n \r\n ## Response Format\r\n  On success, the HTTP status code in the response header is 200 OK, the header status code is an error code and the response body contains an error object.\r\n  \r\n## Track_url_in_Queue\r\n  | KEY  |  VALUE TYPE |  VALUE DESCRIPTION |\r\n|---|---|---|\r\n| data  |  Array of string |  The url of tracks in queue |"
					},
					"response": []
				},
				{
					"name": "Go-Previous-Track",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{URL}}api/v1/me/player/previous",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"v1",
								"me",
								"player",
								"previous"
							]
						},
						"description": "## Post user to previous track in queue\r\n\r\n it put current and next and previous track in new postions and return all tracks when succes\r\n \r\n ## Response Format\r\n  On success, the HTTP status code in the response header is 200 OK, the header status code is an error code and the response body contains an error object.\r\n  \r\n## Track_url_in_Queue\r\n  | KEY  |  VALUE TYPE |  VALUE DESCRIPTION |\r\n|---|---|---|\r\n| data  |  Array of string |  The url of tracks in queue |"
					},
					"response": []
				},
				{
					"name": "Play Track Setup",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Range",
								"value": "bytes:0-1023",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"context_type\":\"album\",\n\t\"contextId\":\"5e701f4d2672a63a60573a02\",     \n\t\"device\":\"android\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}api/v1/me/player/tracks/:{track_id}",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"v1",
								"me",
								"player",
								"tracks",
								":{track_id}"
							],
							"variable": [
								{
									"key": "{track_id}",
									"value": "5e7d334860cd930408a5f995",
									"description": "The `Symphonia` id for the document you want to retrieve"
								}
							]
						},
						"description": "## Get user Track and Play it\r\n\r\n send the track in pakects to be played in partial content \r\n \r\n  \r\n## First Scenario\r\n  | KEY     \t|  VALUE TYPE       |  VALUE DESCRIPTION\t\t\t\t\t\t\t\t\t\t\t|\r\n  |-------------|-------------------|---------------------------------------------------------------|\r\n  | contextId   |  MongoDb ObjectId |  The Id of the context that you want to play that track from  |\r\n  | context_url |  String           |  The Url of the context that you want to play that track from |\r\n  | context_type|  String           |  The type of the context that you want to play that track from|\r\n  | device      |  String           |  The device name that the user use to play the track\t\t\t|\r\n  \r\n - This scenario when the user go to a playlist or almub and try to play a song in that context\r\n\r\n## Secnod Scenario\r\n  | KEY     \t|  VALUE TYPE       |  VALUE DESCRIPTION\t\t\t\t\t\t\t\t\t\t\t|\r\n  |-------------|-------------------|---------------------------------------------------------------|\r\n  | device      |  String           |  The device name that the user use to play the track\t\t\t|\r\n \r\n- This secario when the user use the add to queue feature\t\r\n\r\n## Response Format\r\n  On success, the HTTP status code in the response header is 200 OK or 206 Partial content, the header status code is an error code and the response body contains an error object."
					},
					"response": [
						{
							"name": "Play_Track with liked songs as context",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Range",
										"value": "bytes:0-1023",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"context_type\": \"liked\",\n\t\"device\": \"chrome\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}api/v1/me/player/tracks/5e7d334860cd930408a5f995",
									"host": [
										"{{URL}}api"
									],
									"path": [
										"v1",
										"me",
										"player",
										"tracks",
										"5e7d334860cd930408a5f995"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.0 (Ubuntu)"
								},
								{
									"key": "Date",
									"value": "Sat, 30 May 2020 15:08:24 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "75"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "ETag",
									"value": "W/\"4b-y/ku0u0p/8NRim6BnkbdmNiu5i8\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": \"7fff0b40cac029ef5cafaeca5316cff68e34a9f2f862800dd91f145f7eb4d6ed\"\n}"
						},
						{
							"name": "Play_Track with artist as context",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Range",
										"value": "bytes:0-1023",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\n\t\"context_type\": \"artist\",\n\t\"contextId\": \"5e8137aa54660672fd699882\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}api/v1/me/player/tracks/5e7d2dc03429e24340ff1396",
									"host": [
										"{{URL}}api"
									],
									"path": [
										"v1",
										"me",
										"player",
										"tracks",
										"5e7d2dc03429e24340ff1396"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.0 (Ubuntu)"
								},
								{
									"key": "Date",
									"value": "Sat, 30 May 2020 14:59:55 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "75"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "ETag",
									"value": "W/\"4b-nKJDopYAPOMXDZpW7e9bLI/tSYk\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": \"a69ea5a70616abb07ea120b367822e6b5332641f5ff54eb7c0780c38316f2580\"\n}"
						},
						{
							"name": "Play_Track with album as context",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Range",
										"value": "bytes:0-1023",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\n\t\"context_type\": \"album\",\n\t\"contextId\": \"5e701f4d2672a63a60573a02\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}api/v1/me/player/tracks/5e7d334860cd930408a5f995",
									"host": [
										"{{URL}}api"
									],
									"path": [
										"v1",
										"me",
										"player",
										"tracks",
										"5e7d334860cd930408a5f995"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.0 (Ubuntu)"
								},
								{
									"key": "Date",
									"value": "Sat, 30 May 2020 15:06:47 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "75"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "ETag",
									"value": "W/\"4b-tFIfEjMY8yJCw+XMFLgw9tq45PY\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": \"45e8d08c738c95702fda7a619332ccb458a3f29a050cc20250607c7e3f1e166f\"\n}"
						},
						{
							"name": "Play_Track with playlist as context",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Range",
										"value": "bytes:0-1023",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"context_type\": \"playlist\",\n\t\"contextId\": \"5e806865ef653f5a541e0b1d\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}api/v1/me/player/tracks/5e7d334860cd930408a5f995",
									"host": [
										"{{URL}}api"
									],
									"path": [
										"v1",
										"me",
										"player",
										"tracks",
										"5e7d334860cd930408a5f995"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.0 (Ubuntu)"
								},
								{
									"key": "Date",
									"value": "Sat, 30 May 2020 15:09:52 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "75"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "ETag",
									"value": "W/\"4b-CZyjNYDdyENMnn5hejXWHl4p6q4\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": \"fca263149c85abfcc50ca4be7d640cb74ea2031683f388472a613f4a752a6894\"\n}"
						}
					]
				},
				{
					"name": "Play Track",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {},
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Range",
								"value": "bytes:0-1023",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"contextId\": \"5e7ac3c7d43a2c49909c549c\",\n\t\"context_type\": \"playlist\",\n\t\"context_url\": \"https://thesymphonia.ddns.net/\",\n\t\"device\": \"Android\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}api/v1/me/player/tracks/:{track_id}/:{player_token}",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"v1",
								"me",
								"player",
								"tracks",
								":{track_id}",
								":{player_token}"
							],
							"variable": [
								{
									"key": "{track_id}",
									"value": "5e7d334860cd930408a5f995",
									"description": "The `Symphonia` id for the document you want to retrieve"
								},
								{
									"key": "{player_token}",
									"value": "b436bb874d50c6df7192d3d6ff3a2419eccfca1509f6cd37d2e78d44d5eb711b",
									"description": "the player token retrieved from the play track setup endpoint which is valid for only 20 minuites"
								}
							]
						},
						"description": "## Get user Track and Play it\r\n\r\n send the track in pakects to be played in partial content \r\n \r\n  \r\n## First Scenario\r\n  | KEY     \t|  VALUE TYPE       |  VALUE DESCRIPTION\t\t\t\t\t\t\t\t\t\t\t|\r\n  |-------------|-------------------|---------------------------------------------------------------|\r\n  | contextId   |  MongoDb ObjectId |  The Id of the context that you want to play that track from  |\r\n  | context_url |  String           |  The Url of the context that you want to play that track from |\r\n  | context_type|  String           |  The type of the context that you want to play that track from|\r\n  | device      |  String           |  The device name that the user use to play the track\t\t\t|\r\n  \r\n - This scenario when the user go to a playlist or almub and try to play a song in that context\r\n\r\n## Secnod Scenario\r\n  | KEY     \t|  VALUE TYPE       |  VALUE DESCRIPTION\t\t\t\t\t\t\t\t\t\t\t|\r\n  |-------------|-------------------|---------------------------------------------------------------|\r\n  | device      |  String           |  The device name that the user use to play the track\t\t\t|\r\n \r\n- This secario when the user use the add to queue feature\t\r\n\r\n## Response Format\r\n  On success, the HTTP status code in the response header is 200 OK or 206 Partial content, the header status code is an error code and the response body contains an error object."
					},
					"response": []
				},
				{
					"name": "Put-Volume",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"volume\": \"100\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}api/v1/me/player/volume",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"v1",
								"me",
								"player",
								"volume"
							]
						},
						"description": "## Patch user queue volume\r\n Just to save the volume progress  .\r\n\r\n## Response Format\r\n  On success, the HTTP status code in the response header is 204 no content, the header status code is an error code and the response body contains an error object."
					},
					"response": [
						{
							"name": "Put-Volume",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"volume\": \"100\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:3000/api/v1/me/player/volume",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"v1",
										"me",
										"player",
										"volume"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "1000"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "988"
								},
								{
									"key": "Date",
									"value": "Sun, 05 Apr 2020 14:10:24 GMT"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1586097230"
								},
								{
									"key": "ETag",
									"value": "W/\"d-XXcxLjB/sjfS0AB6+CxvXcLGrm4\""
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Add-To-Queue",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"track\":\"https://thesymphonia.ddns.net/api/vi/me/player/track/5edf603f2aa9b365682e473b\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}api/v1/me/player/queue",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"v1",
								"me",
								"player",
								"queue"
							]
						},
						"description": "## Post user queue to add Track \r\n Just add new Track to the user queue list when the user press add to queue  .\r\n\r\n## Response Format\r\n  On success, the HTTP status code in the response header is 200 OK, the header status code is an error code and the response body contains an error object."
					},
					"response": [
						{
							"name": "Add-To-Queue",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"track\":\"http://localhost/api/vi/me/player/track/aiojsdfa19281h81h1d\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/me/player/queue",
									"host": [
										"{{URL}}"
									],
									"path": [
										"me",
										"player",
										"queue"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "1000"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "987"
								},
								{
									"key": "Date",
									"value": "Sun, 05 Apr 2020 14:12:12 GMT"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1586097230"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "291"
								},
								{
									"key": "ETag",
									"value": "W/\"123-GPDS+NATQE9mrMG2f9P8PAxm7lc\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": [\n        \"http://localhost:3000/api/v1/me/player/tracks/5e7d2dc03429e24340ff1396\",\n        \"http://localhost:3000/api/v1/me/player/tracks/5e7969965146d92e98ac3ef7\",\n        \"http://localhost:3000/api/v1/me/player/tracks/5e7969965146d92e98ac3ef4\",\n        \"http://localhost/api/vi/me/player/track/aiojsdfa19281h81h1d\"\n    ]\n}"
						}
					]
				},
				{
					"name": "Delete-from-Queue",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"removedTrack\": \"https://thesymphonia.ddns.net/api/vi/me/player/track/5edf603f2aa9b365682e473b\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}api/v1/me/player/queue",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"v1",
								"me",
								"player",
								"queue"
							]
						},
						"description": "## Delete track from queue \r\n just remove track from the queue when the user press remove from queue  .\r\n\r\n## Response Format\r\n  On success, the HTTP status code in the response header is 204 no content, the header status code is an error code and the response body contains an error object."
					},
					"response": [
						{
							"name": "Delete-from-Queue",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"removedTrack\": \"http://localhost/api/vi/me/player/track/aiojsdfa19281h81h1d\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/me/player/queue",
									"host": [
										"{{URL}}"
									],
									"path": [
										"me",
										"player",
										"queue"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "1000"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "986"
								},
								{
									"key": "Date",
									"value": "Sun, 05 Apr 2020 14:13:26 GMT"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1586097230"
								},
								{
									"key": "ETag",
									"value": "W/\"d-XXcxLjB/sjfS0AB6+CxvXcLGrm4\""
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get-Queue",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}api/v1/me/player/queue",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"v1",
								"me",
								"player",
								"queue"
							]
						},
						"description": "## Get user Queue \r\n Just get the Queue of the user in json format .\r\n\r\n\r\n## Response Format\r\n  On success, the HTTP status code in the response header is 200 OK , the header status code is an error code and the response body contains an error object."
					},
					"response": [
						{
							"name": "Get-Queue",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{URL}}/me/player/queue",
									"host": [
										"{{URL}}"
									],
									"path": [
										"me",
										"player",
										"queue"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "1000"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "982"
								},
								{
									"key": "Date",
									"value": "Sun, 05 Apr 2020 14:15:47 GMT"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1586097230"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "ETag",
									"value": "W/\"50c-/OchOerOEvTs3BkGr4F3kJJ67IQ\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": {\n        \"currentlyPlaying\": {\n            \"currentTrack\": \"http://localhost:3000/api/v1/me/player/tracks/5e7d2dc03429e24340ff1396\",\n            \"device\": \"5e88ef4d54142e3db4d01ee5\"\n        },\n        \"queueTracks\": [\n            \"http://localhost:3000/api/v1/me/player/tracks/5e7d2dc03429e24340ff1396\",\n            \"http://localhost:3000/api/v1/me/player/tracks/5e7969965146d92e98ac3ef7\",\n            \"http://localhost:3000/api/v1/me/player/tracks/5e7969965146d92e98ac3ef4\"\n        ],\n        \"previousTrack\": null,\n        \"repeat\": false,\n        \"shuffle\": false,\n        \"play\": false,\n        \"repeatOnce\": false,\n        \"devices\": [\n            {\n                \"_id\": \"5e88eea554142e3db4d01edb\",\n                \"devicesName\": \"Chrome\"\n            },\n            {\n                \"_id\": \"5e88eee7d56ea252c38609f9\",\n                \"devicesName\": \"Chrome\"\n            },\n            {\n                \"_id\": \"5e88eef254142e3db4d01edf\",\n                \"devicesName\": \"Chrome\"\n            },\n            {\n                \"_id\": \"5e88ef4d54142e3db4d01ee5\",\n                \"devicesName\": \"Chrome\"\n            },\n            {\n                \"_id\": \"5e89e659a879619b50cb8c4c\",\n                \"devicesName\": \"Safari\"\n            }\n        ],\n        \"nextTrack\": \"http://localhost:3000/api/v1/me/player/tracks/5e7969965146d92e98ac3ef7\",\n        \"seek\": \"bytes=1000000-1209000\",\n        \"volume\": \"100\"\n    }\n}"
						}
					]
				},
				{
					"name": "Get-Currently-Playing",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}api/v1/me/player/currently-playing",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"v1",
								"me",
								"player",
								"currently-playing"
							]
						},
						"description": "## Get Currently Playing object from user queue \r\n Just reurn the Currently Playing Object the contain the track_Url and the device currently playing it  .\r\n\r\n## Response Format\r\n  On success, the HTTP status code in the response header is 200 OK, the header status code is an error code and the response body contains an error object."
					},
					"response": [
						{
							"name": "Get-Currently-Playing",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{URL}}/me/player/currently-playing",
									"host": [
										"{{URL}}"
									],
									"path": [
										"me",
										"player",
										"currently-playing"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "1000"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "983"
								},
								{
									"key": "Date",
									"value": "Sun, 05 Apr 2020 14:15:02 GMT"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1586097230"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "134"
								},
								{
									"key": "ETag",
									"value": "W/\"86-D/1MB152MiSONkq0Ycv2iTxlgvM\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": {\n        \"currentTrack\": \"http://localhost:3000/api/v1/me/player/tracks/5e7d2dc03429e24340ff1396\",\n        \"device\": \"5e88ef4d54142e3db4d01ee5\"\n    }\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Playlists",
			"item": [
				{
					"name": "Get a Playlist",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}api/v1/playlists/:{playlist_id}",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"v1",
								"playlists",
								":{playlist_id}"
							],
							"variable": [
								{
									"key": "{playlist_id}",
									"value": "5e7ac3c7d43a2c49909c549c",
									"description": "The `Symphonia` id for the document you want to retrieve"
								}
							]
						}
					},
					"response": [
						{
							"name": "Get a Playlist",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{URL}}api/v1/playlists/:{playlist_id}",
									"host": [
										"{{URL}}api"
									],
									"path": [
										"v1",
										"playlists",
										":{playlist_id}"
									],
									"variable": [
										{
											"key": "{playlist_id}",
											"value": "5e7969965146d92e98ac3ef7",
											"description": "The `Symphonia` id for the document you want to retrieve"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.0 (Ubuntu)"
								},
								{
									"key": "Date",
									"value": "Wed, 10 Jun 2020 12:30:41 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "652"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "ETag",
									"value": "W/\"28c-8PBbJJRUzVV5/iIC9dLWXM3Fi78\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								}
							],
							"cookie": [],
							"body": "{\n    \"collaborative\": false,\n    \"images\": [\n        \"https://thesymphonia.ddns.net/api/v1/images/playlists/playlist1.jpg\"\n    ],\n    \"public\": true,\n    \"tracks\": [\n        \"5e7d2dc03429e24340ff1396\",\n        \"5e8a1e767937ec4d40c6debc\",\n        \"5e8a1e9a7937ec4d40c6debe\"\n    ],\n    \"followers\": [\n        \"5e812db054660672fd699881\",\n        \"5e812a3454660672fd699880\",\n        \"5e8c75c4e37ac11ac4f01357\",\n        \"5e82a48054660672fd699883\"\n    ],\n    \"deleted\": false,\n    \"_id\": \"5e7969965146d92e98ac3ef7\",\n    \"name\": \"Songs to Sing in the Shower\",\n    \"owner\": {\n        \"_id\": \"5e8125dc54660672fd69987f\",\n        \"name\": \"Muhammad Ahmad Hesham\"\n    },\n    \"description\": \"My Favorite Public Place to Pretend is My Living Room Mix\",\n    \"category\": \"5e883e48c808fd1aa40ad1f8\",\n    \"tracksCount\": 3,\n    \"id\": \"5e7969965146d92e98ac3ef7\"\n}"
						}
					]
				},
				{
					"name": "get a Playlist Cover Image",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}api/v1/playlists/:{playlist_id}/images",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"v1",
								"playlists",
								":{playlist_id}",
								"images"
							],
							"variable": [
								{
									"key": "{playlist_id}",
									"value": "5e7969965146d92e98ac3ef7",
									"description": "The `Symphonia` id for the document you want to retrieve"
								}
							]
						}
					},
					"response": [
						{
							"name": "get a Playlist Cover Image",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{URL}}api/v1/playlists/:{playlist_id}/images",
									"host": [
										"{{URL}}api"
									],
									"path": [
										"v1",
										"playlists",
										":{playlist_id}",
										"images"
									],
									"variable": [
										{
											"key": "{playlist_id}",
											"value": "5e7969965146d92e98ac3ef7",
											"description": "The `Symphonia` id for the document you want to retrieve"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.0 (Ubuntu)"
								},
								{
									"key": "Date",
									"value": "Wed, 10 Jun 2020 12:30:58 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "71"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "ETag",
									"value": "W/\"47-/DHoInMUxCg1kxUXLbAgNqoyxrI\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								}
							],
							"cookie": [],
							"body": "[\n    \"https://thesymphonia.ddns.net/api/v1/images/playlists/playlist1.jpg\"\n]"
						}
					]
				},
				{
					"name": "Get a Playlist's Tracks",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}api/v1/playlists/:{playlist_id}/tracks?limit=1&offset=1&source=searchplaylist",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"v1",
								"playlists",
								":{playlist_id}",
								"tracks"
							],
							"query": [
								{
									"key": "limit",
									"value": "1",
									"description": "`Optional`. The maximum number of items to return. Default: 20. Minimum: 1."
								},
								{
									"key": "offset",
									"value": "1",
									"description": "`Optional`. The index of the first item to return. Default: 0 (the first object). Use with `limit` to get the next set of items."
								},
								{
									"key": "source",
									"value": "searchplaylist",
									"description": "if added then search history will be stored for that user"
								}
							],
							"variable": [
								{
									"key": "{playlist_id}",
									"value": "5e7ac3c7d43a2c49909c549c",
									"description": "The `Symphonia` id for the document you want to retrieve"
								}
							]
						}
					},
					"response": [
						{
							"name": "Get a Playlist's Tracks",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{URL}}api/v1/playlists/:{playlist_id}/tracks?limit=1&offset=1&source=searchplaylist",
									"host": [
										"{{URL}}api"
									],
									"path": [
										"v1",
										"playlists",
										":{playlist_id}",
										"tracks"
									],
									"query": [
										{
											"key": "limit",
											"value": "1",
											"description": "`Optional`. The maximum number of items to return. Default: 20. Minimum: 1."
										},
										{
											"key": "offset",
											"value": "1",
											"description": "`Optional`. The index of the first item to return. Default: 0 (the first object). Use with `limit` to get the next set of items."
										},
										{
											"key": "source",
											"value": "searchplaylist",
											"description": "if added then search history will be stored for that user"
										}
									],
									"variable": [
										{
											"key": "{playlist_id}",
											"value": "5e7ac3c7d43a2c49909c549c",
											"description": "The `Symphonia` id for the document you want to retrieve"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.0 (Ubuntu)"
								},
								{
									"key": "Date",
									"value": "Wed, 10 Jun 2020 12:32:44 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "840"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "ETag",
									"value": "W/\"348-rOmunbVbZ/02PJc6m4LHSXYWhW4\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								}
							],
							"cookie": [],
							"body": "{\n    \"tracks\": {\n        \"total\": 1,\n        \"items\": [\n            {\n                \"_id\": \"5e7d2e023429e24340ff1398\",\n                \"category\": [\n                    \"5e8072e5e478cf39b47bd1ef\"\n                ],\n                \"album\": {\n                    \"_id\": \"5e701fdf2672a63a60573a06\",\n                    \"name\": \"The Slow Rush\",\n                    \"image\": \"https://thesymphonia.ddns.net/api/v1/images/albums/The-Slow-Rush.jpg\",\n                    \"id\": \"5e701fdf2672a63a60573a06\"\n                },\n                \"name\": \"Posthumous Forgivenessss\",\n                \"durationMs\": 366000,\n                \"artist\": {\n                    \"_id\": \"5e8137aa54660672fd699882\",\n                    \"name\": \"Tame Impala\"\n                },\n                \"trackPath\": \"assets/tracks/Posthumous-Forgiveness.mp3\",\n                \"explicit\": false,\n                \"premium\": true,\n                \"type\": \"track\",\n                \"__order\": 1\n            }\n        ],\n        \"limit\": 1,\n        \"offset\": 1,\n        \"next\": \"https://thesymphonia.ddns.net/api/v1/playlists/5e7ac3c7d43a2c49909c549c/tracks?offset=2&limit=1\",\n        \"previous\": \"https://thesymphonia.ddns.net/api/v1/playlists/5e7ac3c7d43a2c49909c549c/tracks?offset=0&limit=1\",\n        \"href\": \"https://thesymphonia.ddns.net/api/v1/playlists/5e7ac3c7d43a2c49909c549c/tracks\"\n    }\n}"
						}
					]
				},
				{
					"name": "Add Tracks to Playlist",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"tracks\":[\"5edf63922aa9b365682e4777\"]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}api/v1/playlists/:{playlist_id}/tracks",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"v1",
								"playlists",
								":{playlist_id}",
								"tracks"
							],
							"variable": [
								{
									"key": "{playlist_id}",
									"value": "5e7ac3c7d43a2c49909c549c",
									"description": "The `Symphonia` id for the document you want to retrieve"
								}
							]
						}
					},
					"response": [
						{
							"name": "Add Tracks to Playlist",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"tracks\":[\"5e8a37d0d56ea252c3860a1a\"]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}api/v1/playlists/:{playlist_id}/tracks",
									"host": [
										"{{URL}}api"
									],
									"path": [
										"v1",
										"playlists",
										":{playlist_id}",
										"tracks"
									],
									"variable": [
										{
											"key": "{playlist_id}",
											"value": "5ea1b83081dbff28e4557d9e"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "321"
								},
								{
									"key": "ETag",
									"value": "W/\"141-On8dVoMAHrnQLPbMjIE2hVFqziM\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Date",
									"value": "Thu, 23 Apr 2020 15:55:08 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"collaborative\": false,\n    \"images\": [\n        \"https://thesymphonia.ddns.net/api/v1/images/albums/TRST.jpg\"\n    ],\n    \"public\": true,\n    \"tracks\": [\n        \"5e8a37d0d56ea252c3860a1a\"\n    ],\n    \"followers\": [],\n    \"deleted\": false,\n    \"_id\": \"5ea1b83081dbff28e4557d9e\",\n    \"name\": \"playlist\",\n    \"owner\": \"5e8c780ae37ac11ac4f01360\",\n    \"__v\": 0,\n    \"tracksCount\": 1,\n    \"id\": \"5ea1b83081dbff28e4557d9e\"\n}"
						}
					]
				},
				{
					"name": "Remove playlist Tracks",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}api/v1/playlists/:{playlist_id}/tracks?ids=5edf63922aa9b365682e4777",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"v1",
								"playlists",
								":{playlist_id}",
								"tracks"
							],
							"query": [
								{
									"key": "ids",
									"value": "5edf63922aa9b365682e4777",
									"description": "comma separated `Symphonia` ids for the document you want to remove"
								}
							],
							"variable": [
								{
									"key": "{playlist_id}",
									"value": "5e7ac3c7d43a2c49909c549c",
									"description": "The `Symphonia` id for the document you want to retrieve"
								}
							]
						}
					},
					"response": [
						{
							"name": "Remove playlist Tracks",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{URL}}api/v1/playlists/:{playlistid}/tracks?ids=5e7d334860cd930408a5f995,5e8a1e0f7937ec4d40c6deba,5e8a1e727937ec4d40c6debb",
									"host": [
										"{{URL}}api"
									],
									"path": [
										"v1",
										"playlists",
										":{playlistid}",
										"tracks"
									],
									"query": [
										{
											"key": "ids",
											"value": "5e7d334860cd930408a5f995,5e8a1e0f7937ec4d40c6deba,5e8a1e727937ec4d40c6debb",
											"description": "comma separated ids of tracks"
										}
									],
									"variable": [
										{
											"key": "{playlistid}",
											"value": "5e806865ef653f5a541e0b1d"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Date",
									"value": "Sun, 19 Apr 2020 23:58:15 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Change Playlist Details",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\":\"Songs to Sing in the Shower\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}api/v1/playlists/:{playlist_id}",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"v1",
								"playlists",
								":{playlist_id}"
							],
							"variable": [
								{
									"key": "{playlist_id}",
									"value": "5e7ac3c7d43a2c49909c549c",
									"description": "The `Symphonia` id for the document you want to retrieve"
								}
							]
						}
					},
					"response": [
						{
							"name": "Change all Playlist modifiable Details",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\":\"myPlaylist\",\n\t\"description\":\"Its my favourite playlist\",\n\t\"public\":\"false\",\n\t\"collaborative\":\"true\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}api/v1/playlists/5e7969965146d92e98ac3ef7",
									"host": [
										"{{URL}}api"
									],
									"path": [
										"v1",
										"playlists",
										"5e7969965146d92e98ac3ef7"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "478"
								},
								{
									"key": "ETag",
									"value": "W/\"1de-N6oApf5u6XKtPTUkcQ0rOWjZUJ8\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Date",
									"value": "Wed, 15 Apr 2020 20:21:52 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"collaborative\": true,\n    \"images\": [\n        \"https://thesymphonia.ddns.net/api/v1/images/playlists/playlist1.jpg\"\n    ],\n    \"public\": false,\n    \"tracks\": [\n        \"5e7d2dc03429e24340ff1396\",\n        \"5e8a1e767937ec4d40c6debc\",\n        \"5e8a1e9a7937ec4d40c6debe\"\n    ],\n    \"followers\": [\n        \"5e812db054660672fd699881\",\n        \"5e812a3454660672fd699880\"\n    ],\n    \"_id\": \"5e7969965146d92e98ac3ef7\",\n    \"name\": \"myPlaylist\",\n    \"owner\": \"5e8125dc54660672fd69987f\",\n    \"description\": \"Its my favourite playlist\",\n    \"category\": \"5e883e48c808fd1aa40ad1f8\",\n    \"id\": \"5e7969965146d92e98ac3ef7\"\n}"
						},
						{
							"name": "Change one of Playlist modifiable Details",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\":\"work\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}api/v1/playlists/5e7969965146d92e98ac3ef7",
									"host": [
										"{{URL}}api"
									],
									"path": [
										"v1",
										"playlists",
										"5e7969965146d92e98ac3ef7"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "472"
								},
								{
									"key": "ETag",
									"value": "W/\"1d8-d7MwXiKRiX3Rv5IweSrucNrTuVA\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Date",
									"value": "Wed, 15 Apr 2020 20:22:59 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"collaborative\": true,\n    \"images\": [\n        \"https://thesymphonia.ddns.net/api/v1/images/playlists/playlist1.jpg\"\n    ],\n    \"public\": false,\n    \"tracks\": [\n        \"5e7d2dc03429e24340ff1396\",\n        \"5e8a1e767937ec4d40c6debc\",\n        \"5e8a1e9a7937ec4d40c6debe\"\n    ],\n    \"followers\": [\n        \"5e812db054660672fd699881\",\n        \"5e812a3454660672fd699880\"\n    ],\n    \"_id\": \"5e7969965146d92e98ac3ef7\",\n    \"name\": \"work\",\n    \"owner\": \"5e8125dc54660672fd69987f\",\n    \"description\": \"Its my favourite playlist\",\n    \"category\": \"5e883e48c808fd1aa40ad1f8\",\n    \"id\": \"5e7969965146d92e98ac3ef7\"\n}"
						}
					]
				},
				{
					"name": "Replace Playlist Tracks",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"tracks\":[\"5e7d2dc03429e24340ff1396\",\"5e7969965146d92e98ac3ef7\"]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/playlists/:{playlist_id}/tracks",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"playlists",
								":{playlist_id}",
								"tracks"
							],
							"variable": [
								{
									"key": "{playlist_id}",
									"value": "5e7ac3c7d43a2c49909c549c",
									"description": "The `Symphonia` id for the document you want to retrieve"
								}
							]
						}
					},
					"response": [
						{
							"name": "Replace Playlist Tracks",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"tracks\":[\"5e7d2dc03429e24340ff1396\",\"5e7969965146d92e98ac3ef7\"]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:3000/api/v1/playlists/5e8917da5722242260b8b36a/tracks",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"v1",
										"playlists",
										"5e8917da5722242260b8b36a",
										"tracks"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "1000"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "999"
								},
								{
									"key": "Date",
									"value": "Sun, 05 Apr 2020 18:55:20 GMT"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1586116518"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "299"
								},
								{
									"key": "ETag",
									"value": "W/\"12b-PAKLHgVDsOxKSoItqqtESzXmV1M\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"collaborative\": true,\n    \"images\": [],\n    \"public\": true,\n    \"tracks\": [\n        \"5e7d2dc03429e24340ff1396\",\n        \"5e7969965146d92e98ac3ef7\"\n    ],\n    \"followers\": [],\n    \"_id\": \"5e8917da5722242260b8b36a\",\n    \"name\": \"FavPlaylist\",\n    \"owner\": \"5e88e6f5ccc94d4c5c76e80d\",\n    \"__v\": 0,\n    \"description\": \"Its my favourite playlist\",\n    \"id\": \"5e8917da5722242260b8b36a\"\n}"
						}
					]
				},
				{
					"name": "Upload Custom Playlist Cover Image",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjVlODhlNmY1Y2NjOTRkNGM1Yzc2ZTgwZCIsImlhdCI6MTU4NjExMzM5OSwiZXhwIjoxNTg2MTE2OTk5fQ.qEMJ6LjDJfbZe4_UaNNXhM5gv8HD_GKlyUQbPkan3P8",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"images\":\"The Image URL\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/playlists/:{playlist_id}/images",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"playlists",
								":{playlist_id}",
								"images"
							],
							"variable": [
								{
									"key": "{playlist_id}",
									"value": "5e7ac3c7d43a2c49909c549c",
									"description": "The `Symphonia` id for the document you want to retrieve"
								}
							]
						}
					},
					"response": [
						{
							"name": "Upload Custom Playlist Cover Image",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"images\":\"The Image URL\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:3000/api/v1/playlists/5e8917da5722242260b8b36a/images",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"v1",
										"playlists",
										"5e8917da5722242260b8b36a",
										"images"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "1000"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "999"
								},
								{
									"key": "Date",
									"value": "Sun, 05 Apr 2020 19:06:28 GMT"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1586117117"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "314"
								},
								{
									"key": "ETag",
									"value": "W/\"13a-V/obAenUscgOuKRhoLskznoNoYM\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"collaborative\": true,\n    \"images\": [\n        \"The Image URL\"\n    ],\n    \"public\": true,\n    \"tracks\": [\n        \"5e7d2dc03429e24340ff1396\",\n        \"5e7969965146d92e98ac3ef7\"\n    ],\n    \"followers\": [],\n    \"_id\": \"5e8917da5722242260b8b36a\",\n    \"name\": \"FavPlaylist\",\n    \"owner\": \"5e88e6f5ccc94d4c5c76e80d\",\n    \"__v\": 0,\n    \"description\": \"Its my favourite playlist\",\n    \"id\": \"5e8917da5722242260b8b36a\"\n}"
						}
					]
				},
				{
					"name": "Get a List of a User's Playlists",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}api/v1/users/:{user_id}/playlists?limit=3&offset=1",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"v1",
								"users",
								":{user_id}",
								"playlists"
							],
							"query": [
								{
									"key": "limit",
									"value": "3",
									"description": "`Optional`. The maximum number of items to return. Default: 20. Minimum: 1."
								},
								{
									"key": "offset",
									"value": "1",
									"description": "`Optional`. The index of the first item to return. Default: 0 (the first object). Use with `limit` to get the next set of items."
								}
							],
							"variable": [
								{
									"key": "{user_id}",
									"value": "5e8125dc54660672fd69987f",
									"description": "The `Symphonia` id for the document you want to retrieve"
								}
							]
						},
						"description": "get user followed or owned playlists"
					},
					"response": [
						{
							"name": "Get a List of a User's Playlists",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{URL}}api/v1/users/:{user_id}/playlists?limit=3&offset=1",
									"host": [
										"{{URL}}api"
									],
									"path": [
										"v1",
										"users",
										":{user_id}",
										"playlists"
									],
									"query": [
										{
											"key": "limit",
											"value": "3",
											"description": "`Optional`. The maximum number of items to return. Default: 20. Minimum: 1."
										},
										{
											"key": "offset",
											"value": "1",
											"description": "`Optional`. The index of the first item to return. Default: 0 (the first object). Use with `limit` to get the next set of items."
										}
									],
									"variable": [
										{
											"key": "{user_id}",
											"value": "5e8125dc54660672fd69987f",
											"description": "The `Symphonia` id for the document you want to retrieve"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.0 (Ubuntu)"
								},
								{
									"key": "Date",
									"value": "Wed, 10 Jun 2020 12:50:16 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "ETag",
									"value": "W/\"8bc-Ue9M8QJJHJGieWSf6lRCHz4pmLk\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"playlists\": {\n        \"total\": 3,\n        \"items\": [\n            {\n                \"collaborative\": false,\n                \"images\": [\n                    \"https://thesymphonia.ddns.net/api/v1/images/albums/The-Slow-Rush.jpg\"\n                ],\n                \"public\": true,\n                \"tracks\": [\n                    \"5e7d2ddd3429e24340ff1397\",\n                    \"5e7d2e023429e24340ff1398\",\n                    \"5e7d334860cd930408a5f995\",\n                    \"5e8a1e0f7937ec4d40c6deba\"\n                ],\n                \"followers\": [\n                    \"5e812db054660672fd699881\",\n                    \"5e812a3454660672fd699880\"\n                ],\n                \"deleted\": false,\n                \"_id\": \"5e7ac3c7d43a2c49909c549c\",\n                \"name\": \"Songs to Sing in the Shower\",\n                \"owner\": {\n                    \"_id\": \"5e8125dc54660672fd69987f\",\n                    \"name\": \"Muhammad Ahmad Hesham\"\n                },\n                \"description\": \"Soundtrack to My Whimsical, Quirky Life as an Unpaid Intern\",\n                \"category\": \"5e883e48c808fd1aa40ad1f8\",\n                \"__v\": 2,\n                \"tracksCount\": 4,\n                \"id\": \"5e7ac3c7d43a2c49909c549c\"\n            },\n            {\n                \"collaborative\": true,\n                \"images\": [\n                    \"https://thesymphonia.ddns.net/api/v1/images/playlists/playlist3.jpg\"\n                ],\n                \"public\": true,\n                \"tracks\": [\n                    \"5e8a1ea07937ec4d40c6debf\"\n                ],\n                \"followers\": [\n                    \"5e812db054660672fd699881\",\n                    \"5e812a3454660672fd699880\"\n                ],\n                \"deleted\": false,\n                \"_id\": \"5e805a8a3711912168602afa\",\n                \"name\": \"Soak Up the Sun\",\n                \"owner\": {\n                    \"_id\": \"5e8125dc54660672fd69987f\",\n                    \"name\": \"Muhammad Ahmad Hesham\"\n                },\n                \"description\": \"My Parents Pay for my Premium Account, My Rent, and Literally Everything Else\",\n                \"category\": \"5e8076e6a9902a4328cc285c\",\n                \"tracksCount\": 1,\n                \"id\": \"5e805a8a3711912168602afa\"\n            },\n            {\n                \"collaborative\": true,\n                \"images\": [\n                    \"https://thesymphonia.ddns.net/api/v1/images/playlists/playlist4.jpg\"\n                ],\n                \"public\": true,\n                \"tracks\": [\n                    \"5e7d334860cd930408a5f995\",\n                    \"5e8a1e0f7937ec4d40c6deba\",\n                    \"5e8a1e727937ec4d40c6debb\"\n                ],\n                \"followers\": [\n                    \"5e8125dc54660672fd69987f\",\n                    \"5e82a48054660672fd699883\",\n                    \"5e812db054660672fd699881\",\n                    \"5edff84830afcb26b83fb1ac\",\n                    \"5e8c73d82a0e4614b88a4ed0\"\n                ],\n                \"deleted\": false,\n                \"_id\": \"5e806865ef653f5a541e0b1d\",\n                \"name\": \"The Ultimate Indie Playlist\",\n                \"owner\": {\n                    \"_id\": \"5e812a3454660672fd699880\",\n                    \"name\": \"user1\"\n                },\n                \"description\": \"My Parents Pay for my Premium Account, My Rent, and Literally Everything Else\",\n                \"category\": \"5e807517e478cf39b47bd1f0\",\n                \"__v\": 38,\n                \"tracksCount\": 3,\n                \"id\": \"5e806865ef653f5a541e0b1d\"\n            }\n        ],\n        \"limit\": 3,\n        \"offset\": 1,\n        \"next\": \"https://thesymphonia.ddns.net/api/v1/users/5e8125dc54660672fd69987f/playlists?offset=4&limit=3\",\n        \"previous\": \"https://thesymphonia.ddns.net/api/v1/users/5e8125dc54660672fd69987f/playlists?offset=0&limit=3\",\n        \"href\": \"https://thesymphonia.ddns.net/api/v1/users/5e8125dc54660672fd69987f/playlists\"\n    }\n}"
						}
					]
				},
				{
					"name": "Get Current User Playlists",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}api/v1/me/playlists?limit=30&offset=0",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"v1",
								"me",
								"playlists"
							],
							"query": [
								{
									"key": "limit",
									"value": "30",
									"description": "`Optional`. The maximum number of items to return. Default: 20. Minimum: 1."
								},
								{
									"key": "offset",
									"value": "0",
									"description": "`Optional`. The index of the first item to return. Default: 0 (the first object). Use with `limit` to get the next set of items."
								}
							]
						},
						"description": "get current user owned or followed playlists"
					},
					"response": [
						{
							"name": "Get Current User Playlists",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{URL}}api/v1/me/playlists?limit=30&offset=0",
									"host": [
										"{{URL}}api"
									],
									"path": [
										"v1",
										"me",
										"playlists"
									],
									"query": [
										{
											"key": "limit",
											"value": "30",
											"description": "`Optional`. The maximum number of items to return. Default: 20. Minimum: 1."
										},
										{
											"key": "offset",
											"value": "0",
											"description": "`Optional`. The index of the first item to return. Default: 0 (the first object). Use with `limit` to get the next set of items."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.0 (Ubuntu)"
								},
								{
									"key": "Date",
									"value": "Wed, 10 Jun 2020 12:52:30 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "ETag",
									"value": "W/\"128f-BXOXauyBpzKvXrQaVrnOUGZeLxo\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"playlists\": {\n        \"total\": 7,\n        \"items\": [\n            {\n                \"collaborative\": false,\n                \"images\": [\n                    \"https://thesymphonia.ddns.net/api/v1/images/playlists/playlist1.jpg\"\n                ],\n                \"public\": true,\n                \"tracks\": [\n                    \"5e7d2dc03429e24340ff1396\",\n                    \"5e8a1e767937ec4d40c6debc\",\n                    \"5e8a1e9a7937ec4d40c6debe\"\n                ],\n                \"followers\": [\n                    \"5e812db054660672fd699881\",\n                    \"5e812a3454660672fd699880\",\n                    \"5e8c75c4e37ac11ac4f01357\",\n                    \"5e82a48054660672fd699883\"\n                ],\n                \"deleted\": false,\n                \"_id\": \"5e7969965146d92e98ac3ef7\",\n                \"name\": \"Songs to Sing in the Shower\",\n                \"owner\": {\n                    \"_id\": \"5e8125dc54660672fd69987f\",\n                    \"name\": \"Muhammad Ahmad Hesham\"\n                },\n                \"description\": \"My Favorite Public Place to Pretend is My Living Room Mix\",\n                \"category\": \"5e883e48c808fd1aa40ad1f8\",\n                \"tracksCount\": 3,\n                \"id\": \"5e7969965146d92e98ac3ef7\"\n            },\n            {\n                \"collaborative\": false,\n                \"images\": [\n                    \"https://thesymphonia.ddns.net/api/v1/images/albums/The-Slow-Rush.jpg\"\n                ],\n                \"public\": true,\n                \"tracks\": [\n                    \"5e7d2ddd3429e24340ff1397\",\n                    \"5e7d2e023429e24340ff1398\",\n                    \"5e7d334860cd930408a5f995\",\n                    \"5e8a1e0f7937ec4d40c6deba\"\n                ],\n                \"followers\": [\n                    \"5e812db054660672fd699881\",\n                    \"5e812a3454660672fd699880\"\n                ],\n                \"deleted\": false,\n                \"_id\": \"5e7ac3c7d43a2c49909c549c\",\n                \"name\": \"Songs to Sing in the Shower\",\n                \"owner\": {\n                    \"_id\": \"5e8125dc54660672fd69987f\",\n                    \"name\": \"Muhammad Ahmad Hesham\"\n                },\n                \"description\": \"Soundtrack to My Whimsical, Quirky Life as an Unpaid Intern\",\n                \"category\": \"5e883e48c808fd1aa40ad1f8\",\n                \"__v\": 2,\n                \"tracksCount\": 4,\n                \"id\": \"5e7ac3c7d43a2c49909c549c\"\n            },\n            {\n                \"collaborative\": true,\n                \"images\": [\n                    \"https://thesymphonia.ddns.net/api/v1/images/playlists/playlist3.jpg\"\n                ],\n                \"public\": true,\n                \"tracks\": [\n                    \"5e8a1ea07937ec4d40c6debf\"\n                ],\n                \"followers\": [\n                    \"5e812db054660672fd699881\",\n                    \"5e812a3454660672fd699880\"\n                ],\n                \"deleted\": false,\n                \"_id\": \"5e805a8a3711912168602afa\",\n                \"name\": \"Soak Up the Sun\",\n                \"owner\": {\n                    \"_id\": \"5e8125dc54660672fd69987f\",\n                    \"name\": \"Muhammad Ahmad Hesham\"\n                },\n                \"description\": \"My Parents Pay for my Premium Account, My Rent, and Literally Everything Else\",\n                \"category\": \"5e8076e6a9902a4328cc285c\",\n                \"tracksCount\": 1,\n                \"id\": \"5e805a8a3711912168602afa\"\n            },\n            {\n                \"collaborative\": true,\n                \"images\": [\n                    \"https://thesymphonia.ddns.net/api/v1/images/playlists/playlist4.jpg\"\n                ],\n                \"public\": true,\n                \"tracks\": [\n                    \"5e7d334860cd930408a5f995\",\n                    \"5e8a1e0f7937ec4d40c6deba\",\n                    \"5e8a1e727937ec4d40c6debb\"\n                ],\n                \"followers\": [\n                    \"5e8125dc54660672fd69987f\",\n                    \"5e82a48054660672fd699883\",\n                    \"5e812db054660672fd699881\",\n                    \"5edff84830afcb26b83fb1ac\",\n                    \"5e8c73d82a0e4614b88a4ed0\"\n                ],\n                \"deleted\": false,\n                \"_id\": \"5e806865ef653f5a541e0b1d\",\n                \"name\": \"The Ultimate Indie Playlist\",\n                \"owner\": {\n                    \"_id\": \"5e812a3454660672fd699880\",\n                    \"name\": \"user1\"\n                },\n                \"description\": \"My Parents Pay for my Premium Account, My Rent, and Literally Everything Else\",\n                \"category\": \"5e807517e478cf39b47bd1f0\",\n                \"__v\": 38,\n                \"tracksCount\": 3,\n                \"id\": \"5e806865ef653f5a541e0b1d\"\n            },\n            {\n                \"collaborative\": false,\n                \"images\": [\n                    \"https://thesymphonia.ddns.net/api/v1/images/albums/TRST.jpg\"\n                ],\n                \"public\": true,\n                \"tracks\": [\n                    \"5e8a39f24e11cd46c8bde654\",\n                    \"5e8a37d0d56ea252c3860a1a\",\n                    \"5e8a1e9a7937ec4d40c6debe\",\n                    \"5e8a1e937937ec4d40c6debd\",\n                    \"5e8a1e767937ec4d40c6debc\",\n                    \"5e8a1e727937ec4d40c6debb\",\n                    \"5e8a1ea07937ec4d40c6debf\",\n                    \"5e7d2ddd3429e24340ff1397\"\n                ],\n                \"followers\": [\n                    \"5e8125dc54660672fd69987f\",\n                    \"5e8c7843e37ac11ac4f01361\",\n                    \"5e8137aa54660672fd699882\"\n                ],\n                \"deleted\": false,\n                \"_id\": \"5e8078b0dbaafc18605cb029\",\n                \"name\": \"Power Workout\",\n                \"owner\": {\n                    \"_id\": \"5e812a3454660672fd699880\",\n                    \"name\": \"user1\"\n                },\n                \"description\": \"Pump Up Jams for Carrying Groceries Up to My Sixth Floor Walk-Up\",\n                \"category\": \"5e8076e6a9902a4328cc285c\",\n                \"__v\": 4,\n                \"tracksCount\": 8,\n                \"id\": \"5e8078b0dbaafc18605cb029\"\n            },\n            {\n                \"collaborative\": false,\n                \"images\": [\n                    \"https://thesymphonia.ddns.net/api/v1/images/playlists/playlist7.jpg\"\n                ],\n                \"public\": true,\n                \"tracks\": [\n                    \"5e8a1e767937ec4d40c6debc\",\n                    \"5e8a1e937937ec4d40c6debd\",\n                    \"5e8a1e9a7937ec4d40c6debe\"\n                ],\n                \"followers\": [\n                    \"5e8125dc54660672fd69987f\"\n                ],\n                \"deleted\": false,\n                \"_id\": \"5e8088fa79844f135496ec7f\",\n                \"name\": \"Breakup Songs\",\n                \"owner\": {\n                    \"_id\": \"5e812db054660672fd699881\",\n                    \"name\": \"user2\"\n                },\n                \"description\": \"I Have Terrible News for You and I’ll Tell You What Right After This 30 Second Ad for Sam Adams Summer Ale Ends and The Cure Starts Playing\",\n                \"category\": \"5e8076e6a9902a4328cc285c\",\n                \"tracksCount\": 3,\n                \"id\": \"5e8088fa79844f135496ec7f\"\n            },\n            {\n                \"collaborative\": false,\n                \"images\": [\n                    \"https://thesymphonia.ddns.net/api/v1/images/playlists/playlist10.jpg\"\n                ],\n                \"public\": true,\n                \"tracks\": [\n                    \"5e8a39f24e11cd46c8bde654\",\n                    \"5e8a37d0d56ea252c3860a1a\",\n                    \"5e8a1ea07937ec4d40c6debf\",\n                    \"5e8a1e9a7937ec4d40c6debe\",\n                    \"5e8a1e937937ec4d40c6debd\",\n                    \"5e8a1e767937ec4d40c6debc\",\n                    \"5e8a1e727937ec4d40c6debb\"\n                ],\n                \"followers\": [\n                    \"5e812db054660672fd699881\",\n                    \"5e8c7843e37ac11ac4f01361\"\n                ],\n                \"deleted\": false,\n                \"_id\": \"5e875c15ba6ebe663fdbb2c1\",\n                \"name\": \"All the Feels\",\n                \"owner\": {\n                    \"_id\": \"5e8125dc54660672fd69987f\",\n                    \"name\": \"Muhammad Ahmad Hesham\"\n                },\n                \"description\": \"I Just Double Texted and Now I Totally Get What Joan Didion Went Through\",\n                \"category\": \"5e8072e5e478cf39b47bd1ef\",\n                \"tracksCount\": 7,\n                \"id\": \"5e875c15ba6ebe663fdbb2c1\"\n            }\n        ],\n        \"limit\": 30,\n        \"offset\": 0,\n        \"next\": null,\n        \"previous\": null,\n        \"href\": \"https://thesymphonia.ddns.net/api/v1/me/playlists\"\n    }\n}"
						}
					]
				},
				{
					"name": "Get Current User Owned Playlists",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}api/v1/me/playlists/owned?limit=20&offset=0",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"v1",
								"me",
								"playlists",
								"owned"
							],
							"query": [
								{
									"key": "limit",
									"value": "20",
									"description": "`Optional`. The maximum number of items to return. Default: 20. Minimum: 1."
								},
								{
									"key": "offset",
									"value": "0",
									"description": "`Optional`. The index of the first item to return. Default: 0 (the first object). Use with `limit` to get the next set of items."
								}
							]
						},
						"description": "## get current user owned playlists only"
					},
					"response": [
						{
							"name": "Get Current User Owned Playlists",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{URL}}api/v1/me/playlists/owned?limit=20&offset=0",
									"host": [
										"{{URL}}api"
									],
									"path": [
										"v1",
										"me",
										"playlists",
										"owned"
									],
									"query": [
										{
											"key": "limit",
											"value": "20",
											"description": "`Optional`. The maximum number of items to return. Default: 20. Minimum: 1."
										},
										{
											"key": "offset",
											"value": "0",
											"description": "`Optional`. The index of the first item to return. Default: 0 (the first object). Use with `limit` to get the next set of items."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.0 (Ubuntu)"
								},
								{
									"key": "Date",
									"value": "Wed, 10 Jun 2020 12:53:13 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "ETag",
									"value": "W/\"a8d-/hY6cNWVQ4m5qhCEm5a7DeQj9QQ\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"playlists\": {\n        \"total\": 4,\n        \"items\": [\n            {\n                \"collaborative\": false,\n                \"images\": [\n                    \"https://thesymphonia.ddns.net/api/v1/images/playlists/playlist1.jpg\"\n                ],\n                \"public\": true,\n                \"tracks\": [\n                    \"5e7d2dc03429e24340ff1396\",\n                    \"5e8a1e767937ec4d40c6debc\",\n                    \"5e8a1e9a7937ec4d40c6debe\"\n                ],\n                \"followers\": [\n                    \"5e812db054660672fd699881\",\n                    \"5e812a3454660672fd699880\",\n                    \"5e8c75c4e37ac11ac4f01357\",\n                    \"5e82a48054660672fd699883\"\n                ],\n                \"deleted\": false,\n                \"_id\": \"5e7969965146d92e98ac3ef7\",\n                \"name\": \"Songs to Sing in the Shower\",\n                \"owner\": {\n                    \"_id\": \"5e8125dc54660672fd69987f\",\n                    \"name\": \"Muhammad Ahmad Hesham\"\n                },\n                \"description\": \"My Favorite Public Place to Pretend is My Living Room Mix\",\n                \"category\": \"5e883e48c808fd1aa40ad1f8\",\n                \"tracksCount\": 3,\n                \"id\": \"5e7969965146d92e98ac3ef7\"\n            },\n            {\n                \"collaborative\": false,\n                \"images\": [\n                    \"https://thesymphonia.ddns.net/api/v1/images/albums/The-Slow-Rush.jpg\"\n                ],\n                \"public\": true,\n                \"tracks\": [\n                    \"5e7d2ddd3429e24340ff1397\",\n                    \"5e7d2e023429e24340ff1398\",\n                    \"5e7d334860cd930408a5f995\",\n                    \"5e8a1e0f7937ec4d40c6deba\"\n                ],\n                \"followers\": [\n                    \"5e812db054660672fd699881\",\n                    \"5e812a3454660672fd699880\"\n                ],\n                \"deleted\": false,\n                \"_id\": \"5e7ac3c7d43a2c49909c549c\",\n                \"name\": \"Songs to Sing in the Shower\",\n                \"owner\": {\n                    \"_id\": \"5e8125dc54660672fd69987f\",\n                    \"name\": \"Muhammad Ahmad Hesham\"\n                },\n                \"description\": \"Soundtrack to My Whimsical, Quirky Life as an Unpaid Intern\",\n                \"category\": \"5e883e48c808fd1aa40ad1f8\",\n                \"__v\": 2,\n                \"tracksCount\": 4,\n                \"id\": \"5e7ac3c7d43a2c49909c549c\"\n            },\n            {\n                \"collaborative\": true,\n                \"images\": [\n                    \"https://thesymphonia.ddns.net/api/v1/images/playlists/playlist3.jpg\"\n                ],\n                \"public\": true,\n                \"tracks\": [\n                    \"5e8a1ea07937ec4d40c6debf\"\n                ],\n                \"followers\": [\n                    \"5e812db054660672fd699881\",\n                    \"5e812a3454660672fd699880\"\n                ],\n                \"deleted\": false,\n                \"_id\": \"5e805a8a3711912168602afa\",\n                \"name\": \"Soak Up the Sun\",\n                \"owner\": {\n                    \"_id\": \"5e8125dc54660672fd69987f\",\n                    \"name\": \"Muhammad Ahmad Hesham\"\n                },\n                \"description\": \"My Parents Pay for my Premium Account, My Rent, and Literally Everything Else\",\n                \"category\": \"5e8076e6a9902a4328cc285c\",\n                \"tracksCount\": 1,\n                \"id\": \"5e805a8a3711912168602afa\"\n            },\n            {\n                \"collaborative\": false,\n                \"images\": [\n                    \"https://thesymphonia.ddns.net/api/v1/images/playlists/playlist10.jpg\"\n                ],\n                \"public\": true,\n                \"tracks\": [\n                    \"5e8a39f24e11cd46c8bde654\",\n                    \"5e8a37d0d56ea252c3860a1a\",\n                    \"5e8a1ea07937ec4d40c6debf\",\n                    \"5e8a1e9a7937ec4d40c6debe\",\n                    \"5e8a1e937937ec4d40c6debd\",\n                    \"5e8a1e767937ec4d40c6debc\",\n                    \"5e8a1e727937ec4d40c6debb\"\n                ],\n                \"followers\": [\n                    \"5e812db054660672fd699881\",\n                    \"5e8c7843e37ac11ac4f01361\"\n                ],\n                \"deleted\": false,\n                \"_id\": \"5e875c15ba6ebe663fdbb2c1\",\n                \"name\": \"All the Feels\",\n                \"owner\": {\n                    \"_id\": \"5e8125dc54660672fd69987f\",\n                    \"name\": \"Muhammad Ahmad Hesham\"\n                },\n                \"description\": \"I Just Double Texted and Now I Totally Get What Joan Didion Went Through\",\n                \"category\": \"5e8072e5e478cf39b47bd1ef\",\n                \"tracksCount\": 7,\n                \"id\": \"5e875c15ba6ebe663fdbb2c1\"\n            }\n        ],\n        \"limit\": 30,\n        \"offset\": 0,\n        \"next\": null,\n        \"previous\": null,\n        \"href\": \"https://thesymphonia.ddns.net/api/v1/me/playlists/owned\"\n    }\n}"
						}
					]
				},
				{
					"name": "Get Current User Deleted Playlists",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}api/v1/me/playlists/deleted?limit=5&offset=1",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"v1",
								"me",
								"playlists",
								"deleted"
							],
							"query": [
								{
									"key": "limit",
									"value": "5",
									"description": "`Optional`. The maximum number of items to return. Default: 20. Minimum: 1."
								},
								{
									"key": "offset",
									"value": "1",
									"description": "`Optional`. The index of the first item to return. Default: 0 (the first object). Use with `limit` to get the next set of items."
								}
							]
						}
					},
					"response": [
						{
							"name": "Get Current User Deleted Playlists",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{URL}}api/v1/me/playlists/deleted?limit=5&offset=1",
									"host": [
										"{{URL}}api"
									],
									"path": [
										"v1",
										"me",
										"playlists",
										"deleted"
									],
									"query": [
										{
											"key": "limit",
											"value": "5"
										},
										{
											"key": "offset",
											"value": "1"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "ETag",
									"value": "W/\"562-3YvDjZjMA8eEKQi5vXPVGffMQ6M\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "Date",
									"value": "Tue, 26 May 2020 19:21:35 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"playlists\": {\n        \"total\": 2,\n        \"items\": [\n            {\n                \"collaborative\": false,\n                \"images\": [\n                    \"https://thesymphonia.ddns.net/api/v1/images/playlists/playlist2.jpg\"\n                ],\n                \"public\": true,\n                \"tracks\": [\n                    \"5e7d2ddd3429e24340ff1397\",\n                    \"5e7d2e023429e24340ff1398\",\n                    \"5e7d334860cd930408a5f995\",\n                    \"5e8a1e0f7937ec4d40c6deba\"\n                ],\n                \"followers\": [\n                    \"5e812db054660672fd699881\",\n                    \"5e812a3454660672fd699880\"\n                ],\n                \"deleted\": true,\n                \"_id\": \"5e7ac3c7d43a2c49909c549c\",\n                \"name\": \"Young, Wild and Free\",\n                \"owner\": \"5e8125dc54660672fd69987f\",\n                \"description\": \"Soundtrack to My Whimsical, Quirky Life as an Unpaid Intern\",\n                \"category\": \"5e883e48c808fd1aa40ad1f8\",\n                \"deletedAt\": \"2020-05-26T19:05:42.605Z\",\n                \"tracksCount\": 4,\n                \"id\": \"5e7ac3c7d43a2c49909c549c\"\n            },\n            {\n                \"collaborative\": true,\n                \"images\": [\n                    \"https://thesymphonia.ddns.net/api/v1/images/playlists/playlist3.jpg\"\n                ],\n                \"public\": true,\n                \"tracks\": [\n                    \"5e8a1ea07937ec4d40c6debf\"\n                ],\n                \"followers\": [\n                    \"5e812db054660672fd699881\",\n                    \"5e812a3454660672fd699880\"\n                ],\n                \"deleted\": true,\n                \"_id\": \"5e805a8a3711912168602afa\",\n                \"name\": \"Soak Up the Sun\",\n                \"owner\": \"5e8125dc54660672fd69987f\",\n                \"description\": \"My Parents Pay for my Premium Account, My Rent, and Literally Everything Else\",\n                \"category\": \"5e8076e6a9902a4328cc285c\",\n                \"deletedAt\": \"2020-05-26T19:05:57.289Z\",\n                \"tracksCount\": 1,\n                \"id\": \"5e805a8a3711912168602afa\"\n            }\n        ],\n        \"limit\": 5,\n        \"offset\": 1,\n        \"next\": null,\n        \"previous\": \"http://localhost:3000/api/v1/me/playlists/deleted?offset=0&limit=5\",\n        \"href\": \"http://localhost:3000/api/v1/me/playlists/deleted\"\n    }\n}"
						},
						{
							"name": "No deleted playlists for the current user",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{URL}}api/v1/me/playlists/deleted?limit=5&page=1",
									"host": [
										"{{URL}}api"
									],
									"path": [
										"v1",
										"me",
										"playlists",
										"deleted"
									],
									"query": [
										{
											"key": "limit",
											"value": "5"
										},
										{
											"key": "page",
											"value": "1"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "2"
								},
								{
									"key": "ETag",
									"value": "W/\"2-l9Fw4VUO7kr8CvBlt4zaMCqXZ0w\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Date",
									"value": "Thu, 16 Apr 2020 09:29:22 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "[]"
						}
					]
				},
				{
					"name": "Recover current user deleted playlist",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{URL}}api/v1/me/playlists/:{playlist_id}",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"v1",
								"me",
								"playlists",
								":{playlist_id}"
							],
							"variable": [
								{
									"key": "{playlist_id}",
									"value": "5e7ac3c7d43a2c49909c549c",
									"description": "The `Symphonia` id for the document you want to retrieve"
								}
							]
						}
					},
					"response": [
						{
							"name": "If provided id isn't a deleted playlist of the current user's",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{URL}}api/v1/me/playlists/:{id}",
									"host": [
										"{{URL}}api"
									],
									"path": [
										"v1",
										"me",
										"playlists",
										":{id}"
									],
									"variable": [
										{
											"key": "{id}",
											"value": "5e7ac3c7d43a2c49909c549c"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "28"
								},
								{
									"key": "ETag",
									"value": "W/\"1c-g+T1R81DXBIDtp29krF91UvJspA\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Date",
									"value": "Thu, 16 Apr 2020 09:25:33 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"recoveredPlaylistCount\": 0\n}"
						},
						{
							"name": "Recover current user deleted playlist",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{URL}}api/v1/me/playlists/:{id}",
									"host": [
										"{{URL}}api"
									],
									"path": [
										"v1",
										"me",
										"playlists",
										":{id}"
									],
									"variable": [
										{
											"key": "{id}",
											"value": "5e7ac3c7d43a2c49909c549c"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "28"
								},
								{
									"key": "ETag",
									"value": "W/\"1c-mKG01ivPEbNFtJ3m7T1W8BZ18G0\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Date",
									"value": "Thu, 16 Apr 2020 09:25:21 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"recoveredPlaylistCount\": 1\n}"
						}
					]
				},
				{
					"name": "Create Playlist",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "",
								"description": "*Required*. A valid access token from the Symphonia Accounts service.\n",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"collaborative\": false,\n    \"public\": true,\n    \"name\": \"playlist\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}api/v1/users/:{user_id}/playlists",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"v1",
								"users",
								":{user_id}",
								"playlists"
							],
							"variable": [
								{
									"key": "{user_id}",
									"value": "5e8125dc54660672fd69987f",
									"description": "The `Symphonia` id for the document you want to retrieve"
								}
							]
						}
					},
					"response": [
						{
							"name": "Create Playlist",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"value": "",
										"description": "*Required*. A valid access token from the Symphonia Accounts service.\n",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"collaborative\": false,\n    \"public\": true,\n    \"name\": \"playlist\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}api/v1/users/:{userId}/playlists",
									"host": [
										"{{URL}}api"
									],
									"path": [
										"v1",
										"users",
										":{userId}",
										"playlists"
									],
									"variable": [
										{
											"key": "{userId}",
											"value": "5e8c780ae37ac11ac4f01360"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "326"
								},
								{
									"key": "ETag",
									"value": "W/\"146-/sC5ehVFdjD+E7JVjjDCMqclW2k\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Date",
									"value": "Thu, 23 Apr 2020 15:21:21 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"collaborative\": false,\n    \"images\": [\n        \"http://localhost:3000/api/v1/images/playlists/default.png\"\n    ],\n    \"public\": true,\n    \"tracks\": [],\n    \"followers\": [],\n    \"_id\": \"5ea1b2716a5ada43c83109cb\",\n    \"deleted\": false,\n    \"name\": \"playlist\",\n    \"owner\": {\n        \"_id\": \"5e8c780ae37ac11ac4f01360\",\n        \"name\": \"Lebanon Hanover\"\n    },\n    \"__v\": 0,\n    \"tracksCount\": 0,\n    \"id\": \"5ea1b2716a5ada43c83109cb\"\n}"
						}
					]
				},
				{
					"name": "Get Random Playlists",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"tracks\":[\"5e7d2dc03429e24340ff1396\",\"5e7d2e023429e24340ff1398\"]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}api/v1/playlists/rand?number=5",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"v1",
								"playlists",
								"rand"
							],
							"query": [
								{
									"key": "number",
									"value": "5",
									"description": "number of random playlists you want to get"
								}
							]
						}
					},
					"response": [
						{
							"name": "Get Random Playlists",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"tracks\":[\"5e7d2dc03429e24340ff1396\",\"5e7d2e023429e24340ff1398\"]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}api/v1/playlists/rand?number=5",
									"host": [
										"{{URL}}api"
									],
									"path": [
										"v1",
										"playlists",
										"rand"
									],
									"query": [
										{
											"key": "number",
											"value": "5"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "ETag",
									"value": "W/\"9c3-W+Wns07KvJyrTNjXEVYY471xfHo\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "Date",
									"value": "Tue, 07 Apr 2020 21:11:18 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"_id\": \"5e8a6d96d4be480ab1d91c95\",\n        \"name\": \"Sleep Sounds: Waterscapes\",\n        \"owner\": \"5e8125dc54660672fd69987f\",\n        \"collaborative\": false,\n        \"description\": \"White Noise to Drown Out the Sounds of Police Sirens, Honking Trucks, and Overnight Construction Work Because I Live Right Next to the Brooklyn-Queens Expressway Because This Is the Only Studio Apartment I Can Afford\",\n        \"public\": true,\n        \"followers\": [],\n        \"images\": [\n            \"https://zasymphonia.ddns.net/api/v1/images/playlists/playlist13.jpg\"\n        ],\n        \"tracks\": [\n            \"5e7d2dc03429e24340ff1396\",\n            \"5e7d2ddd3429e24340ff1397\",\n            \"5e7d2e023429e24340ff1398\"\n        ],\n        \"category\": \"5e8072e5e478cf39b47bd1ef\"\n    },\n    {\n        \"_id\": \"5e805a8a3711912168602afa\",\n        \"name\": \"Soak Up the Sun\",\n        \"owner\": \"5e8125dc54660672fd69987f\",\n        \"collaborative\": true,\n        \"description\": \"My Parents Pay for my Premium Account, My Rent, and Literally Everything Else\",\n        \"public\": true,\n        \"followers\": [\n            \"5e812db054660672fd699881\",\n            \"5e812a3454660672fd699880\"\n        ],\n        \"images\": [\n            \"https://zasymphonia.ddns.net/api/v1/images/playlists/playlist3.jpg\"\n        ],\n        \"tracks\": [\n            \"5e8a1ea07937ec4d40c6debf\"\n        ],\n        \"category\": \"5e8076e6a9902a4328cc285c\"\n    },\n    {\n        \"_id\": \"5e7ac3c7d43a2c49909c549c\",\n        \"name\": \"Young, Wild and Free\",\n        \"owner\": \"5e8125dc54660672fd69987f\",\n        \"collaborative\": false,\n        \"description\": \"Soundtrack to My Whimsical, Quirky Life as an Unpaid Intern\",\n        \"public\": true,\n        \"followers\": [\n            \"5e812db054660672fd699881\",\n            \"5e812a3454660672fd699880\"\n        ],\n        \"images\": [\n            \"https://zasymphonia.ddns.net/api/v1/images/playlists/playlist2.jpg\"\n        ],\n        \"tracks\": [\n            \"5e7d2ddd3429e24340ff1397\",\n            \"5e7d2e023429e24340ff1398\",\n            \"5e7d334860cd930408a5f995\",\n            \"5e8a1e0f7937ec4d40c6deba\"\n        ],\n        \"category\": \"5e883e48c808fd1aa40ad1f8\"\n    },\n    {\n        \"_id\": \"5e7969965146d92e98ac3ef7\",\n        \"name\": \"Songs to Sing in the Shower\",\n        \"owner\": \"5e8125dc54660672fd69987f\",\n        \"collaborative\": false,\n        \"description\": \"My Favorite Public Place to Pretend is My Living Room Mix\",\n        \"public\": true,\n        \"followers\": [\n            \"5e812db054660672fd699881\",\n            \"5e812a3454660672fd699880\"\n        ],\n        \"images\": [\n            \"https://zasymphonia.ddns.net/api/v1/images/playlists/playlist1.jpg\"\n        ],\n        \"tracks\": [\n            \"5e7d2dc03429e24340ff1396\",\n            \"5e8a1e767937ec4d40c6debc\",\n            \"5e8a1e9a7937ec4d40c6debe\"\n        ],\n        \"category\": \"5e883e48c808fd1aa40ad1f8\"\n    },\n    {\n        \"_id\": \"5e882913838d9835d207016e\",\n        \"name\": \"Top Party Jams\",\n        \"owner\": \"5e812db054660672fd699881\",\n        \"collaborative\": false,\n        \"description\": \"Songs I Put on to Look “With It” When I’d Rather Be Listening to Yanni on a Windy Moor\",\n        \"public\": true,\n        \"followers\": [],\n        \"images\": [\n            \"https://zasymphonia.ddns.net/api/v1/images/playlists/playlist12.jpg\"\n        ],\n        \"tracks\": [\n            \"5e8a1e727937ec4d40c6debb\",\n            \"5e8a37d0d56ea252c3860a1a\"\n        ],\n        \"category\": \"5e8072e5e478cf39b47bd1ef\"\n    }\n]"
						}
					]
				},
				{
					"name": "Delete playlist",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}api/v1/playlists/:{playlist_id}",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"v1",
								"playlists",
								":{playlist_id}"
							],
							"variable": [
								{
									"key": "{playlist_id}",
									"value": "5e7ac3c7d43a2c49909c549c",
									"description": "The `Symphonia` id for the document you want to retrieve"
								}
							]
						}
					},
					"response": [
						{
							"name": "Delete playlist if already deleted or not found",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{URL}}api/v1/playlists/5e7ac3c7d43a2c49909c549c",
									"host": [
										"{{URL}}api"
									],
									"path": [
										"v1",
										"playlists",
										"5e7ac3c7d43a2c49909c549c"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "52"
								},
								{
									"key": "ETag",
									"value": "W/\"34-itu5Y47PDLZtUHRTTlqLbBF4zD8\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Date",
									"value": "Thu, 16 Apr 2020 09:23:13 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"fail\",\n    \"msg\": \"the document was not found\"\n}"
						},
						{
							"name": "Delete playlist",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{URL}}api/v1/playlists/5e7ac3c7d43a2c49909c549c",
									"host": [
										"{{URL}}api"
									],
									"path": [
										"v1",
										"playlists",
										"5e7ac3c7d43a2c49909c549c"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "ETag",
									"value": "W/\"2-vyGp6PvFo4RvsFtPoIWeCReyIC8\""
								},
								{
									"key": "Date",
									"value": "Thu, 16 Apr 2020 09:22:11 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": null
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "recommendations",
			"item": [
				{
					"name": "Get Recommendation Genres",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"description": "access_token",
								"key": "Authorization",
								"type": "text",
								"value": "{{jwt}}",
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman."
							}
						],
						"url": {
							"raw": "{{URL}}api/v1/recommendations/available-genre-seeds",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"v1",
								"recommendations",
								"available-genre-seeds"
							]
						},
						"description": "# description \nretreives the names of categories recommended"
					},
					"response": [
						{
							"name": "Get Recommendation Genres",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "access_token",
										"key": "Authorization",
										"type": "text",
										"value": "{{jwt}}",
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman."
									}
								],
								"url": {
									"raw": "{{URL}}api/v1/recommendations/available-genre-seeds",
									"host": [
										"{{URL}}api"
									],
									"path": [
										"v1",
										"recommendations",
										"available-genre-seeds"
									],
									"query": [
										{
											"key": "country",
											"value": "{{country_code}}",
											"description": "\tOptional. A country: an ISO 3166-1 alpha-2 country code. Provide this parameter if you want to narrow the list of returned categories to those relevant to a particular country. If omitted, the returned items will be globally relevant.",
											"disabled": true
										},
										{
											"key": "locale",
											"value": "{{language}}",
											"disabled": true
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "70"
								},
								{
									"key": "ETag",
									"value": "W/\"46-vPXHfqw1sxFJmvOHeMA3RrR6ukc\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Date",
									"value": "Tue, 07 Apr 2020 21:12:27 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"genres\": [\n        \"Psychedelic-pop\",\n        \"Indie-rock\",\n        \"Alternative\",\n        \"Electronic\"\n    ]\n}"
						}
					]
				},
				{
					"name": "Get Random Recommendation",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"description": "access_token",
								"key": "Authorization",
								"type": "text",
								"value": "{{jwt}}",
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman."
							}
						],
						"url": {
							"raw": "{{URL}}api/v1/recommendations/?limit=10&offset=0",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"v1",
								"recommendations",
								""
							],
							"query": [
								{
									"key": "limit",
									"value": "10",
									"description": "`Optional`. The maximum number of items to return. Default: 20. Minimum: 1."
								},
								{
									"key": "offset",
									"value": "0",
									"description": "`Optional`. The index of the first item to return. Default: 0 (the first object). Use with `limit` to get the next set of items."
								}
							]
						}
					},
					"response": [
						{
							"name": "Get Random Recommendation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "access_token",
										"key": "Authorization",
										"type": "text",
										"value": "{{jwt}}",
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman."
									}
								],
								"url": {
									"raw": "{{URL}}api/v1/recommendations/?limit=50&offset=0",
									"host": [
										"{{URL}}api"
									],
									"path": [
										"v1",
										"recommendations",
										""
									],
									"query": [
										{
											"key": "country",
											"value": "{{country_code}}",
											"description": "\tOptional. A country: an ISO 3166-1 alpha-2 country code. Provide this parameter if you want to narrow the list of returned categories to those relevant to a particular country. If omitted, the returned items will be globally relevant.",
											"disabled": true
										},
										{
											"key": "locale",
											"value": "{{language}}",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "50"
										},
										{
											"key": "offset",
											"value": "0"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "ETag",
									"value": "W/\"1007-MJHYx/ibYE9BYCdK+39xnw4kYQQ\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "Date",
									"value": "Wed, 22 Apr 2020 22:25:07 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"tracks\": {\n        \"total\": 9,\n        \"items\": [\n            {\n                \"category\": [\n                    \"5e8072e5e478cf39b47bd1ef\"\n                ],\n                \"explicit\": false,\n                \"_id\": \"5e7d2dc03429e24340ff1396\",\n                \"album\": {\n                    \"_id\": \"5e701fdf2672a63a60573a06\",\n                    \"name\": \"The Slow Rush\",\n                    \"image\": \"https://thesymphonia.ddns.net/api/v1/images/albums/The-Slow-Rush.jpg\",\n                    \"id\": \"5e701fdf2672a63a60573a06\"\n                },\n                \"name\": \"Instant Destiny\",\n                \"durationMs\": 193000,\n                \"artist\": {\n                    \"_id\": \"5e8137aa54660672fd699882\",\n                    \"name\": \"Tame Impala\"\n                },\n                \"trackPath\": \"assets/tracks/Instant-Destiny.mp3\",\n                \"premium\": false,\n                \"type\": \"track\"\n            },\n            {\n                \"category\": [\n                    \"5e807517e478cf39b47bd1f0\"\n                ],\n                \"explicit\": false,\n                \"_id\": \"5e8a1e0f7937ec4d40c6deba\",\n                \"album\": {\n                    \"_id\": \"5e701f4d2672a63a60573a02\",\n                    \"name\": \"El Pintor\",\n                    \"image\": \"https://thesymphonia.ddns.net/api/v1/images/albums/El-Pintor.jpg\",\n                    \"id\": \"5e701f4d2672a63a60573a02\"\n                },\n                \"name\": \"My Desire\",\n                \"durationMs\": 252000,\n                \"artist\": {\n                    \"_id\": \"5e82a48054660672fd699883\",\n                    \"name\": \"Interpol\"\n                },\n                \"trackPath\": \"assets/tracks/My-Desire.mp3\",\n                \"premium\": true,\n                \"type\": \"track\"\n            },\n            {\n                \"category\": [\n                    \"5e807517e478cf39b47bd1f0\"\n                ],\n                \"explicit\": false,\n                \"_id\": \"5e8a1e727937ec4d40c6debb\",\n                \"album\": {\n                    \"_id\": \"5e701f4d2672a63a60573a02\",\n                    \"name\": \"El Pintor\",\n                    \"image\": \"https://thesymphonia.ddns.net/api/v1/images/albums/El-Pintor.jpg\",\n                    \"id\": \"5e701f4d2672a63a60573a02\"\n                },\n                \"name\": \"All The Rage Back Home\",\n                \"durationMs\": 263000,\n                \"artist\": {\n                    \"_id\": \"5e82a48054660672fd699883\",\n                    \"name\": \"Interpol\"\n                },\n                \"trackPath\": \"assets/tracks/All-The-Rage-Back-Home.mp3\",\n                \"premium\": false,\n                \"type\": \"track\"\n            },\n            {\n                \"category\": [\n                    \"5e8076e6a9902a4328cc285c\"\n                ],\n                \"explicit\": true,\n                \"_id\": \"5e8a1e767937ec4d40c6debc\",\n                \"album\": {\n                    \"_id\": \"5e794163c01c024ecc3c31d3\",\n                    \"name\": \"Violent Rains\",\n                    \"image\": \"https://thesymphonia.ddns.net/api/v1/images/albums/Violent-Rains.jpg\",\n                    \"id\": \"5e794163c01c024ecc3c31d3\"\n                },\n                \"name\": \"Honey\",\n                \"durationMs\": 213000,\n                \"artist\": {\n                    \"_id\": \"5e84b966681ae439edfc1d6f\",\n                    \"name\": \"Minuit Machine\"\n                },\n                \"trackPath\": \"assets/tracks/Honey.mp3\",\n                \"premium\": true,\n                \"type\": \"track\"\n            },\n            {\n                \"category\": [\n                    \"5e8076e6a9902a4328cc285c\"\n                ],\n                \"explicit\": true,\n                \"_id\": \"5e8a1e937937ec4d40c6debd\",\n                \"album\": {\n                    \"_id\": \"5e794163c01c024ecc3c31d3\",\n                    \"name\": \"Violent Rains\",\n                    \"image\": \"https://thesymphonia.ddns.net/api/v1/images/albums/Violent-Rains.jpg\",\n                    \"id\": \"5e794163c01c024ecc3c31d3\"\n                },\n                \"name\": \"BATTLES\",\n                \"durationMs\": 234000,\n                \"artist\": {\n                    \"_id\": \"5e84b966681ae439edfc1d6f\",\n                    \"name\": \"Minuit Machine\"\n                },\n                \"trackPath\": \"assets/tracks/BATTLES.mp3\",\n                \"premium\": false,\n                \"type\": \"track\"\n            },\n            {\n                \"category\": [\n                    \"5e8076e6a9902a4328cc285c\"\n                ],\n                \"explicit\": true,\n                \"_id\": \"5e8a1e9a7937ec4d40c6debe\",\n                \"album\": {\n                    \"_id\": \"5e794163c01c024ecc3c31d3\",\n                    \"name\": \"Violent Rains\",\n                    \"image\": \"https://thesymphonia.ddns.net/api/v1/images/albums/Violent-Rains.jpg\",\n                    \"id\": \"5e794163c01c024ecc3c31d3\"\n                },\n                \"name\": \"Black is my anger\",\n                \"durationMs\": 264000,\n                \"artist\": {\n                    \"_id\": \"5e84b966681ae439edfc1d6f\",\n                    \"name\": \"Minuit Machine\"\n                },\n                \"trackPath\": \"assets/tracks/Black-is-my-anger.mp3\",\n                \"premium\": false,\n                \"type\": \"track\"\n            },\n            {\n                \"category\": [\n                    \"5e883e48c808fd1aa40ad1f8\"\n                ],\n                \"explicit\": true,\n                \"_id\": \"5e8a1ea07937ec4d40c6debf\",\n                \"album\": {\n                    \"_id\": \"5e89f33375bcc40cc4b5a736\",\n                    \"name\": \"TRST\",\n                    \"image\": \"https://thesymphonia.ddns.net/api/v1/images/albums/TRST.jpg\",\n                    \"id\": \"5e89f33375bcc40cc4b5a736\"\n                },\n                \"name\": \"Bulbform\",\n                \"durationMs\": 314000,\n                \"artist\": {\n                    \"_id\": \"5e8b6d866253cb184eaac150\",\n                    \"name\": \"TR/ST\"\n                },\n                \"trackPath\": \"assets/tracks/Bulbform.mp3\",\n                \"premium\": false,\n                \"type\": \"track\"\n            },\n            {\n                \"category\": [\n                    \"5e883e48c808fd1aa40ad1f8\"\n                ],\n                \"explicit\": true,\n                \"_id\": \"5e8a37d0d56ea252c3860a1a\",\n                \"album\": {\n                    \"_id\": \"5e89f33375bcc40cc4b5a736\",\n                    \"name\": \"TRST\",\n                    \"image\": \"https://thesymphonia.ddns.net/api/v1/images/albums/TRST.jpg\",\n                    \"id\": \"5e89f33375bcc40cc4b5a736\"\n                },\n                \"name\": \"Dressed For Space\",\n                \"durationMs\": 217000,\n                \"artist\": {\n                    \"_id\": \"5e8b6d866253cb184eaac150\",\n                    \"name\": \"TR/ST\"\n                },\n                \"trackPath\": \"assets/tracks/Dressed-For-Space.mp3\",\n                \"premium\": false,\n                \"type\": \"track\"\n            },\n            {\n                \"category\": [\n                    \"5e883e48c808fd1aa40ad1f8\"\n                ],\n                \"explicit\": true,\n                \"_id\": \"5e8a39f24e11cd46c8bde654\",\n                \"album\": {\n                    \"_id\": \"5e89f33375bcc40cc4b5a736\",\n                    \"name\": \"TRST\",\n                    \"image\": \"https://thesymphonia.ddns.net/api/v1/images/albums/TRST.jpg\",\n                    \"id\": \"5e89f33375bcc40cc4b5a736\"\n                },\n                \"name\": \"Sulk\",\n                \"durationMs\": 377000,\n                \"artist\": {\n                    \"_id\": \"5e8b6d866253cb184eaac150\",\n                    \"name\": \"TR/ST\"\n                },\n                \"trackPath\": \"assets/tracks/Sulk.mp3\",\n                \"premium\": true,\n                \"type\": \"track\"\n            }\n        ],\n        \"limit\": 50,\n        \"offset\": 0,\n        \"next\": null,\n        \"previous\": null,\n        \"href\": \"http://localhost:3000/api/v1/recommendations/\"\n    }\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Search",
			"item": [
				{
					"name": "Search",
					"request": {
						"method": "GET",
						"header": [
							{
								"description": "*Required*. A valid access token from the Symphonia Accounts service.",
								"key": "Authorization",
								"type": "text",
								"value": ""
							}
						],
						"url": {
							"raw": "{{URL}}api/v1/search?q=tame%20impala&type=artist&limit=5&offset=0",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"v1",
								"search"
							],
							"query": [
								{
									"key": "q",
									"value": "tame%20impala",
									"description": "*Required*.\nSearch query keywords and optional field filters and operators.\nFor example:\nq=roadhouse%20blues."
								},
								{
									"key": "type",
									"value": "artist",
									"description": "*Required*.\nValid types are: *album* , *artist*, *playlist*, *category*, *profile* and *track*."
								},
								{
									"key": "limit",
									"value": "5",
									"description": "`Optional`. The maximum number of items to return. Default: 20. Minimum: 1.\nNote: The limit is applied within each type, not on the total response.\nFor example, if the limit value is 3 and the type is artist,album, the response contains 3 artists and 3 albums"
								},
								{
									"key": "offset",
									"value": "0",
									"description": "`Optional`. The index of the first item to return. Default: 0 (the first object). Use with `limit` to get the next set of items."
								}
							]
						},
						"description": "`note`: send the keyword url encoded i.e. if the keyword contains a space replace it with %20 which is the url code for space\r\n`example`: Tame impala -> Tame%20impala.\r\n\r\n`note`: search is case insensetive."
					},
					"response": [
						{
							"name": "Search with limit and offset",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "*Required*. A valid access token from the Symphonia Accounts service.",
										"key": "Authorization",
										"type": "text",
										"value": ""
									}
								],
								"url": {
									"raw": "{{URL}}api/v1/search?q=t&type=artist&limit=5&offset",
									"host": [
										"{{URL}}api"
									],
									"path": [
										"v1",
										"search"
									],
									"query": [
										{
											"key": "q",
											"value": "t",
											"description": "*Required*.\nSearch query keywords and optional field filters and operators.\nFor example:\nq=roadhouse%20blues."
										},
										{
											"key": "type",
											"value": "artist",
											"description": "*Required*.\nA comma-separated list of item types to search across.\nValid types are: *album* , *artist*, *playlist*, and *track*.\nSearch results include hits from all the specified item types.\nFor example: q=name:abacab&type=album,track returns both albums and tracks with “abacab” included in their name."
										},
										{
											"key": "limit",
											"value": "5",
											"description": "*Optional*.\nMaximum number of results to return.\nDefault: 20\nMinimum: 1\nMaximum: 50\nNote: The limit is applied within each type, not on the total response.\nFor example, if the limit value is 3 and the type is artist,album, the response contains 3 artists and 3 albums"
										},
										{
											"key": "offset",
											"value": null,
											"description": "*Optional*.\nThe index of the first result to return.\nDefault: 0 (the first result).\nMaximum offset (including limit): 2,000.\nUse with limit to get the next page of search results."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.0 (Ubuntu)"
								},
								{
									"key": "Date",
									"value": "Thu, 28 May 2020 11:45:25 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "ETag",
									"value": "W/\"1fce-JYwjp5AULA+WMoNe3SgTwyHL6To\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"artist\": {\n        \"total\": 5,\n        \"items\": [\n            {\n                \"queue\": {\n                    \"currentlyPlaying\": {\n                        \"currentTrack\": null,\n                        \"device\": \"5e9bbf60db34710a97e72cf9\"\n                    },\n                    \"queueTracks\": [\n                        \"http://thesymphonia.ddns.net/api/v1/me/player/tracks/5e8a39f24e11cd46c8bde654\",\n                        \"http://thesymphonia.ddns.net/api/v1/me/player/tracks/5e8a37d0d56ea252c3860a1a\",\n                        \"http://thesymphonia.ddns.net/api/v1/me/player/tracks/5e8a1ea07937ec4d40c6debf\",\n                        \"http://thesymphonia.ddns.net/api/v1/me/player/tracks/5e8a1e9a7937ec4d40c6debe\",\n                        \"http://thesymphonia.ddns.net/api/v1/me/player/tracks/5e8a1e937937ec4d40c6debd\",\n                        \"http://thesymphonia.ddns.net/api/v1/me/player/tracks/5e8a1e767937ec4d40c6debc\",\n                        \"http://thesymphonia.ddns.net/api/v1/me/player/tracks/5e8a1e727937ec4d40c6debb\"\n                    ],\n                    \"previousTrack\": null,\n                    \"repeat\": false,\n                    \"shuffle\": false,\n                    \"play\": false,\n                    \"repeatOnce\": false,\n                    \"nextTrack\": \"http://thesymphonia.ddns.net/api/v1/me/player/tracks/5e8a39f24e11cd46c8bde654\",\n                    \"devices\": [\n                        {\n                            \"_id\": \"5e8f29b1ea170b138a7d1322\",\n                            \"devicesName\": \"Chrome\"\n                        },\n                        {\n                            \"_id\": \"5e9b27898f1e6e083454b141\",\n                            \"devicesName\": \"Chrome\"\n                        },\n                        {\n                            \"_id\": \"5e9b29e08f1e6e083454b145\",\n                            \"devicesName\": \"Chrome\"\n                        },\n                        {\n                            \"_id\": \"5e9b2c4df199c323265d9c2d\",\n                            \"devicesName\": \"Chrome\"\n                        },\n                        {\n                            \"_id\": \"5e9b3347f199c323265d9c31\",\n                            \"devicesName\": \"Chrome\"\n                        },\n                        {\n                            \"_id\": \"5e9b35edf199c323265d9c34\",\n                            \"devicesName\": \"Chrome\"\n                        },\n                        {\n                            \"_id\": \"5e9b35eff199c323265d9c35\",\n                            \"devicesName\": \"Chrome\"\n                        },\n                        {\n                            \"_id\": \"5e9b35f0f199c323265d9c36\",\n                            \"devicesName\": \"Chrome\"\n                        },\n                        {\n                            \"_id\": \"5e9b35f3f199c323265d9c37\",\n                            \"devicesName\": \"Chrome\"\n                        },\n                        {\n                            \"_id\": \"5e9bbf57db34710a97e72cf7\",\n                            \"devicesName\": \"Chrome\"\n                        },\n                        {\n                            \"_id\": \"5e9bbf60db34710a97e72cf9\",\n                            \"devicesName\": \"Chrome\"\n                        }\n                    ]\n                },\n                \"premium\": false,\n                \"followedUsers\": [\n                    \"5e8125dc54660672fd69987f\",\n                    \"5e8c787de37ac11ac4f01362\",\n                    \"5e8c7a3ee37ac11ac4f01368\"\n                ],\n                \"tracks\": [\n                    \"5e7d2dc03429e24340ff1396\",\n                    \"5e7d2ddd3429e24340ff1397\",\n                    \"5e7d2e023429e24340ff1398\"\n                ],\n                \"ownedPlaylists\": [\n                    \"5e9c5d78db34710a97e73153\",\n                    \"5e9c5f00db34710a97e73154\"\n                ],\n                \"followedAlbums\": [],\n                \"followedTracks\": [\n                    \"5e7d2ddd3429e24340ff1397\"\n                ],\n                \"deleted\": false,\n                \"_id\": \"5e8137aa54660672fd699882\",\n                \"email\": \"test3@test.com\",\n                \"name\": \"Tame Impala\",\n                \"dateOfBirth\": \"1978-05-25T00:00:00.000Z\",\n                \"gender\": \"male\",\n                \"type\": \"artist\",\n                \"imageUrl\": \"https://thesymphonia.ddns.net/api/v1/images/users/Tame-Impala.jpg\",\n                \"__v\": 168,\n                \"last_login\": \"2020-05-27T23:51:39.115Z\",\n                \"phone\": \"\",\n                \"playerToken\": \"43dc5df31347602bce7339fd3ad9f35310dac3cd479a5f42e8bfa4f8e798aea4\",\n                \"playerTokenExpires\": \"2020-04-19T03:12:56.415Z\",\n                \"passwordResetExpires\": \"2020-04-19T22:37:19.950Z\",\n                \"passwordResetToken\": \"3e5a6f608ee9a24f3cc672a89ac1e22f5e340a6022e6003dc9ecd268dedcc149\"\n            },\n            {\n                \"queue\": {\n                    \"currentlyPlaying\": {\n                        \"currentTrack\": \"http://thesymphonia.ddns.net/api/v1/me/player/tracks/5e7d2ddd3429e24340ff1397\",\n                        \"device\": \"5e90abf8ea170b138a7d1808\"\n                    },\n                    \"queueTracks\": [\n                        \"http://thesymphonia.ddns.net/api/v1/me/player/tracks/5e7d2dc03429e24340ff1396\",\n                        \"http://thesymphonia.ddns.net/api/v1/me/player/tracks/5e7d2ddd3429e24340ff1397\",\n                        \"http://thesymphonia.ddns.net/api/v1/me/player/tracks/5e7d2e023429e24340ff1398\"\n                    ],\n                    \"previousTrack\": \"http://thesymphonia.ddns.net/api/v1/me/player/tracks/5e7d2dc03429e24340ff1396\",\n                    \"repeat\": false,\n                    \"shuffle\": false,\n                    \"play\": false,\n                    \"repeatOnce\": false,\n                    \"nextTrack\": \"http://thesymphonia.ddns.net/api/v1/me/player/tracks/5e7d2e023429e24340ff1398\",\n                    \"devices\": [\n                        {\n                            \"_id\": \"5e90abf8ea170b138a7d1808\",\n                            \"devicesName\": \"Android\"\n                        }\n                    ]\n                },\n                \"premium\": false,\n                \"followedUsers\": [\n                    \"5e8125dc54660672fd69987f\"\n                ],\n                \"tracks\": [\n                    \"5e7d334860cd930408a5f995\",\n                    \"5e8a1e0f7937ec4d40c6deba\",\n                    \"5e8a1e727937ec4d40c6debb\"\n                ],\n                \"ownedPlaylists\": [\n                    \"5e8ddce727ab877b8e328712\",\n                    \"5e8ddee127ab877b8e328716\",\n                    \"5e8ddf1a27ab877b8e328718\",\n                    \"5e8ddf4127ab877b8e32871b\",\n                    \"5e8de0c627ab877b8e328733\",\n                    \"5e8de10827ab877b8e328734\",\n                    \"5e8de12e27ab877b8e328735\"\n                ],\n                \"followedAlbums\": [],\n                \"followedTracks\": [],\n                \"deleted\": false,\n                \"_id\": \"5e82a48054660672fd699883\",\n                \"email\": \"test4@test.com\",\n                \"name\": \"Interpol\",\n                \"dateOfBirth\": \"1979-12-25T00:00:00.000Z\",\n                \"gender\": \"male\",\n                \"type\": \"artist\",\n                \"imageUrl\": \"https://thesymphonia.ddns.net/api/v1/images/users/Interpol.jpg\",\n                \"__v\": 121,\n                \"last_login\": \"2020-04-10T01:02:08.487Z\"\n            },\n            {\n                \"queue\": {\n                    \"currentlyPlaying\": {\n                        \"currentTrack\": \"http://thesymphonia.ddns.net/api/v1/me/player/tracks/5e7d2ddd3429e24340ff1397\",\n                        \"device\": \"5e8ecb685e699f3edda9e9b1\"\n                    },\n                    \"queueTracks\": [\n                        \"http://thesymphonia.ddns.net/api/v1/me/player/tracks/5e7d2dc03429e24340ff1396\",\n                        \"http://thesymphonia.ddns.net/api/v1/me/player/tracks/5e7d2ddd3429e24340ff1397\",\n                        \"http://thesymphonia.ddns.net/api/v1/me/player/tracks/5e7d2e023429e24340ff1398\"\n                    ],\n                    \"previousTrack\": \"http://thesymphonia.ddns.net/api/v1/me/player/tracks/5e7d2dc03429e24340ff1396\",\n                    \"repeat\": false,\n                    \"shuffle\": false,\n                    \"play\": false,\n                    \"repeatOnce\": false,\n                    \"nextTrack\": \"http://thesymphonia.ddns.net/api/v1/me/player/tracks/5e7d2e023429e24340ff1398\",\n                    \"devices\": [\n                        {\n                            \"_id\": \"5e8e91e55e699f3edda9e767\",\n                            \"devicesName\": \"Chrome\"\n                        },\n                        {\n                            \"_id\": \"5e8e92ae5e699f3edda9e768\",\n                            \"devicesName\": \"Chrome\"\n                        },\n                        {\n                            \"_id\": \"5e8e92ae5e699f3edda9e769\",\n                            \"devicesName\": \"Chrome\"\n                        },\n                        {\n                            \"_id\": \"5e8e92c35e699f3edda9e76b\",\n                            \"devicesName\": \"Chrome\"\n                        },\n                        {\n                            \"_id\": \"5e8e92c35e699f3edda9e76c\",\n                            \"devicesName\": \"Chrome\"\n                        },\n                        {\n                            \"_id\": \"5e8e92c85e699f3edda9e76e\",\n                            \"devicesName\": \"Chrome\"\n                        },\n                        {\n                            \"_id\": \"5e8e92c95e699f3edda9e76f\",\n                            \"devicesName\": \"Chrome\"\n                        },\n                        {\n                            \"_id\": \"5e8e92d25e699f3edda9e771\",\n                            \"devicesName\": \"Chrome\"\n                        },\n                        {\n                            \"_id\": \"5e8e92d25e699f3edda9e772\",\n                            \"devicesName\": \"Chrome\"\n                        },\n                        {\n                            \"_id\": \"5e8ecb675e699f3edda9e9b0\",\n                            \"devicesName\": \"Chrome\"\n                        },\n                        {\n                            \"_id\": \"5e8ecb685e699f3edda9e9b1\",\n                            \"devicesName\": \"Chrome\"\n                        }\n                    ]\n                },\n                \"premium\": false,\n                \"followedUsers\": [\n                    \"5e8125dc54660672fd69987f\"\n                ],\n                \"tracks\": [\n                    \"5e8a1e767937ec4d40c6debc\",\n                    \"5e8a1e937937ec4d40c6debd\",\n                    \"5e8a1e727937ec4d40c6debb\"\n                ],\n                \"ownedPlaylists\": [],\n                \"followedAlbums\": [],\n                \"followedTracks\": [],\n                \"deleted\": false,\n                \"_id\": \"5e84b966681ae439edfc1d6f\",\n                \"email\": \"test5@test.com\",\n                \"name\": \"Minuit Machine\",\n                \"dateOfBirth\": \"1995-06-25T00:00:00.000Z\",\n                \"gender\": \"female\",\n                \"type\": \"artist\",\n                \"imageUrl\": \"https://thesymphonia.ddns.net/api/v1/images/users/Minuit-Machine.jpg\",\n                \"__v\": 12,\n                \"last_login\": \"2020-04-20T15:00:44.922Z\"\n            },\n            {\n                \"queue\": {\n                    \"currentlyPlaying\": {\n                        \"currentTrack\": \"https://thesymphonia.ddns.net/api/v1/me/player/tracks/5e7d2ddd3429e24340ff1397\",\n                        \"device\": \"5ecf55b4a5cb58556db7a9bd\"\n                    },\n                    \"queueTracks\": [\n                        \"https://thesymphonia.ddns.net/api/v1/me/player/tracks/5e7d2ddd3429e24340ff1397\",\n                        \"https://thesymphonia.ddns.net/api/v1/me/player/tracks/5e7d2e023429e24340ff1398\",\n                        \"https://thesymphonia.ddns.net/api/v1/me/player/tracks/5e7d334860cd930408a5f995\",\n                        \"https://thesymphonia.ddns.net/api/v1/me/player/tracks/5e8a1e0f7937ec4d40c6deba\"\n                    ],\n                    \"previousTrack\": null,\n                    \"repeat\": false,\n                    \"shuffle\": false,\n                    \"play\": false,\n                    \"repeatOnce\": false,\n                    \"nextTrack\": \"https://thesymphonia.ddns.net/api/v1/me/player/tracks/5e7d2e023429e24340ff1398\",\n                    \"devices\": [\n                        {\n                            \"_id\": \"5ecf55b4a5cb58556db7a9bd\",\n                            \"devicesName\": \"Chrome\"\n                        }\n                    ]\n                },\n                \"premium\": false,\n                \"followedUsers\": [\n                    \"5e8125dc54660672fd69987f\"\n                ],\n                \"tracks\": [\n                    \"5e8a1ea07937ec4d40c6debf\",\n                    \"5e8a37d0d56ea252c3860a1a\",\n                    \"5e8a39f24e11cd46c8bde654\"\n                ],\n                \"ownedPlaylists\": [\n                    \"5e8de9e627ab877b8e328772\",\n                    \"5e8ec91f5e699f3edda9e99a\",\n                    \"5e9f053acd5803708a39e028\",\n                    \"5e9f054ccd5803708a39e029\",\n                    \"5ebc8a21e2b6150842be979b\"\n                ],\n                \"followedAlbums\": [],\n                \"followedTracks\": [\n                    \"5e7d2dc03429e24340ff1396\",\n                    \"5e7d334860cd930408a5f995\",\n                    \"5e8a39f24e11cd46c8bde654\",\n                    \"5e7d2e023429e24340ff1398\",\n                    \"5e8a1e0f7937ec4d40c6deba\"\n                ],\n                \"deleted\": false,\n                \"_id\": \"5e80fd1684c71f6ffb534a08\",\n                \"email\": \"test6@test.com\",\n                \"name\": \"TR/ST\",\n                \"dateOfBirth\": \"1985-12-05T00:00:00.000Z\",\n                \"gender\": \"male\",\n                \"type\": \"artist\",\n                \"imageUrl\": \"https://thesymphonia.ddns.net/api/v1/images/users/tr-st.jpg\",\n                \"__v\": 1239,\n                \"last_login\": \"2020-05-28T06:02:50.750Z\",\n                \"playerToken\": \"d75511d060f6821c52c956adec09db9e041b85005f50e01a6a29becd17ec5445\",\n                \"playerTokenExpires\": \"2020-05-28T06:29:55.911Z\"\n            },\n            {\n                \"queue\": {\n                    \"currentlyPlaying\": {\n                        \"currentTrack\": null\n                    },\n                    \"queueTracks\": [],\n                    \"previousTrack\": null,\n                    \"repeat\": false,\n                    \"shuffle\": false,\n                    \"play\": false,\n                    \"repeatOnce\": false,\n                    \"devices\": [\n                        {\n                            \"_id\": \"5e8ba7b243427f32bcb6e75d\",\n                            \"devicesName\": \"chrome\"\n                        }\n                    ]\n                },\n                \"premium\": false,\n                \"followedUsers\": [],\n                \"tracks\": [],\n                \"ownedPlaylists\": [],\n                \"followedAlbums\": [],\n                \"followedTracks\": [],\n                \"deleted\": false,\n                \"_id\": \"5e8c73d82a0e4614b88a4ed0\",\n                \"email\": \"test8@test.com\",\n                \"name\": \"Austra\",\n                \"dateOfBirth\": \"1980-09-09T00:00:00.000Z\",\n                \"gender\": \"female\",\n                \"type\": \"artist\",\n                \"imageUrl\": \"https://thesymphonia.ddns.net/api/v1/images/users/Austra.jpg\",\n                \"__v\": 1,\n                \"last_login\": \"2020-05-25T13:32:10.354Z\"\n            }\n        ],\n        \"limit\": 5,\n        \"offset\": 0,\n        \"next\": \"https://thesymphonia.ddns.net/api/v1/search?offset=5&limit=5\",\n        \"previous\": null,\n        \"href\": \"https://thesymphonia.ddns.net/api/v1/search\"\n    }\n}"
						},
						{
							"name": "Search",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "*Required*. A valid access token from the Symphonia Accounts service.",
										"key": "Authorization",
										"type": "text",
										"value": ""
									}
								],
								"url": {
									"raw": "{{URL}}api/v1/search?q=ni&type=artist&limit&offset",
									"host": [
										"{{URL}}api"
									],
									"path": [
										"v1",
										"search"
									],
									"query": [
										{
											"key": "q",
											"value": "ni",
											"description": "*Required*.\nSearch query keywords and optional field filters and operators.\nFor example:\nq=roadhouse%20blues."
										},
										{
											"key": "type",
											"value": "artist",
											"description": "*Required*.\nA comma-separated list of item types to search across.\nValid types are: *album* , *artist*, *playlist*, and *track*.\nSearch results include hits from all the specified item types.\nFor example: q=name:abacab&type=album,track returns both albums and tracks with “abacab” included in their name."
										},
										{
											"key": "limit",
											"value": null,
											"description": "*Optional*.\nMaximum number of results to return.\nDefault: 20\nMinimum: 1\nMaximum: 50\nNote: The limit is applied within each type, not on the total response.\nFor example, if the limit value is 3 and the type is artist,album, the response contains 3 artists and 3 albums"
										},
										{
											"key": "offset",
											"value": null,
											"description": "*Optional*.\nThe index of the first result to return.\nDefault: 0 (the first result).\nMaximum offset (including limit): 2,000.\nUse with limit to get the next page of search results."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "672"
								},
								{
									"key": "ETag",
									"value": "W/\"2a0-z9iuAlpQGuahJweaN8fMuCLgxg4\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Date",
									"value": "Sun, 19 Apr 2020 22:17:55 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"artist\": {\n        \"total\": 1,\n        \"items\": [\n            {\n                \"queue\": {\n                    \"currentlyPlaying\": {\n                        \"currentTrack\": null\n                    },\n                    \"queueTracks\": [],\n                    \"previousTrack\": null,\n                    \"repeat\": false,\n                    \"shuffle\": false,\n                    \"play\": false,\n                    \"repeatOnce\": false,\n                    \"devices\": [\n                        {\n                            \"_id\": \"5e8ba7b243427f32bcb6e75d\",\n                            \"devicesName\": \"chrome\"\n                        }\n                    ]\n                },\n                \"followedUsers\": [],\n                \"tracks\": [],\n                \"ownedPlaylists\": [],\n                \"followedAlbums\": [],\n                \"followedTracks\": [],\n                \"_id\": \"5e8c7c890fab001100e883fe\",\n                \"email\": \"test34@test.com\",\n                \"name\": \"The Knife\",\n                \"dateOfBirth\": \"1987-12-15T00:00:00.000Z\",\n                \"gender\": \"female\",\n                \"type\": \"artist\",\n                \"imageUrl\": \"https://thesymphonia.ddns.net/api/v1/images/users/The-Knife.jpg\"\n            }\n        ],\n        \"limit\": 20,\n        \"offset\": 0,\n        \"next\": null,\n        \"previous\": null,\n        \"href\": \"http://localhost:5000/api/v1/search\"\n    }\n}"
						},
						{
							"name": "Search track",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "*Required*. A valid access token from the Symphonia Accounts service.",
										"key": "Authorization",
										"type": "text",
										"value": ""
									}
								],
								"url": {
									"raw": "{{URL}}api/v1/search?q=t&type=track&limit=5&offset",
									"host": [
										"{{URL}}api"
									],
									"path": [
										"v1",
										"search"
									],
									"query": [
										{
											"key": "q",
											"value": "t",
											"description": "*Required*.\nSearch query keywords and optional field filters and operators.\nFor example:\nq=roadhouse%20blues."
										},
										{
											"key": "type",
											"value": "track",
											"description": "*Required*.\nA comma-separated list of item types to search across.\nValid types are: *album* , *artist*, *playlist*, and *track*.\nSearch results include hits from all the specified item types.\nFor example: q=name:abacab&type=album,track returns both albums and tracks with “abacab” included in their name."
										},
										{
											"key": "limit",
											"value": "5",
											"description": "*Optional*.\nMaximum number of results to return.\nDefault: 20\nMinimum: 1\nMaximum: 50\nNote: The limit is applied within each type, not on the total response.\nFor example, if the limit value is 3 and the type is artist,album, the response contains 3 artists and 3 albums"
										},
										{
											"key": "offset",
											"value": null,
											"description": "*Optional*.\nThe index of the first result to return.\nDefault: 0 (the first result).\nMaximum offset (including limit): 2,000.\nUse with limit to get the next page of search results."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "ETag",
									"value": "W/\"9a0-c11U3UdjOL1Ipkj8jIyEbXc6qNc\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "Date",
									"value": "Mon, 08 Jun 2020 21:12:11 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"track\": {\n        \"total\": 5,\n        \"items\": [\n            {\n                \"category\": [\n                    \"5e8072e5e478cf39b47bd1ef\"\n                ],\n                \"explicit\": false,\n                \"_id\": \"5e7d2dc03429e24340ff1396\",\n                \"album\": {\n                    \"_id\": \"5e701fdf2672a63a60573a06\",\n                    \"name\": \"The Slow Rush\",\n                    \"image\": \"https://thesymphonia.ddns.net/api/v1/images/albums/The-Slow-Rush.jpg\",\n                    \"id\": \"5e701fdf2672a63a60573a06\"\n                },\n                \"name\": \"Instant Destiny\",\n                \"durationMs\": 193000,\n                \"artist\": {\n                    \"_id\": \"5e8137aa54660672fd699882\",\n                    \"name\": \"Tame Impala\"\n                },\n                \"trackPath\": \"assets/tracks/Instant-Destiny.mp3\",\n                \"premium\": false,\n                \"type\": \"track\"\n            },\n            {\n                \"category\": [\n                    \"5e8072e5e478cf39b47bd1ef\"\n                ],\n                \"explicit\": false,\n                \"_id\": \"5e7d2e023429e24340ff1398\",\n                \"album\": {\n                    \"_id\": \"5e701fdf2672a63a60573a06\",\n                    \"name\": \"The Slow Rush\",\n                    \"image\": \"https://thesymphonia.ddns.net/api/v1/images/albums/The-Slow-Rush.jpg\",\n                    \"id\": \"5e701fdf2672a63a60573a06\"\n                },\n                \"name\": \"Posthumous Forgiveness\",\n                \"durationMs\": 366000,\n                \"artist\": {\n                    \"_id\": \"5e8137aa54660672fd699882\",\n                    \"name\": \"Tame Impala\"\n                },\n                \"trackPath\": \"assets/tracks/Posthumous-Forgiveness.mp3\",\n                \"premium\": true,\n                \"type\": \"track\"\n            },\n            {\n                \"category\": [\n                    \"5e807517e478cf39b47bd1f0\"\n                ],\n                \"explicit\": false,\n                \"_id\": \"5e7d334860cd930408a5f995\",\n                \"album\": {\n                    \"_id\": \"5e701f4d2672a63a60573a02\",\n                    \"name\": \"El Pintor\",\n                    \"image\": \"https://thesymphonia.ddns.net/api/v1/images/albums/El-Pintor.jpg\",\n                    \"id\": \"5e701f4d2672a63a60573a02\"\n                },\n                \"name\": \"Everything Is Wrong\",\n                \"durationMs\": 222000,\n                \"artist\": {\n                    \"_id\": \"5e82a48054660672fd699883\",\n                    \"name\": \"Interpol\"\n                },\n                \"trackPath\": \"assets/tracks/Everything-Is-Wrong.mp3\",\n                \"premium\": false,\n                \"type\": \"track\"\n            },\n            {\n                \"category\": [\n                    \"5e807517e478cf39b47bd1f0\"\n                ],\n                \"explicit\": false,\n                \"_id\": \"5e8a1e727937ec4d40c6debb\",\n                \"album\": {\n                    \"_id\": \"5e701f4d2672a63a60573a02\",\n                    \"name\": \"El Pintor\",\n                    \"image\": \"https://thesymphonia.ddns.net/api/v1/images/albums/El-Pintor.jpg\",\n                    \"id\": \"5e701f4d2672a63a60573a02\"\n                },\n                \"name\": \"All The Rage Back Home\",\n                \"durationMs\": 263000,\n                \"artist\": {\n                    \"_id\": \"5e82a48054660672fd699883\",\n                    \"name\": \"Interpol\"\n                },\n                \"trackPath\": \"assets/tracks/All-The-Rage-Back-Home.mp3\",\n                \"premium\": false,\n                \"type\": \"track\"\n            },\n            {\n                \"category\": [\n                    \"5e8076e6a9902a4328cc285c\"\n                ],\n                \"explicit\": true,\n                \"_id\": \"5e8a1e937937ec4d40c6debd\",\n                \"album\": {\n                    \"_id\": \"5e794163c01c024ecc3c31d3\",\n                    \"name\": \"Violent Rains\",\n                    \"image\": \"https://thesymphonia.ddns.net/api/v1/images/albums/Violent-Rains.jpg\",\n                    \"id\": \"5e794163c01c024ecc3c31d3\"\n                },\n                \"name\": \"BATTLES\",\n                \"durationMs\": 234000,\n                \"artist\": {\n                    \"_id\": \"5e84b966681ae439edfc1d6f\",\n                    \"name\": \"Minuit Machine\"\n                },\n                \"trackPath\": \"assets/tracks/BATTLES.mp3\",\n                \"premium\": false,\n                \"type\": \"track\"\n            }\n        ],\n        \"limit\": 5,\n        \"offset\": 0,\n        \"next\": \"http://localhost:3000/api/v1/search?offset=5&limit=5\",\n        \"previous\": null,\n        \"href\": \"http://localhost:3000/api/v1/search\"\n    }\n}"
						}
					]
				},
				{
					"name": "Search Generic",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"description": "*optional*. A valid access token from the Symphonia Accounts service. if not provided then private playlists won't be retireived.",
								"key": "Authorization",
								"type": "text",
								"value": ""
							}
						],
						"url": {
							"raw": "{{URL}}api/v1/search/:{keyword}?limit=2",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"v1",
								"search",
								":{keyword}"
							],
							"query": [
								{
									"key": "limit",
									"value": "2",
									"description": "`Optional`. The maximum number of items to return. Default: 16. Minimum: 1."
								}
							],
							"variable": [
								{
									"key": "{keyword}",
									"value": "tame%20impala"
								}
							]
						},
						"description": "`note`: send the keyword url encoded i.e. if the keyword contains a space replace it with %20 which is the url code for space\n`example`: Tame impala -> Tame%20impala.\n\n`note`: search is case insensetive."
					},
					"response": [
						{
							"name": "Search Generic",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "*optional*. A valid access token from the Symphonia Accounts service. if not provided then private playlists won't be retireived.",
										"key": "Authorization",
										"type": "text",
										"value": ""
									}
								],
								"url": {
									"raw": "{{URL}}api/v1/search/:{keyword}?limit=2",
									"host": [
										"{{URL}}api"
									],
									"path": [
										"v1",
										"search",
										":{keyword}"
									],
									"query": [
										{
											"key": "limit",
											"value": "2",
											"description": "`Optional`. The maximum number of items to return. Default: 16. Minimum: 1."
										}
									],
									"variable": [
										{
											"key": "{keyword}",
											"value": "t"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.0 (Ubuntu)"
								},
								{
									"key": "Date",
									"value": "Wed, 10 Jun 2020 13:11:47 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "ETag",
									"value": "W/\"2957-sxu3+8xCSN7Q3YJmm5ooIyQjDJ8\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"profiles\": [\n        {\n            \"queue\": {\n                \"currentlyPlaying\": {\n                    \"currentTrack\": \"https://thesymphonia.ddns.net/api/v1/me/player/tracks/5edf60f62aa9b365682e474c\",\n                    \"device\": \"5ee0d80235912c13071880f8\"\n                },\n                \"queueTracks\": [\n                    \"https://thesymphonia.ddns.net/api/v1/me/player/tracks/5edf60d72aa9b365682e4746\",\n                    \"https://thesymphonia.ddns.net/api/v1/me/player/tracks/5edf60e82aa9b365682e4747\",\n                    \"https://thesymphonia.ddns.net/api/v1/me/player/tracks/5edf60f62aa9b365682e474c\"\n                ],\n                \"previousTrack\": \"https://thesymphonia.ddns.net/api/v1/me/player/tracks/5edf60e82aa9b365682e4747\",\n                \"repeat\": false,\n                \"shuffle\": false,\n                \"play\": false,\n                \"repeatOnce\": false,\n                \"nextTrack\": null,\n                \"devices\": [\n                    {\n                        \"_id\": \"5ee0d80235912c13071880f8\",\n                        \"devicesName\": \"Chrome\"\n                    }\n                ],\n                \"contextId\": \"5edf5a442aa9b365682e46f9\",\n                \"contextType\": \"album\"\n            },\n            \"premium\": false,\n            \"followedUsers\": [],\n            \"tracks\": [],\n            \"ownedPlaylists\": [\n                \"5ee01ed2ab6463377bb014b6\",\n                \"5ee0bfaa35912c1307186f57\",\n                \"5ee0c1d935912c1307186faf\",\n                \"5ee0ce8c35912c13071870d3\"\n            ],\n            \"followedAlbums\": [],\n            \"followedTracks\": [\n                \"5e8a1ea07937ec4d40c6debf\"\n            ],\n            \"deleted\": false,\n            \"_id\": \"5edf994ab9674a075be8e775\",\n            \"email\": \"testmail333@yahoo.com\",\n            \"name\": \"test\",\n            \"dateOfBirth\": \"1990-03-23T00:00:00.000Z\",\n            \"gender\": \"female\",\n            \"type\": \"user\",\n            \"last_login\": \"2020-06-10T12:34:41.155Z\",\n            \"imageUrl\": \"https://thesymphonia.ddns.net/api/v1/images/users/default.png\",\n            \"__v\": 51,\n            \"playerToken\": \"5e9b7e2b0f9846047661ac2c983f7aefbaa7a6d563fab9354565b7387446788d\",\n            \"playerTokenExpires\": \"2020-06-10T13:14:26.770Z\"\n        },\n        {\n            \"queue\": {\n                \"currentlyPlaying\": {\n                    \"currentTrack\": \"https://thesymphonia.ddns.net/api/v1/me/player/tracks/5edf60d72aa9b365682e4746\",\n                    \"device\": \"5ee0db8435912c13071881de\"\n                },\n                \"queueTracks\": [\n                    \"https://thesymphonia.ddns.net/api/v1/me/player/tracks/5edf60d72aa9b365682e4746\",\n                    \"https://thesymphonia.ddns.net/api/v1/me/player/tracks/5edf60e82aa9b365682e4747\",\n                    \"https://thesymphonia.ddns.net/api/v1/me/player/tracks/5edf60f62aa9b365682e474c\"\n                ],\n                \"previousTrack\": null,\n                \"repeat\": false,\n                \"shuffle\": false,\n                \"play\": false,\n                \"repeatOnce\": false,\n                \"nextTrack\": \"https://thesymphonia.ddns.net/api/v1/me/player/tracks/5edf60e82aa9b365682e4747\",\n                \"devices\": [\n                    {\n                        \"_id\": \"5ee0db8435912c13071881de\",\n                        \"devicesName\": \"Chrome\"\n                    }\n                ],\n                \"contextId\": \"5edf5a442aa9b365682e46f9\",\n                \"contextType\": \"album\"\n            },\n            \"premium\": false,\n            \"followedUsers\": [\n                \"5e8c77c1e37ac11ac4f0135f\"\n            ],\n            \"tracks\": [],\n            \"ownedPlaylists\": [\n                \"5ee00697ab6463377bb00a14\",\n                \"5ee00738ab6463377bb00a39\"\n            ],\n            \"followedAlbums\": [],\n            \"followedTracks\": [],\n            \"deleted\": false,\n            \"_id\": \"5edfcdd879571909a0c81014\",\n            \"email\": \"testemail@gmail.com\",\n            \"name\": \"tester\",\n            \"dateOfBirth\": \"1998-12-18T00:00:00.000Z\",\n            \"gender\": \"female\",\n            \"type\": \"user\",\n            \"last_login\": \"2020-06-10T13:11:03.002Z\",\n            \"imageUrl\": \"https://thesymphonia.ddns.net/api/v1/images/users/default.png\",\n            \"__v\": 1,\n            \"playerToken\": \"857a266d187b6913148cf0926c6ba4fc4a6b4d39b17817bbbae9b49c17f22a4c\",\n            \"playerTokenExpires\": \"2020-06-10T13:29:24.654Z\",\n            \"phone\": \"\"\n        }\n    ],\n    \"artists\": [\n        {\n            \"queue\": {\n                \"currentlyPlaying\": {\n                    \"currentTrack\": \"https://thesymphonia.ddns.net/api/v1/me/player/tracks/5edf60d72aa9b365682e4746\",\n                    \"device\": \"5ee0d69235912c1307187ae9\"\n                },\n                \"queueTracks\": [\n                    \"https://thesymphonia.ddns.net/api/v1/me/player/tracks/5edf60d72aa9b365682e4746\",\n                    \"https://thesymphonia.ddns.net/api/v1/me/player/tracks/5edf60e82aa9b365682e4747\",\n                    \"https://thesymphonia.ddns.net/api/v1/me/player/tracks/5edf60f62aa9b365682e474c\"\n                ],\n                \"previousTrack\": null,\n                \"repeat\": false,\n                \"shuffle\": false,\n                \"play\": false,\n                \"repeatOnce\": false,\n                \"nextTrack\": \"https://thesymphonia.ddns.net/api/v1/me/player/tracks/5edf60e82aa9b365682e4747\",\n                \"devices\": [\n                    {\n                        \"_id\": \"5ee0d69235912c1307187ae9\",\n                        \"devicesName\": \"android\"\n                    }\n                ],\n                \"contextId\": \"5edf5a442aa9b365682e46f9\",\n                \"contextType\": \"album\"\n            },\n            \"premium\": false,\n            \"followedUsers\": [\n                \"5e812db054660672fd699881\",\n                \"5e84b966681ae439edfc1d6f\"\n            ],\n            \"tracks\": [\n                \"5e7d2dc03429e24340ff1396\",\n                \"5e7d2ddd3429e24340ff1397\",\n                \"5e7d2e023429e24340ff1398\"\n            ],\n            \"ownedPlaylists\": [\n                \"5edff56a30afcb26b83fb143\"\n            ],\n            \"followedAlbums\": [],\n            \"followedTracks\": [\n                \"5e7d2e023429e24340ff1398\"\n            ],\n            \"deleted\": false,\n            \"_id\": \"5e8137aa54660672fd699882\",\n            \"email\": \"test3@test.com\",\n            \"name\": \"Tame Impala\",\n            \"dateOfBirth\": \"1978-06-25T00:00:00.000Z\",\n            \"gender\": \"male\",\n            \"type\": \"artist\",\n            \"bio\": \"Eu excepteur velit cillum dolor enim amet dolore magna. Voluptate \\nenim ipsum pariatur est ut proident reprehenderit non et aliquip magna est velit. \\nConsectetur in enim nostrud labore nulla veniam laborum eiusmod quis ex aliqua nisi dolor.\\nAliquip Lorem dolore nulla Lorem exercitation ad tempor cillum consectetur. \\nAd cillum occaecat aliqua amet pariatur.\",\n            \"imageUrl\": \"https://thesymphonia.ddns.net/api/v1/images/users/Tame-Impala.jpg\",\n            \"__v\": 10,\n            \"last_login\": \"2020-06-10T12:02:16.910Z\",\n            \"playerToken\": \"57a289ea52ea245403001db3eda0c831f988b0bba653defea9b28d0e522bf392\",\n            \"playerTokenExpires\": \"2020-06-10T13:08:17.999Z\",\n            \"registraionToken\": \"fo-P_NutQxyyiv0Vl08EUZ:APA91bHODgf6U9ZpQcyZYIXty76YNePUAuyZgPDDUUSgimyWGL8Djy95GhU1hwu-dSgvP-f8-1VMWGv3RLduvo-NNpSL6DY_fGLieYNTIzuKiibd4wpMFMs-FE4mMjRXCcvAwNGfL0De\"\n        },\n        {\n            \"queue\": {\n                \"currentlyPlaying\": {\n                    \"currentTrack\": \"https://thesymphonia.ddns.net/api/v1/me/player/tracks/5e7d334860cd930408a5f995\",\n                    \"device\": \"5ee0b6b735912c1307186ed7\"\n                },\n                \"queueTracks\": [\n                    \"https://thesymphonia.ddns.net/api/v1/me/player/tracks/5e7d334860cd930408a5f995\",\n                    \"https://thesymphonia.ddns.net/api/v1/me/player/tracks/5e8a1e727937ec4d40c6debb\"\n                ],\n                \"previousTrack\": null,\n                \"repeat\": false,\n                \"shuffle\": false,\n                \"play\": false,\n                \"repeatOnce\": false,\n                \"nextTrack\": \"https://thesymphonia.ddns.net/api/v1/me/player/tracks/5e8a1e727937ec4d40c6debb\",\n                \"devices\": [\n                    {\n                        \"_id\": \"5ee0b6b735912c1307186ed7\",\n                        \"devicesName\": \"android\"\n                    }\n                ],\n                \"contextId\": \"5e701f4d2672a63a60573a02\",\n                \"contextType\": \"album\"\n            },\n            \"premium\": false,\n            \"followedUsers\": [],\n            \"tracks\": [\n                \"5e7d334860cd930408a5f995\",\n                \"5e8a1e0f7937ec4d40c6deba\",\n                \"5e8a1e727937ec4d40c6debb\"\n            ],\n            \"ownedPlaylists\": [],\n            \"followedAlbums\": [],\n            \"followedTracks\": [],\n            \"deleted\": false,\n            \"_id\": \"5e82a48054660672fd699883\",\n            \"email\": \"test4@test.com\",\n            \"name\": \"Interpol\",\n            \"dateOfBirth\": \"1979-12-25T00:00:00.000Z\",\n            \"gender\": \"male\",\n            \"type\": \"artist\",\n            \"bio\": \"Eu excepteur velit cillum dolor enim amet dolore magna. Voluptate \\nenim ipsum pariatur est ut proident reprehenderit non et aliquip magna est velit. \\nConsectetur in enim nostrud labore nulla veniam laborum eiusmod quis ex aliqua nisi dolor.\\nAliquip Lorem dolore nulla Lorem exercitation ad tempor cillum consectetur. \\nAd cillum occaecat aliqua amet pariatur.\",\n            \"imageUrl\": \"https://thesymphonia.ddns.net/api/v1/images/users/Interpol.jpg\",\n            \"__v\": 1,\n            \"last_login\": \"2020-06-09T22:32:31.280Z\",\n            \"playerToken\": \"cefb524d585e1aac7a0b410c44de3c3594dce6ba5fdd5eeaf6cf478d3cde423f\",\n            \"playerTokenExpires\": \"2020-06-10T10:52:23.657Z\"\n        }\n    ],\n    \"tracks\": [\n        {\n            \"category\": [\n                \"5e8072e5e478cf39b47bd1ef\"\n            ],\n            \"explicit\": false,\n            \"_id\": \"5e7d2e023429e24340ff1398\",\n            \"album\": {\n                \"_id\": \"5e701fdf2672a63a60573a06\",\n                \"name\": \"The Slow Rush\",\n                \"image\": \"https://thesymphonia.ddns.net/api/v1/images/albums/The-Slow-Rush.jpg\",\n                \"id\": \"5e701fdf2672a63a60573a06\"\n            },\n            \"name\": \"Posthumous Forgivenessss\",\n            \"durationMs\": 366000,\n            \"artist\": {\n                \"_id\": \"5e8137aa54660672fd699882\",\n                \"name\": \"Tame Impala\"\n            },\n            \"trackPath\": \"assets/tracks/Posthumous-Forgiveness.mp3\",\n            \"premium\": true,\n            \"type\": \"track\"\n        },\n        {\n            \"category\": [\n                \"5e807517e478cf39b47bd1f0\"\n            ],\n            \"explicit\": false,\n            \"_id\": \"5e7d334860cd930408a5f995\",\n            \"album\": {\n                \"_id\": \"5e701f4d2672a63a60573a02\",\n                \"name\": \"El Pintor\",\n                \"image\": \"https://thesymphonia.ddns.net/api/v1/images/albums/El-Pintor.jpg\",\n                \"id\": \"5e701f4d2672a63a60573a02\"\n            },\n            \"name\": \"Everything Is Wrong\",\n            \"durationMs\": 222000,\n            \"artist\": {\n                \"_id\": \"5e82a48054660672fd699883\",\n                \"name\": \"Interpol\"\n            },\n            \"trackPath\": \"assets/tracks/Everything-Is-Wrong.mp3\",\n            \"premium\": false,\n            \"type\": \"track\"\n        }\n    ],\n    \"albums\": [\n        {\n            \"copyrights\": {\n                \"text\": \"Eu excepteur velit cillum dolor enim amet dolore magna. Voluptate enim ipsum pariatur est ut proident reprehenderit non et aliquip magna est velit. Consectetur in enim nostrud labore nulla veniam laborum eiusmod quis ex aliqua nisi dolor.Aliquip Lorem dolore nulla Lorem exercitation ad tempor cillum consectetur. Ad cillum occaecat aliqua amet pariatur.\",\n                \"type\": \"C\"\n            },\n            \"tracks\": [\n                \"5e7d334860cd930408a5f995\",\n                \"5e8a1e0f7937ec4d40c6deba\",\n                \"5e8a1e727937ec4d40c6debb\"\n            ],\n            \"type\": \"album\",\n            \"releaseDate\": \"2014-09-08T00:00:00.000Z\",\n            \"_id\": \"5e701f4d2672a63a60573a02\",\n            \"name\": \"El Pintor\",\n            \"image\": \"https://thesymphonia.ddns.net/api/v1/images/albums/El-Pintor.jpg\",\n            \"artist\": \"5e82a48054660672fd699883\",\n            \"albumType\": \"album\",\n            \"tracksCount\": 3,\n            \"year\": 2014,\n            \"id\": \"5e701f4d2672a63a60573a02\"\n        },\n        {\n            \"copyrights\": {\n                \"text\": \"Eu excepteur velit cillum dolor enim amet dolore magna. Voluptate enim ipsum pariatur est ut proident reprehenderit non et aliquip magna est velit. Consectetur in enim nostrud labore nulla veniam laborum eiusmod quis ex aliqua nisi dolor.Aliquip Lorem dolore nulla Lorem exercitation ad tempor cillum consectetur. Ad cillum occaecat aliqua amet pariatur.\",\n                \"type\": \"C\"\n            },\n            \"tracks\": [\n                \"5e7d2ddd3429e24340ff1397\",\n                \"5e7d2e023429e24340ff1398\"\n            ],\n            \"type\": \"album\",\n            \"releaseDate\": \"2020-02-14T00:00:00.000Z\",\n            \"_id\": \"5e701fdf2672a63a60573a06\",\n            \"name\": \"The Slow Rush\",\n            \"image\": \"https://thesymphonia.ddns.net/api/v1/images/albums/The-Slow-Rush.jpg\",\n            \"artist\": \"5e8137aa54660672fd699882\",\n            \"albumType\": \"album\",\n            \"tracksCount\": 2,\n            \"year\": 2020,\n            \"id\": \"5e701fdf2672a63a60573a06\"\n        }\n    ],\n    \"category\": [\n        {\n            \"icons\": [\n                {\n                    \"url\": \"https://thesymphonia.ddns.net/api/v1/browse/categories/images/Alternative.jpg\",\n                    \"width\": 300,\n                    \"height\": 300\n                }\n            ],\n            \"_id\": \"5e8076e6a9902a4328cc285c\",\n            \"name\": \"Alternative\",\n            \"id\": \"Alternative\",\n            \"type\": \"category\"\n        },\n        {\n            \"icons\": [\n                {\n                    \"url\": \"https://thesymphonia.ddns.net/api/v1/browse/categories/images/Electronic.jpg\",\n                    \"width\": 300,\n                    \"height\": 300\n                }\n            ],\n            \"_id\": \"5e883e48c808fd1aa40ad1f8\",\n            \"name\": \"Electronic\",\n            \"id\": \"Electronic\",\n            \"type\": \"category\"\n        }\n    ],\n    \"playlist\": [\n        {\n            \"collaborative\": false,\n            \"images\": [\n                \"https://thesymphonia.ddns.net/api/v1/images/playlists/playlist1.jpg\"\n            ],\n            \"public\": true,\n            \"tracks\": [\n                \"5e7d2dc03429e24340ff1396\",\n                \"5e8a1e767937ec4d40c6debc\",\n                \"5e8a1e9a7937ec4d40c6debe\"\n            ],\n            \"followers\": [\n                \"5e812db054660672fd699881\",\n                \"5e812a3454660672fd699880\",\n                \"5e8c75c4e37ac11ac4f01357\",\n                \"5e82a48054660672fd699883\"\n            ],\n            \"deleted\": false,\n            \"_id\": \"5e7969965146d92e98ac3ef7\",\n            \"name\": \"Songs to Sing in the Shower\",\n            \"owner\": \"5e8125dc54660672fd69987f\",\n            \"description\": \"My Favorite Public Place to Pretend is My Living Room Mix\",\n            \"category\": \"5e883e48c808fd1aa40ad1f8\",\n            \"tracksCount\": 3,\n            \"id\": \"5e7969965146d92e98ac3ef7\"\n        },\n        {\n            \"collaborative\": false,\n            \"images\": [\n                \"https://thesymphonia.ddns.net/api/v1/images/albums/The-Slow-Rush.jpg\"\n            ],\n            \"public\": true,\n            \"tracks\": [\n                \"5e7d2ddd3429e24340ff1397\",\n                \"5e7d2e023429e24340ff1398\",\n                \"5e7d334860cd930408a5f995\",\n                \"5e8a1e0f7937ec4d40c6deba\"\n            ],\n            \"followers\": [\n                \"5e812db054660672fd699881\",\n                \"5e812a3454660672fd699880\"\n            ],\n            \"deleted\": false,\n            \"_id\": \"5e7ac3c7d43a2c49909c549c\",\n            \"name\": \"Songs to Sing in the Shower\",\n            \"owner\": \"5e8125dc54660672fd69987f\",\n            \"description\": \"Soundtrack to My Whimsical, Quirky Life as an Unpaid Intern\",\n            \"category\": \"5e883e48c808fd1aa40ad1f8\",\n            \"__v\": 2,\n            \"deletedAt\": null,\n            \"tracksCount\": 4,\n            \"id\": \"5e7ac3c7d43a2c49909c549c\"\n        }\n    ]\n}"
						},
						{
							"name": "Search Generic with space in the keyword",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "*optional*. A valid access token from the Symphonia Accounts service. if not provided then private playlists won't be retireived.",
										"key": "Authorization",
										"type": "text",
										"value": ""
									}
								],
								"url": {
									"raw": "{{URL}}api/v1/search/:{keyword}?limit=2",
									"host": [
										"{{URL}}api"
									],
									"path": [
										"v1",
										"search",
										":{keyword}"
									],
									"query": [
										{
											"key": "limit",
											"value": "2",
											"description": "`Optional`. The maximum number of items to return. Default: 16. Minimum: 1."
										}
									],
									"variable": [
										{
											"key": "{keyword}",
											"value": "tame%20impala"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.0 (Ubuntu)"
								},
								{
									"key": "Date",
									"value": "Wed, 10 Jun 2020 13:11:57 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "ETag",
									"value": "W/\"825-4BbapahfweGCa1vymWz6Hf2mU9Q\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"profiles\": [],\n    \"artists\": [\n        {\n            \"queue\": {\n                \"currentlyPlaying\": {\n                    \"currentTrack\": \"https://thesymphonia.ddns.net/api/v1/me/player/tracks/5edf60d72aa9b365682e4746\",\n                    \"device\": \"5ee0d69235912c1307187ae9\"\n                },\n                \"queueTracks\": [\n                    \"https://thesymphonia.ddns.net/api/v1/me/player/tracks/5edf60d72aa9b365682e4746\",\n                    \"https://thesymphonia.ddns.net/api/v1/me/player/tracks/5edf60e82aa9b365682e4747\",\n                    \"https://thesymphonia.ddns.net/api/v1/me/player/tracks/5edf60f62aa9b365682e474c\"\n                ],\n                \"previousTrack\": null,\n                \"repeat\": false,\n                \"shuffle\": false,\n                \"play\": false,\n                \"repeatOnce\": false,\n                \"nextTrack\": \"https://thesymphonia.ddns.net/api/v1/me/player/tracks/5edf60e82aa9b365682e4747\",\n                \"devices\": [\n                    {\n                        \"_id\": \"5ee0d69235912c1307187ae9\",\n                        \"devicesName\": \"android\"\n                    }\n                ],\n                \"contextId\": \"5edf5a442aa9b365682e46f9\",\n                \"contextType\": \"album\"\n            },\n            \"premium\": false,\n            \"followedUsers\": [\n                \"5e812db054660672fd699881\",\n                \"5e84b966681ae439edfc1d6f\"\n            ],\n            \"tracks\": [\n                \"5e7d2dc03429e24340ff1396\",\n                \"5e7d2ddd3429e24340ff1397\",\n                \"5e7d2e023429e24340ff1398\"\n            ],\n            \"ownedPlaylists\": [\n                \"5edff56a30afcb26b83fb143\"\n            ],\n            \"followedAlbums\": [],\n            \"followedTracks\": [\n                \"5e7d2e023429e24340ff1398\"\n            ],\n            \"deleted\": false,\n            \"_id\": \"5e8137aa54660672fd699882\",\n            \"email\": \"test3@test.com\",\n            \"name\": \"Tame Impala\",\n            \"dateOfBirth\": \"1978-06-25T00:00:00.000Z\",\n            \"gender\": \"male\",\n            \"type\": \"artist\",\n            \"bio\": \"Eu excepteur velit cillum dolor enim amet dolore magna. Voluptate \\nenim ipsum pariatur est ut proident reprehenderit non et aliquip magna est velit. \\nConsectetur in enim nostrud labore nulla veniam laborum eiusmod quis ex aliqua nisi dolor.\\nAliquip Lorem dolore nulla Lorem exercitation ad tempor cillum consectetur. \\nAd cillum occaecat aliqua amet pariatur.\",\n            \"imageUrl\": \"https://thesymphonia.ddns.net/api/v1/images/users/Tame-Impala.jpg\",\n            \"__v\": 10,\n            \"last_login\": \"2020-06-10T12:02:16.910Z\",\n            \"playerToken\": \"57a289ea52ea245403001db3eda0c831f988b0bba653defea9b28d0e522bf392\",\n            \"playerTokenExpires\": \"2020-06-10T13:08:17.999Z\",\n            \"registraionToken\": \"fo-P_NutQxyyiv0Vl08EUZ:APA91bHODgf6U9ZpQcyZYIXty76YNePUAuyZgPDDUUSgimyWGL8Djy95GhU1hwu-dSgvP-f8-1VMWGv3RLduvo-NNpSL6DY_fGLieYNTIzuKiibd4wpMFMs-FE4mMjRXCcvAwNGfL0De\"\n        }\n    ],\n    \"tracks\": [],\n    \"albums\": [],\n    \"category\": [],\n    \"playlist\": []\n}"
						}
					]
				},
				{
					"name": "Get Search history current user",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}api/v1/me/search/history?limit=5&offset=0",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"v1",
								"me",
								"search",
								"history"
							],
							"query": [
								{
									"key": "limit",
									"value": "5"
								},
								{
									"key": "offset",
									"value": "0"
								}
							]
						}
					},
					"response": [
						{
							"name": "Get Search history current user",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{URL}}api/v1/me/search/history?limit=5&offset=0",
									"host": [
										"{{URL}}api"
									],
									"path": [
										"v1",
										"me",
										"search",
										"history"
									],
									"query": [
										{
											"key": "limit",
											"value": "5"
										},
										{
											"key": "offset",
											"value": "0"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "ETag",
									"value": "W/\"72b-iuP3aJwrdeNKqK1+ETUqxb9qh8c\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "Date",
									"value": "Wed, 22 Apr 2020 21:17:53 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"history\": {\n        \"total\": 5,\n        \"items\": [\n            {\n                \"_id\": \"5ea0af70b518b633bce05745\",\n                \"searchDate\": \"2020-04-22T20:56:16.300Z\",\n                \"userId\": \"5e812a3454660672fd699880\",\n                \"context\": {\n                    \"_id\": \"5e7d2dc03429e24340ff1396\",\n                    \"album\": {\n                        \"_id\": \"5e701fdf2672a63a60573a06\",\n                        \"image\": \"https://thesymphonia.ddns.net/api/v1/images/albums/The-Slow-Rush.jpg\",\n                        \"id\": \"5e701fdf2672a63a60573a06\"\n                    },\n                    \"name\": \"Instant Destiny\"\n                },\n                \"onModel\": \"Track\",\n                \"__v\": 0\n            },\n            {\n                \"_id\": \"5ea0af02b518b633bce05744\",\n                \"searchDate\": \"2020-04-22T20:54:26.892Z\",\n                \"userId\": \"5e812a3454660672fd699880\",\n                \"context\": {\n                    \"images\": [\n                        \"https://thesymphonia.ddns.net/api/v1/images/playlists/playlist5.jpg\"\n                    ],\n                    \"_id\": \"5e8069722fcb0d35900c4d64\",\n                    \"name\": \"At Work\",\n                    \"id\": \"5e8069722fcb0d35900c4d64\"\n                },\n                \"onModel\": \"Playlist\",\n                \"__v\": 0\n            },\n            {\n                \"_id\": \"5ea0ae66c42fd4438c828b9e\",\n                \"searchDate\": \"2020-04-22T20:51:50.152Z\",\n                \"userId\": \"5e812a3454660672fd699880\",\n                \"context\": {\n                    \"icons\": [\n                        {\n                            \"url\": \"https://thesymphonia.ddns.net/api/v1/browse/categories/images/Alternative.jpg\",\n                            \"width\": 300,\n                            \"height\": 300\n                        }\n                    ],\n                    \"_id\": \"5e8076e6a9902a4328cc285c\",\n                    \"name\": \"Alternative\",\n                    \"href\": \"totot\"\n                },\n                \"onModel\": \"Category\",\n                \"__v\": 0\n            },\n            {\n                \"_id\": \"5ea0ac35d2be3f21bc1ac401\",\n                \"searchDate\": \"2020-04-22T20:42:29.877Z\",\n                \"userId\": \"5e812a3454660672fd699880\",\n                \"context\": {\n                    \"_id\": \"5e701f4d2672a63a60573a02\",\n                    \"name\": \"El Pintor\",\n                    \"image\": \"https://thesymphonia.ddns.net/api/v1/images/albums/El-Pintor.jpg\",\n                    \"id\": \"5e701f4d2672a63a60573a02\"\n                },\n                \"onModel\": \"Album\",\n                \"__v\": 0\n            },\n            {\n                \"_id\": \"5ea0ac2ad2be3f21bc1ac400\",\n                \"searchDate\": \"2020-04-22T20:42:18.916Z\",\n                \"userId\": \"5e812a3454660672fd699880\",\n                \"context\": {\n                    \"_id\": \"5e701f4d2672a63a60573a02\",\n                    \"name\": \"El Pintor\",\n                    \"image\": \"https://thesymphonia.ddns.net/api/v1/images/albums/El-Pintor.jpg\",\n                    \"id\": \"5e701f4d2672a63a60573a02\"\n                },\n                \"onModel\": \"Album\",\n                \"__v\": 0\n            }\n        ],\n        \"limit\": 5,\n        \"offset\": 0,\n        \"next\": \"http://localhost:3000/api/v1/me/search/history?offset=5&limit=5\",\n        \"previous\": null,\n        \"href\": \"http://localhost:3000/api/v1/me/search/history\"\n    }\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Tracks",
			"item": [
				{
					"name": "Get Several Tracks",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"description": "**Required**. A valid access token from the Symphonia Accounts service.",
								"key": "Authorization",
								"type": "text",
								"value": "",
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman."
							}
						],
						"url": {
							"raw": "{{URL}}api/v1/users/tracks?ids=5e7d2dc03429e24340ff1396,5e7d2ddd3429e24340ff1397",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"v1",
								"users",
								"tracks"
							],
							"query": [
								{
									"key": "ids",
									"value": "5e7d2dc03429e24340ff1396,5e7d2ddd3429e24340ff1397",
									"description": "comma separated ids of the albums you want to retrieve their data"
								}
							]
						},
						"description": "# Description\r\n\r\nGet Symphonia catalog information for multiple tracks based on their Symphonia IDs.\r\n\r\n# Response Format\r\n\r\nOn success, the HTTP status code in the response header is `200` OK and the response body contains an object whose key is tracks and whose value is an array of track objects in JSON format. Objects are returned in the order requested. If an object is not found, a null value is returned in the appropriate position. Duplicate ids in the query will result in duplicate objects in the response. On error, the header status code is an error code and the response body contains an error object.\r\n\r\n\r\n## Track object\r\n\r\n| KEY               | VALUE TYPE                            | VALUE DESCRIPTION                                                                                                              |\r\n| ----------------- | ------------------------------------- | ------------------------------------------------------------------------------------------------------------------------------ |\r\n| album             | a simplified album object             | The album on which the track appears. The album object includes a link in href to full information about the album.            |\r\n| artists           | an array of simplified artist objects | The artists who performed the track. Each artist object includes a link in href to more detailed information about the artist. |\r\n| available_markets | array of strings                      | A list of the countries in which the track can be played, identified by their ISO 3166-1 alpha-2 code.                         |\r\n| duration_ms       | integer                               | The track length in milliseconds.                                                                                              |\r\n| explicit          | Boolean                               | Whether or not the track has explicit lyrics ( true = yes it does; false = no it does not OR unknown).                         |\r\n| href              | string                                | A link to the Web API endpoint providing full details of the track.                                                            |\r\n| id                | string                                | The Symphonia ID for the track.                                                                                                |\r\n| name              | string                                | The name of the track.                                                                                                         |\r\n| popularity        | integer                               |  The popularity of the track. The value will be between 0 and 100, with 100 being the most popular.The popularity of a track is a value between 0 and 100, with 100 being the most popular. The popularity is calculated by algorithm and is based, in the most part, on the total number of plays the track has had and how recent those plays are.                                                                                                                              |\r\n| type              | string                                | The object type: “track”.                                                                                                      |\r\n\r\n\r\n## Request parameters"
					},
					"response": [
						{
							"name": "Get Several Tracks",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "**Required**. A valid access token from the Symphonia Accounts service.",
										"key": "Authorization",
										"type": "text",
										"value": "",
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman."
									}
								],
								"url": {
									"raw": "{{URL}}api/v1/users/tracks?ids=5e7d2dc03429e24340ff1396,5e7d2ddd3429e24340ff1397",
									"host": [
										"{{URL}}api"
									],
									"path": [
										"v1",
										"users",
										"tracks"
									],
									"query": [
										{
											"key": "ids",
											"value": "5e7d2dc03429e24340ff1396,5e7d2ddd3429e24340ff1397",
											"description": "*Required*. A comma-separated list of the Spotify IDs for the tracks. Maximum: 50 IDs."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "ETag",
									"value": "W/\"ad7-SfPYd/QY8AerzXN6IRLEQEdisnQ\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "Date",
									"value": "Wed, 15 Apr 2020 23:42:39 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"category\": [\n            {\n                \"icons\": [\n                    {\n                        \"url\": \"https://thesymphonia.ddns.net/api/v1/browse/categories/images/Psychedelic-pop.jpg\",\n                        \"width\": 300,\n                        \"height\": 300\n                    }\n                ],\n                \"_id\": \"5e8072e5e478cf39b47bd1ef\",\n                \"name\": \"Psychedelic pop\",\n                \"id\": \"Psychedelic-pop\",\n                \"type\": \"category\",\n                \"href\": \"totot\"\n            }\n        ],\n        \"explicit\": false,\n        \"_id\": \"5e7d2dc03429e24340ff1396\",\n        \"album\": {\n            \"tracks\": [\n                \"5e7d2dc03429e24340ff1396\",\n                \"5e7d2ddd3429e24340ff1397\",\n                \"5e7d2e023429e24340ff1398\"\n            ],\n            \"releaseDate\": \"2020-04-15T23:42:06.536Z\",\n            \"_id\": \"5e701fdf2672a63a60573a06\",\n            \"name\": \"The Slow Rush\",\n            \"year\": 2020,\n            \"image\": \"https://thesymphonia.ddns.net/api/v1/images/albums/The-Slow-Rush.jpg\",\n            \"artist\": \"5e8137aa54660672fd699882\"\n        },\n        \"name\": \"Instant Destiny\",\n        \"durationMs\": 30000,\n        \"artist\": {\n            \"queue\": {\n                \"currentlyPlaying\": {\n                    \"currentTrack\": null\n                },\n                \"queueTracks\": [],\n                \"previousTrack\": null,\n                \"repeat\": false,\n                \"shuffle\": false,\n                \"play\": false,\n                \"repeatOnce\": false,\n                \"devices\": [\n                    {\n                        \"_id\": \"5e8a5b0db2859207bf1fc2e9\",\n                        \"devicesName\": \"chrome\"\n                    }\n                ]\n            },\n            \"followedUsers\": [],\n            \"tracks\": [\n                \"5e7d2dc03429e24340ff1396\",\n                \"5e7d2ddd3429e24340ff1397\",\n                \"5e7d2e023429e24340ff1398\"\n            ],\n            \"ownedPlaylists\": [],\n            \"followedAlbums\": [],\n            \"followedTracks\": [],\n            \"_id\": \"5e8137aa54660672fd699882\",\n            \"email\": \"test3@test.com\",\n            \"name\": \"Tame Impala\",\n            \"dateOfBirth\": \"1978-06-25T00:00:00.000Z\",\n            \"gender\": \"male\",\n            \"type\": \"artist\",\n            \"imageUrl\": \"https://thesymphonia.ddns.net/api/v1/images/users/Tame-Impala.jpg\"\n        },\n        \"trackPath\": \"assets/tracks/Instant-Destiny.mp3\",\n        \"premium\": false,\n        \"type\": \"track\"\n    },\n    {\n        \"category\": [\n            {\n                \"icons\": [\n                    {\n                        \"url\": \"https://thesymphonia.ddns.net/api/v1/browse/categories/images/Psychedelic-pop.jpg\",\n                        \"width\": 300,\n                        \"height\": 300\n                    }\n                ],\n                \"_id\": \"5e8072e5e478cf39b47bd1ef\",\n                \"name\": \"Psychedelic pop\",\n                \"id\": \"Psychedelic-pop\",\n                \"type\": \"category\",\n                \"href\": \"totot\"\n            }\n        ],\n        \"explicit\": false,\n        \"_id\": \"5e7d2ddd3429e24340ff1397\",\n        \"album\": {\n            \"tracks\": [\n                \"5e7d2dc03429e24340ff1396\",\n                \"5e7d2ddd3429e24340ff1397\",\n                \"5e7d2e023429e24340ff1398\"\n            ],\n            \"releaseDate\": \"2020-04-15T23:42:06.536Z\",\n            \"_id\": \"5e701fdf2672a63a60573a06\",\n            \"name\": \"The Slow Rush\",\n            \"year\": 2020,\n            \"image\": \"https://thesymphonia.ddns.net/api/v1/images/albums/The-Slow-Rush.jpg\",\n            \"artist\": \"5e8137aa54660672fd699882\"\n        },\n        \"name\": \"Borderline\",\n        \"durationMs\": 30000,\n        \"artist\": {\n            \"queue\": {\n                \"currentlyPlaying\": {\n                    \"currentTrack\": null\n                },\n                \"queueTracks\": [],\n                \"previousTrack\": null,\n                \"repeat\": false,\n                \"shuffle\": false,\n                \"play\": false,\n                \"repeatOnce\": false,\n                \"devices\": [\n                    {\n                        \"_id\": \"5e8a5b0db2859207bf1fc2e9\",\n                        \"devicesName\": \"chrome\"\n                    }\n                ]\n            },\n            \"followedUsers\": [],\n            \"tracks\": [\n                \"5e7d2dc03429e24340ff1396\",\n                \"5e7d2ddd3429e24340ff1397\",\n                \"5e7d2e023429e24340ff1398\"\n            ],\n            \"ownedPlaylists\": [],\n            \"followedAlbums\": [],\n            \"followedTracks\": [],\n            \"_id\": \"5e8137aa54660672fd699882\",\n            \"email\": \"test3@test.com\",\n            \"name\": \"Tame Impala\",\n            \"dateOfBirth\": \"1978-06-25T00:00:00.000Z\",\n            \"gender\": \"male\",\n            \"type\": \"artist\",\n            \"imageUrl\": \"https://thesymphonia.ddns.net/api/v1/images/users/Tame-Impala.jpg\"\n        },\n        \"trackPath\": \"assets/tracks/Borderline.mvk\",\n        \"premium\": false,\n        \"type\": \"track\"\n    }\n]"
						}
					]
				},
				{
					"name": "Get track",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"description": "*Required*. A valid access token from the Symphonia Accounts service.\n",
								"key": "Authorization",
								"type": "text",
								"value": ""
							}
						],
						"url": {
							"raw": "{{URL}}api/v1/users/track/:{track_id}?source=searchtrack",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"v1",
								"users",
								"track",
								":{track_id}"
							],
							"query": [
								{
									"key": "source",
									"value": "searchtrack",
									"description": "if you got the track from the searchbox to store it in search history"
								}
							],
							"variable": [
								{
									"key": "{track_id}",
									"value": "5edf603f2aa9b365682e473b",
									"description": "The `Symphonia` id for the document you want to retrieve"
								}
							]
						},
						"description": "# Description\r\n\r\nGet Symphonia catalog information for a single track identified by its unique Symphonia ID.\r\n\r\n# Response\r\n\r\nOn success, the HTTP status code in the response header is `200` OK and the response body contains a track object in JSON format. On error, the header status code is an error code and the response body contains an error object.\r\n\r\n\r\n## Track object\r\n\r\n| KEY               | VALUE TYPE                            | VALUE DESCRIPTION                                                                                                              |\r\n| ----------------- | ------------------------------------- | ------------------------------------------------------------------------------------------------------------------------------ |\r\n| album             | an album object             | The album on which the track appears. The album object includes a link in href to full information about the album.            |\r\n| artists           | an array of artist objects | The artists who performed the track. Each artist object includes a link in href to more detailed information about the artist. |\r\n| available_markets | array of strings                      | A list of the countries in which the track can be played, identified by their ISO 3166-1 alpha-2 code.                         |\r\n| duration_ms       | integer                               | The track length in milliseconds.                                                                                              |\r\n| explicit          | Boolean                               | Whether or not the track has explicit lyrics ( true = yes it does; false = no it does not OR unknown).                         |\r\n| href              | string                                | A link to the Web API endpoint providing full details of the track.                                                            |\r\n| id                | string                                | The Symphonia ID for the track.                                                                                                |\r\n| name              | string                                | The name of the track.                                                                                                         |\r\n| popularity        | integer                               |\tThe popularity of the track. The value will be between 0 and 100, with 100 being the most popular.The popularity of a track is a value between 0 and 100, with 100 being the most popular. The popularity is calculated by algorithm and is based, in the most part, on the total number of plays the track has had and how recent those plays are.                                                                                                                                |\r\n| type              | string                                | The object type: “track”.                                                                                                      |\r\n\r\n\r\n## Request parameters"
					},
					"response": [
						{
							"name": "Get track",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"description": "*Required*. A valid access token from the Symphonia Accounts service.\n",
										"key": "Authorization",
										"type": "text",
										"value": ""
									}
								],
								"url": {
									"raw": "{{URL}}api/v1/users/track/5e7d2dc03429e24340ff1396",
									"host": [
										"{{URL}}api"
									],
									"path": [
										"v1",
										"users",
										"track",
										"5e7d2dc03429e24340ff1396"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "504"
								},
								{
									"key": "ETag",
									"value": "W/\"1f8-Cp8lWbAc9AX0AXlh+TbESFiScIw\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Date",
									"value": "Tue, 21 Apr 2020 01:42:22 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"category\": [\n        {\n            \"_id\": \"5e8072e5e478cf39b47bd1ef\",\n            \"name\": \"Psychedelic pop\",\n            \"href\": \"totot\"\n        }\n    ],\n    \"explicit\": false,\n    \"_id\": \"5e7d2dc03429e24340ff1396\",\n    \"album\": {\n        \"_id\": \"5e701fdf2672a63a60573a06\",\n        \"name\": \"The Slow Rush\",\n        \"image\": \"https://thesymphonia.ddns.net/api/v1/images/albums/The-Slow-Rush.jpg\",\n        \"id\": \"5e701fdf2672a63a60573a06\"\n    },\n    \"name\": \"Instant Destiny\",\n    \"durationMs\": 30000,\n    \"artist\": {\n        \"_id\": \"5e8137aa54660672fd699882\",\n        \"name\": \"Tame Impala\"\n    },\n    \"trackPath\": \"assets/tracks/Instant-Destiny.mp3\",\n    \"premium\": false,\n    \"type\": \"track\"\n}"
						}
					]
				},
				{
					"name": "Add track",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"description": "*Required*. A valid access token from the Symphonia Accounts service",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "*Required*. The content type of the request body:",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "track",
									"description": "*required* the mp3 track",
									"type": "file",
									"src": "/C:/Users/dell/Desktop/untitled.mp3"
								},
								{
									"key": "name",
									"value": "Evil",
									"description": "*required* name of the track",
									"type": "text"
								},
								{
									"key": "album",
									"value": "5ecc17a4fbc20c2144636fe7",
									"description": "*required* album id to which the track will belong",
									"type": "text"
								},
								{
									"key": "explicit",
									"value": "false",
									"description": "*optional* `true` or `false`. default is `false`",
									"type": "text"
								},
								{
									"key": "premium",
									"value": "false",
									"description": "*optional* `true` or `false`. default is `false`",
									"type": "text"
								},
								{
									"key": "category",
									"value": "5e8072e5e478cf39b47bd1ef",
									"contentType": "",
									"description": "*required* array of the genres of the song",
									"type": "text"
								},
								{
									"key": "category",
									"value": "5e807517e478cf39b47bd1f0",
									"description": "the genre of the song",
									"type": "text"
								}
							],
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}api/v1/users/tracks",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"v1",
								"users",
								"tracks"
							]
						}
					},
					"response": [
						{
							"name": "Add track",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"description": "*Required*. A valid access token from the Symphonia Accounts service",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "*Required*. The content type of the request body:",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "track",
											"type": "file",
											"src": "/C:/Users/dell/Desktop/untitled.mp3"
										},
										{
											"key": "name",
											"value": "indigo night",
											"type": "text"
										},
										{
											"key": "album",
											"value": "5ecc048a3630961f4c0bd5ee",
											"type": "text"
										},
										{
											"key": "explicit",
											"value": "false",
											"type": "text"
										},
										{
											"key": "premium",
											"value": "false",
											"type": "text"
										},
										{
											"key": "category",
											"value": "5e8072e5e478cf39b47bd1ef",
											"contentType": "",
											"type": "text"
										},
										{
											"key": "category",
											"value": "5e807517e478cf39b47bd1f0",
											"type": "text"
										}
									],
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}api/v1/users/tracks",
									"host": [
										"{{URL}}api"
									],
									"path": [
										"v1",
										"users",
										"tracks"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "368"
								},
								{
									"key": "ETag",
									"value": "W/\"170-k8MFt58YCESHiNUSjU4cU7AzJEA\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Date",
									"value": "Mon, 25 May 2020 17:47:43 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"category\": [\n        \"5e8072e5e478cf39b47bd1ef\",\n        \"5e807517e478cf39b47bd1f0\"\n    ],\n    \"explicit\": false,\n    \"_id\": \"5ecc04bf3630961f4c0bd5f0\",\n    \"name\": \"indigo night\",\n    \"album\": \"5ecc048a3630961f4c0bd5ee\",\n    \"premium\": false,\n    \"trackPath\": \"assets/tracks/Muhammad_Ahmad_Hesham-5e8125dc54660672fd69987f/f0c7a9d88971c4075f4f-1590428863225.mp3\",\n    \"durationMs\": 11311,\n    \"artist\": \"5e8125dc54660672fd69987f\",\n    \"__v\": 0\n}"
						}
					]
				},
				{
					"name": "Rename Track",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"A stranger among us\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}api/v1/users/track/:{track_id}",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"v1",
								"users",
								"track",
								":{track_id}"
							],
							"variable": [
								{
									"key": "{track_id}",
									"value": "5edf603f2aa9b365682e473b"
								}
							]
						}
					},
					"response": [
						{
							"name": "Rename Track",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"A stranger among us\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}api/v1/users/track/:{track_id}",
									"host": [
										"{{URL}}api"
									],
									"path": [
										"v1",
										"users",
										"track",
										":{track_id}"
									],
									"variable": [
										{
											"key": "{track_id}",
											"value": "5ecc17bafbc20c2144636fe8"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "375"
								},
								{
									"key": "ETag",
									"value": "W/\"177-NGCn714P+MaGazXQ+7bm/1taTCU\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Date",
									"value": "Mon, 25 May 2020 19:11:19 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"category\": [\n        \"5e8072e5e478cf39b47bd1ef\",\n        \"5e807517e478cf39b47bd1f0\"\n    ],\n    \"explicit\": false,\n    \"_id\": \"5ecc17bafbc20c2144636fe8\",\n    \"name\": \"A stranger among us\",\n    \"album\": \"5ecc17a4fbc20c2144636fe7\",\n    \"premium\": false,\n    \"trackPath\": \"assets/tracks/Muhammad_Ahmad_Hesham-5e8125dc54660672fd69987f/75f09c132109a321916c-1590433722392.mp3\",\n    \"durationMs\": 11311,\n    \"artist\": \"5e8125dc54660672fd69987f\",\n    \"__v\": 0\n}"
						}
					]
				},
				{
					"name": "Delete Track",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}api/v1/users/track/:{track_id}",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"v1",
								"users",
								"track",
								":{track_id}"
							],
							"variable": [
								{
									"key": "{track_id}",
									"value": "5ecc1968cf7a40443825bb89"
								}
							]
						}
					},
					"response": [
						{
							"name": "Delete Track",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{URL}}api/v1/users/track/:{track_id}",
									"host": [
										"{{URL}}api"
									],
									"path": [
										"v1",
										"users",
										"track",
										":{track_id}"
									],
									"variable": [
										{
											"key": "{track_id}",
											"value": "5ecc17bafbc20c2144636fe8"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Date",
									"value": "Mon, 25 May 2020 19:13:51 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": null
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "Register",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e3622365-7b25-4c71-b2be-a9f4316ed5c2",
								"exec": [
									"pm.environment.set(\"jwt\", pm.response.json().token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text",
								"description": "<em>Required </em> The content type of the request body:"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"etsh\",\n\t\"email\": \"test133@test.com\",\n\t\"emailConfirm\": \"test133@test.com\",\n\t\"password\": \"password\",\n\t\"dateOfBirth\": \"1999-04-30\",\n\t\"gender\": \"male\",\n\t\"type\": \"artist\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}api/v1/users/signup",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"v1",
								"users",
								"signup"
							]
						},
						"description": "# Description\r\n\r\nRegister a new user into the application providing his/her essential information\r\n\r\n## Response Format\r\n\r\nOn success, the HTTP status code in the response header is 201 Created. The response body contains the token that will be used to authorize the user and user object. On error, the header status code is an error code and the response body contains an error object. \r\n\r\n\r\n### user object \r\n\r\n<table>\r\n  <thead>\r\n    <tr>\r\n      <th>Key</th>\r\n      <th>Value Type</th>\r\n      <th>Value Description</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr>\r\n      <td>name</td>\r\n      <td>string</td>\r\n      <td>The name that the user provided for himself.</td>\r\n    </tr>\r\n    <tr>\r\n      <td>email</td>\r\n      <td>string</td>\r\n      <td>The email the user provided.</td>\r\n    </tr>\r\n    <tr>\r\n      <td>_id</td>\r\n      <td>string</td>\r\n      <td>The Symphonia ID used to identify the user in our application.</td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n\r\n## Request parameters\r\n\r\n### Body parameters\r\n\r\n<table>\r\n  <thead>\r\n    <tr>\r\n      <th>Key</th>\r\n      <th>Value Type</th>\r\n      <th>Value Description</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr>\r\n      <td>name</td>\r\n      <td>string</td>\r\n      <td><em>Required: </em> The name that the user provided for himself.</td>\r\n    </tr>\r\n    <tr>\r\n      <td>email</td>\r\n      <td>string</td>\r\n      <td><em>Required: </em> The email the user provided.</td>\r\n    </tr>\r\n    <tr>\r\n      <td>password</td>\r\n      <td>string</td>\r\n      <td><em>Required: </em> The user password.</td>\r\n    </tr>\r\n    <tr>\r\n      <td>passwordConfirm</td>\r\n      <td>string</td>\r\n      <td><em>Required: </em> The user password confirmation.</td>\r\n    </tr>\r\n    <tr>\r\n      <td>DateOfBirth</td>\r\n      <td>date</td>\r\n      <td><em>Required: </em> The date of birth for the user.</td>\r\n    </tr>\r\n    <tr>\r\n      <td>Gender</td>\r\n      <td>string</td>\r\n      <td><em>Required: </em> The gender of the user should be <code>\"male\"</code> or <code>\"female\"</code> only.</td>\r\n    </tr>\r\n  </tbody>\r\n</table>"
					},
					"response": [
						{
							"name": "Register as artist",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text",
										"description": "<em>Required </em> The content type of the request body:"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"etsh\",\n\t\"email\": \"test136@test.com\",\n\t\"emailConfirm\": \"test136@test.com\",\n\t\"password\": \"password\",\n\t\"dateOfBirth\": \"1999-04-30\",\n\t\"gender\": \"male\",\n\t\"type\": \"artist\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}api/v1/users/signup",
									"host": [
										"{{URL}}api"
									],
									"path": [
										"v1",
										"users",
										"signup"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "56"
								},
								{
									"key": "ETag",
									"value": "W/\"38-aBmji3L7IresG1Qs6sdEDrdI34w\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Date",
									"value": "Fri, 24 Apr 2020 13:32:45 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"success\",\n    \"message\": \"token was sent to email\"\n}"
						},
						{
							"name": "Register",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text",
										"description": "<em>Required </em> The content type of the request body:"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"etsh\",\n\t\"email\": \"test135@test.com\",\n\t\"emailConfirm\": \"test135@test.com\",\n\t\"password\": \"password\",\n\t\"dateOfBirth\": \"1999-04-30\",\n\t\"gender\": \"male\",\n\t\"type\": \"artist\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}api/v1/users/signup",
									"host": [
										"{{URL}}api"
									],
									"path": [
										"v1",
										"users",
										"signup"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "631"
								},
								{
									"key": "ETag",
									"value": "W/\"277-pFHi2TFXoxPHV2PkwzakmQ/grFA\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Date",
									"value": "Wed, 08 Apr 2020 16:29:53 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjVlOGRmYzAxMDNiYjIxMzQ0ODM0ODJhYyIsImlhdCI6MTU4NjM2MzM5MywiZXhwIjoxNzU5MTYzMzkzfQ.eqt2T3Dih1IZdabgh9AvKQ9Uqo4CxjqmX_p72JbV64k\",\n    \"user\": {\n        \"queue\": {\n            \"currentlyPlaying\": {\n                \"currentTrack\": null\n            },\n            \"queueTracks\": [],\n            \"previousTrack\": null,\n            \"repeat\": false,\n            \"shuffle\": false,\n            \"play\": false,\n            \"repeatOnce\": false,\n            \"devices\": []\n        },\n        \"ownedPlaylists\": [],\n        \"followedAlbums\": [],\n        \"followedTracks\": [],\n        \"_id\": \"5e8dfc0103bb2134483482ac\",\n        \"email\": \"test135@test.com\",\n        \"name\": \"etsh\",\n        \"dateOfBirth\": \"1999-04-30T00:00:00.000Z\",\n        \"gender\": \"male\",\n        \"type\": \"artist\",\n        \"imageUrl\": \"http://localhost:3000/api/v1/images/users/default.png\"\n    }\n}"
						}
					]
				},
				{
					"name": "login",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "62db18ff-cd68-4678-ae37-f8e321474c96",
								"exec": [
									"pm.environment.set(\"jwt\", pm.response.json().token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json",
								"description": "<em>Required </em> The content type of the request body:"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"generalmohamed1999@gmail.com\",\n\t\"password\": \"password\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}api/v1/users/login",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"v1",
								"users",
								"login"
							]
						},
						"description": "# Description\r\n\r\nlogin the Symphonia user into the application providing his/her registered email\r\n\r\n# Response Format\r\n\r\nOn success, the HTTP status code in the response header is `200`. The response body contains the token that will be used to authorize the user and user object. On error, the header status code is an error code and the response body contains an error object. \r\n\r\n# Example\r\n\r\n## user object \r\n\r\n<table>\r\n  <thead>\r\n    <tr>\r\n      <th>Key</th>\r\n      <th>Value Type</th>\r\n      <th>Value Description</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr>\r\n      <td>name</td>\r\n      <td>string</td>\r\n      <td>The name that the user provided for himself.</td>\r\n    </tr>\r\n    <tr>\r\n      <td>email</td>\r\n      <td>string</td>\r\n      <td>The email the user provided.</td>\r\n    </tr>\r\n    <tr>\r\n      <td>_id</td>\r\n      <td>string</td>\r\n      <td>The Symphonia ID used to identify the user in our application.</td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n\r\n# Request parameters\r\n\r\n## Body parameters\r\n\r\n<table>\r\n  <thead>\r\n    <tr>\r\n      <th>Key</th>\r\n      <th>Value Type</th>\r\n      <th>Value Description</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr>\r\n      <td>email</td>\r\n      <td>string</td>\r\n      <td><em>Required: </em> The email the user provided.</td>\r\n    </tr>\r\n    <tr>\r\n      <td>password</td>\r\n      <td>string</td>\r\n      <td><em>Required: </em> The user password.</td>\r\n    </tr>\r\n  </tbody>\r\n</table>"
					},
					"response": [
						{
							"name": "login",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json",
										"description": "<em>Required </em> The content type of the request body:"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"email\": \"generalmohamed1999@gmail.com\",\n\t\"password\": \"password\"\n}\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}api/v1/users/login",
									"host": [
										"{{URL}}api"
									],
									"path": [
										"v1",
										"users",
										"login"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.0 (Ubuntu)"
								},
								{
									"key": "Date",
									"value": "Sat, 30 May 2020 13:57:41 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "ETag",
									"value": "W/\"971-PyqDrCHpx6B8e40YEzq5JJ8KTqs\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjVlODEyNWRjNTQ2NjA2NzJmZDY5OTg3ZiIsImlhdCI6MTU5MDg0NzA2MSwiZXhwIjoxNzYzNjQ3MDYxfQ.QK6PXV53d0ge-Wpd4KIX4uVh0I1slG000OKmy05G8i4\",\n    \"user\": {\n        \"queue\": {\n            \"currentlyPlaying\": {\n                \"currentTrack\": null,\n                \"device\": \"5ed04460bf6e5b68d3e52dcf\"\n            },\n            \"queueTracks\": [\n                \"https://thesymphonia.ddns.net/api/v1/me/player/tracks/5e8a39f24e11cd46c8bde654\",\n                \"https://thesymphonia.ddns.net/api/v1/me/player/tracks/5e8a37d0d56ea252c3860a1a\",\n                \"https://thesymphonia.ddns.net/api/v1/me/player/tracks/5e8a1ea07937ec4d40c6debf\",\n                \"https://thesymphonia.ddns.net/api/v1/me/player/tracks/5e8a1e9a7937ec4d40c6debe\",\n                \"https://thesymphonia.ddns.net/api/v1/me/player/tracks/5e8a1e937937ec4d40c6debd\",\n                \"https://thesymphonia.ddns.net/api/v1/me/player/tracks/5e8a1e767937ec4d40c6debc\",\n                \"https://thesymphonia.ddns.net/api/v1/me/player/tracks/5e8a1e727937ec4d40c6debb\"\n            ],\n            \"previousTrack\": \"https://thesymphonia.ddns.net/api/v1/me/player/tracks/5e8a1e937937ec4d40c6debd\",\n            \"repeat\": false,\n            \"shuffle\": false,\n            \"play\": false,\n            \"repeatOnce\": false,\n            \"nextTrack\": null,\n            \"devices\": [\n                {\n                    \"_id\": \"5ed03e767ddd9c689c7485c2\",\n                    \"devicesName\": \"Chrome\"\n                },\n                {\n                    \"_id\": \"5ed04447bf6e5b68d3e52dca\"\n                },\n                {\n                    \"_id\": \"5ed04460bf6e5b68d3e52dcf\"\n                }\n            ]\n        },\n        \"premium\": true,\n        \"ownedPlaylists\": [\n            \"5e7969965146d92e98ac3ef7\",\n            \"5e7ac3c7d43a2c49909c549c\",\n            \"5e805a8a3711912168602afa\",\n            \"5e875c15ba6ebe663fdbb2c1\",\n            \"5e9f6250a0e0d71699c45b09\",\n            \"5eccc3ef3900de3c24583d48\",\n            \"5eccc3fa3900de3c24583d49\"\n        ],\n        \"followedAlbums\": [\n            \"5e701f4d2672a63a60573a02\",\n            \"5e701fdf2672a63a60573a06\"\n        ],\n        \"followedTracks\": [\n            \"5e7d2dc03429e24340ff1396\",\n            \"5ea24170b53b6d11e68732db\",\n            \"5e8a1e937937ec4d40c6debd\"\n        ],\n        \"deleted\": false,\n        \"_id\": \"5e8125dc54660672fd69987f\",\n        \"email\": \"generalmohamed1999@gmail.com\",\n        \"name\": \"Etshawy\",\n        \"dateOfBirth\": \"1999-05-12T00:00:00.000Z\",\n        \"gender\": \"male\",\n        \"type\": \"artist\",\n        \"last_login\": \"2020-05-30T13:57:41.927Z\",\n        \"passwordChangedAt\": \"2020-04-19T17:20:46.748Z\",\n        \"googleId\": \"114901540775379681047\",\n        \"imageGoogleUrl\": \"https://lh3.googleusercontent.com/a-/AOh14Gga4UgHOVM-hgdnV5Sv8OusgKzhsfmiYv5wEgSwxA\",\n        \"imageUrl\": \"https://thesymphonia.ddns.net/api/v1/images/users/b25af6f135ececc649c9-1590714351975.jpg\",\n        \"playerToken\": \"19992ee6a8b4a40eced8708c930c7768aaac64456428243206973ce2d9143f64\",\n        \"playerTokenExpires\": \"2020-05-28T23:28:16.872Z\",\n        \"phone\": \"577_5777\",\n        \"facebookId\": \"1513670318797902\",\n        \"imageFacebookUrl\": \"https://platform-lookaside.fbsbx.com/platform/profilepic/?asid=1513670318797902&height=50&width=50&ext=1589998517&hash=AeRnTaA0S9yI9ubW\"\n    }\n}"
						}
					]
				},
				{
					"name": "update password",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"passwordCurrent\": \"newpassword\",\n\t\"password\": \"password\",\n\t\"passwordConfirm\": \"password\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}api/v1/users/updatepassword",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"v1",
								"users",
								"updatepassword"
							]
						}
					},
					"response": [
						{
							"name": "update password",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {your access token}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"passwordCurrent\": \"password\",\n\t\"password\": \"newpassword\",\n\t\"passwordConfirm\": \"newpassword\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}api/v1/users/updatepassword",
									"host": [
										"{{URL}}api"
									],
									"path": [
										"v1",
										"users",
										"updatepassword"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "1000"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "999"
								},
								{
									"key": "Date",
									"value": "Sun, 29 Mar 2020 16:35:28 GMT"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1585503326"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "453"
								},
								{
									"key": "ETag",
									"value": "W/\"1c5-1Q2P1P6u8hNJlcJfxpbyNTU6QZA\""
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjVlODBiMzQxYjE5YTI0MDg0Y2I5YjdlNyIsImlhdCI6MTU4NTQ5OTczMiwiZXhwIjoxNTg1NTAzMzMyfQ._YoFcWRISVlkTXUA0s8qaxf7N0L3A2ZIwfVEwLq5joU\",\n    \"user\": {\n        \"_id\": \"5e80b341b19a24084cb9b7e7\",\n        \"email\": \"test29@test.com\",\n        \"name\": \"etsh\",\n        \"dateOfBirth\": \"1999-12-31T00:00:00.000Z\",\n        \"gender\": \"male\",\n        \"type\": \"artist\",\n        \"last_login\": \"2020-03-29T16:33:58.024Z\",\n        \"passwordChangedAt\": \"2020-03-29T16:35:31.242Z\"\n    }\n}"
						}
					]
				},
				{
					"name": "Forgot Password",
					"request": {
						"method": "POST",
						"header": [
							{
								"description": "<em>Required </em> The content type of the request body:",
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"generalmohamed1999@gmail.com\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}api/v1/users/forgotpassword",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"v1",
								"users",
								"forgotpassword"
							]
						},
						"description": "# Description\r\n\r\nwhen a user forgets his password he provides his email so we can help him get into his account.\r\n\r\n# Response Format\r\n\r\nOn success, the HTTP status code in the response header is `200`. The response body contains a message telling the user to check his email inbox. On error, the header status code is an error code and the response body contains an error object. \r\n\r\n\r\n# Request parameters\r\n\r\n## Body parameters\r\n\r\n<table>\r\n  <thead>\r\n    <tr>\r\n      <th>Key</th>\r\n      <th>Value Type</th>\r\n      <th>Value Description</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr>\r\n      <td>email</td>\r\n      <td>string</td>\r\n      <td><em>Required: </em> The registered user email in Symphonia application.</td>\r\n    </tr>\r\n  </tbody>\r\n</table>"
					},
					"response": [
						{
							"name": "Forgot Password",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "<em>Required </em> The content type of the request body:",
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"email\": \"test@test.com\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}api/v1/users/forgotpassword",
									"host": [
										"{{URL}}api"
									],
									"path": [
										"v1",
										"users",
										"forgotpassword"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.0 (Ubuntu)"
								},
								{
									"key": "Date",
									"value": "Mon, 30 Mar 2020 18:00:47 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "53"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "1000"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "999"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1585591549"
								},
								{
									"key": "ETag",
									"value": "W/\"35-7vJh+jMVY1tC+XB9d74hwdymChI\""
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"success\",\n    \"message\": \"Token sent to email!\"\n}"
						}
					]
				},
				{
					"name": "Reset_Password",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json",
								"description": "<em>Required </em> The content type of the request body:"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"password\": \"newpassword\",\n\t\"passwordConfirm\": \"newpassword\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}api/v1/users/resetpassword/:{token}",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"v1",
								"users",
								"resetpassword",
								":{token}"
							],
							"variable": [
								{
									"key": "{token}",
									"value": "f31c2eb07635197b475353b52140f202dbc6962045bc64929b0c3d2b0ec4b0c6",
									"description": "*required: *  A valid Token that the server sent it to the user email."
								}
							]
						},
						"description": "# Description\r\n\r\nThe user using the provided token can send the new password for the account to be set.\r\n\r\n# Response Format\r\n\r\nOn success, the HTTP status code in the response header is `200`. The response body contains the access token for the user. On error, the header status code is an error code and the response body contains an error object. \r\n\r\n\r\n# Request parameters\r\n\r\n## Body parameters\r\n\r\n<table>\r\n  <thead>\r\n    <tr>\r\n      <th>Key</th>\r\n      <th>Value Type</th>\r\n      <th>Value Description</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr>\r\n      <td>password</td>\r\n      <td>string</td>\r\n      <td><em>Required: </em> The new account password.</td>\r\n    </tr>\r\n    <tr>\r\n      <td>passwordConfirm</td>\r\n      <td>string</td>\r\n      <td><em>Required: </em> The new account password confirmation.</td>\r\n    </tr>\r\n  </tbody>\r\n</table>"
					},
					"response": [
						{
							"name": "Reset_Password",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json",
										"description": "<em>Required </em> The content type of the request body:"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"password\": \"newpassword\",\n\t\"passwordConfirm\": \"newpassword\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}api/v1/users/resetpassword/:{token}",
									"host": [
										"{{URL}}api"
									],
									"path": [
										"v1",
										"users",
										"resetpassword",
										":{token}"
									],
									"variable": [
										{
											"key": "{token}",
											"value": ""
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "ETag",
									"value": "W/\"461-I+md5cydQYq5EFszWlzxYesxHpI\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "Date",
									"value": "Wed, 08 Apr 2020 16:32:27 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjVlODEyNWRjNTQ2NjA2NzJmZDY5OTg3ZiIsImlhdCI6MTU4NjM2MzU0NywiZXhwIjoxNzU5MTYzNTQ3fQ.svKEbb352eWc8_FfHG055gSi3edEs0VScaTSlaP45zQ\",\n    \"user\": {\n        \"queue\": {\n            \"currentlyPlaying\": {\n                \"currentTrack\": null\n            },\n            \"queueTracks\": [],\n            \"previousTrack\": null,\n            \"repeat\": false,\n            \"shuffle\": false,\n            \"play\": false,\n            \"repeatOnce\": false,\n            \"devices\": [\n                {\n                    \"_id\": \"5e8a5a78b2859207bf1fc2e8\",\n                    \"devicesName\": \"chrome\"\n                }\n            ]\n        },\n        \"ownedPlaylists\": [\n            \"5e7969965146d92e98ac3ef7\",\n            \"5e7ac3c7d43a2c49909c549c\",\n            \"5e805a8a3711912168602afa\",\n            \"5e875c15ba6ebe663fdbb2c1\"\n        ],\n        \"followedAlbums\": [\n            \"5e701f4d2672a63a60573a02\",\n            \"5e701fdf2672a63a60573a06\"\n        ],\n        \"followedTracks\": [\n            \"5e7d2dc03429e24340ff1396\"\n        ],\n        \"_id\": \"5e8125dc54660672fd69987f\",\n        \"email\": \"generalmohamed1999@gmail.com\",\n        \"name\": \"Muhammad Ahmad Hesham\",\n        \"dateOfBirth\": \"1999-05-12T00:00:00.000Z\",\n        \"gender\": \"male\",\n        \"type\": \"user\",\n        \"last_login\": \"2020-04-06T10:21:58.141Z\",\n        \"passwordChangedAt\": \"2020-04-08T16:32:26.921Z\",\n        \"googleId\": \"googleId\",\n        \"imageGoogleUrl\": \"https://lh3.googleusercontent.com/a-/AOh14Gga4UgHOVM-hgdnV5Sv8OusgKzhsfmiYv5wEgSwxA\",\n        \"imageUrl\": \"https://thesymphonia.ddns.net/api/v1/images/users/default.png\"\n    }\n}"
						}
					]
				},
				{
					"name": "Apply_Artist",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{URL}}api/v1/users/activate/:{token}",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"v1",
								"users",
								"activate",
								":{token}"
							],
							"variable": [
								{
									"key": "{token}",
									"value": "5e3a07fb752414b689ac6730fd6e6eabe3f6f29bafed13669a00bbd34967542c"
								}
							]
						}
					},
					"response": [
						{
							"name": "Apply_Artist",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{URL}}api/v1/users/activate/:{token}",
									"host": [
										"{{URL}}api"
									],
									"path": [
										"v1",
										"users",
										"activate",
										":{token}"
									],
									"variable": [
										{
											"key": "{token}",
											"value": "c3e959d5d735a91bac435d4e04a041e3fa7ef0cd8bc57e68f167bad4b9742e0c"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "687"
								},
								{
									"key": "ETag",
									"value": "W/\"2af-XhGPX9UFAjcWT2A7vlj5/ex0MNQ\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Date",
									"value": "Thu, 23 Apr 2020 00:50:43 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjVlYTBlNTFkYzMyOWIwMDRjYzc0NGYwNyIsImlhdCI6MTU4NzYwMzA0MywiZXhwIjoxNzYwNDAzMDQzfQ.flxIxPi_JKuaj-tlxSeah9E-z-lnNaa2mMRjy9tevNA\",\n    \"user\": {\n        \"queue\": {\n            \"currentlyPlaying\": {\n                \"currentTrack\": null\n            },\n            \"queueTracks\": [],\n            \"previousTrack\": null,\n            \"repeat\": false,\n            \"shuffle\": false,\n            \"play\": false,\n            \"repeatOnce\": false,\n            \"devices\": []\n        },\n        \"ownedPlaylists\": [],\n        \"followedAlbums\": [],\n        \"followedTracks\": [],\n        \"deleted\": false,\n        \"_id\": \"5ea0e51dc329b004cc744f07\",\n        \"email\": \"test136@test.com\",\n        \"name\": \"etsh\",\n        \"dateOfBirth\": \"1999-04-30T00:00:00.000Z\",\n        \"gender\": \"male\",\n        \"type\": \"artist\",\n        \"last_login\": \"2020-04-23T00:45:17.897Z\",\n        \"imageUrl\": \"http://localhost:3000/api/v1/images/users/default.png\"\n    }\n}"
						}
					]
				},
				{
					"name": "Facebook-Auth",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{URL}}api/v1/users/auth/facebook/symphonia",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"v1",
								"users",
								"auth",
								"facebook",
								"symphonia"
							]
						}
					},
					"response": [
						{
							"name": "Facebook-Auth",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{URL}}api/v1/users/auth/facebook",
									"host": [
										"{{URL}}api"
									],
									"path": [
										"v1",
										"users",
										"auth",
										"facebook"
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"status\": \"success\",\n    \"message\": \"Authenticated with facebook\"\n}"
						}
					]
				},
				{
					"name": "Check email existence",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"test29@test.com\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}api/v1/users/email-exist",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"v1",
								"users",
								"email-exist"
							]
						}
					},
					"response": [
						{
							"name": "Check if email exists in the database",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"email\": \"test29@test.com\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}api/v1/users/email-exist",
									"host": [
										"{{URL}}api"
									],
									"path": [
										"v1",
										"users",
										"email-exist"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "1000"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "996"
								},
								{
									"key": "Date",
									"value": "Fri, 03 Apr 2020 20:32:09 GMT"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1585949332"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "31"
								},
								{
									"key": "ETag",
									"value": "W/\"1f-InAREvGHtGmbIvvXUJT/WV24CmA\""
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"exists\": true,\n    \"type\": \"artist\"\n}"
						}
					]
				},
				{
					"name": "Premium",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/me/checkout-session",
							"host": [
								"{{URL}}"
							],
							"path": [
								"me",
								"checkout-session"
							]
						},
						"description": "## Get user Cridet card sesssion\r\n\r\n return information from the session that the user use to pay the premium subscribtion\r\n## Response Format\r\n  On success, the HTTP status code in the response header is 200 OK, the header status code is an error code and the response body contains an error object."
					},
					"response": [
						{
							"name": "Premium",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{URL}}/me/checkout-session",
									"host": [
										"{{URL}}"
									],
									"path": [
										"me",
										"checkout-session"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "1000"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "967"
								},
								{
									"key": "Date",
									"value": "Sun, 05 Apr 2020 14:22:35 GMT"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1586097230"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "828"
								},
								{
									"key": "ETag",
									"value": "W/\"33c-CN5AUcwAIsmbBcFI7rAiMWQvAS0\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"session\": {\n        \"id\": \"cs_test_ZbI888pzQWoVMZjtGrKSU2mVEFyaPpbwEeZ4LMUengwGfjrcjXNoVmWX\",\n        \"object\": \"checkout.session\",\n        \"billing_address_collection\": null,\n        \"cancel_url\": \"http://localhost:3000/\",\n        \"client_reference_id\": \"mohamed.ahmed999@eng-st.cu.edu.eg\",\n        \"customer\": null,\n        \"customer_email\": \"mohamed.ahmed999@eng-st.cu.edu.eg\",\n        \"display_items\": [\n            {\n                \"amount\": 10000,\n                \"currency\": \"usd\",\n                \"custom\": {\n                    \"description\": \"remove advs and get locked songs\",\n                    \"images\": [\n                        \"http://localhost:3000/img/defult\"\n                    ],\n                    \"name\": \"Premium Subscription\"\n                },\n                \"quantity\": 1,\n                \"type\": \"custom\"\n            }\n        ],\n        \"livemode\": false,\n        \"locale\": null,\n        \"metadata\": {},\n        \"mode\": \"payment\",\n        \"payment_intent\": \"pi_1GUZMvJfsNM64j5dNoOMub5j\",\n        \"payment_method_types\": [\n            \"card\"\n        ],\n        \"setup_intent\": null,\n        \"shipping\": null,\n        \"shipping_address_collection\": null,\n        \"submit_type\": null,\n        \"subscription\": null,\n        \"success_url\": \"http://localhost:3000/api/v1/me\"\n    }\n}"
						}
					]
				},
				{
					"name": "Get-Current-User-Profile",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}api/v1/me",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"v1",
								"me"
							]
						},
						"description": "## Get user Pfofile (private) \r\n Just get informations about the user .\r\n\r\n\r\n## Response Format\r\n  On success, the HTTP status code in the response header is 200 OK , the header status code is an error code and the response body contains an error object."
					},
					"response": [
						{
							"name": "Get-Current-User-Profile",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{URL}}api/v1/me",
									"host": [
										"{{URL}}api"
									],
									"path": [
										"v1",
										"me"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.0 (Ubuntu)"
								},
								{
									"key": "Date",
									"value": "Wed, 10 Jun 2020 13:29:49 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "ETag",
									"value": "W/\"562-LnwxqZBdxcYBTesCvqeuTnJRm6w\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"premium\": true,\n    \"followedUsers\": [\n        \"5e84b966681ae439edfc1d6f\",\n        \"5e82a48054660672fd699883\",\n        \"5e812a3454660672fd699880\",\n        \"5e8c77c1e37ac11ac4f0135f\"\n    ],\n    \"tracks\": [],\n    \"ownedPlaylists\": [\n        \"5e7969965146d92e98ac3ef7\",\n        \"5e7ac3c7d43a2c49909c549c\",\n        \"5e805a8a3711912168602afa\",\n        \"5e875c15ba6ebe663fdbb2c1\",\n        \"5edfc01179571909a0c80f51\"\n    ],\n    \"followedAlbums\": [\n        \"5e701fdf2672a63a60573a06\",\n        \"5e794163c01c024ecc3c31d3\",\n        \"5e89f33375bcc40cc4b5a736\"\n    ],\n    \"followedTracks\": [\n        \"5e7d2dc03429e24340ff1396\",\n        \"5e7d2e023429e24340ff1398\",\n        \"5e7d334860cd930408a5f995\"\n    ],\n    \"deleted\": false,\n    \"_id\": \"5e8125dc54660672fd69987f\",\n    \"email\": \"generalmohamed1999@gmail.com\",\n    \"name\": \"Muhammad Ahmad Hesham\",\n    \"dateOfBirth\": \"1999-05-12T00:00:00.000Z\",\n    \"gender\": \"male\",\n    \"type\": \"user\",\n    \"last_login\": \"2020-06-10T11:40:52.278Z\",\n    \"imageGoogleUrl\": \"https://lh3.googleusercontent.com/a-/AOh14Gga4UgHOVM-hgdnV5Sv8OusgKzhsfmiYv5wEgSwxA\",\n    \"imageUrl\": \"https://graph.facebook.com/v2.6/1513670318797902/picture?type=large\",\n    \"__v\": 15,\n    \"imageFacebookUrl\": \"https://graph.facebook.com/v2.6/1513670318797902/picture?type=large\",\n    \"playerToken\": \"49a5afcd0a492c4afd262bad421194dcf56a0392027f6f351e8a91acb96184ec\",\n    \"playerTokenExpires\": \"2020-06-10T12:38:44.597Z\",\n    \"registraionToken\": \"eoutghG3cONxylicJfk9rI:APA91bEsUYhjNQBmM6bJUr0mJ0EJYPeye4nKXMReEBoJd-qF88gH53EosxnYT4o6JQbnVeWra31kbhRFcMYffSDz3wBHYvHxbNTXCVH05Uyljn0wmJFrNi14zZGnPl7a0BebCSiC0e8t\",\n    \"premiumExpires\": \"2020-12-06T17:02:32.240Z\"\n}"
						}
					]
				},
				{
					"name": "Get-User-Public-Profile",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}api/v1/me/user/:{user_id}",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"v1",
								"me",
								"user",
								":{user_id}"
							],
							"variable": [
								{
									"key": "{user_id}",
									"value": "5e812a3454660672fd699880",
									"description": "The `Symphonia` id for the document you want to retrieve"
								}
							]
						},
						"description": "## Get user Pfofile (public) \r\n Just get informations about the user .\r\n\r\n\r\n## Response Format\r\n  On success, the HTTP status code in the response header is 200 OK , the header status code is an error code and the response body contains an error object."
					},
					"response": [
						{
							"name": "Get-User-Public-Profile",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{URL}}api/v1/me/user/:{user_id}",
									"host": [
										"{{URL}}api"
									],
									"path": [
										"v1",
										"me",
										"user",
										":{user_id}"
									],
									"variable": [
										{
											"key": "{user_id}",
											"value": "5e812a3454660672fd699880",
											"description": "The `Symphonia` id for the document you want to retrieve"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.0 (Ubuntu)"
								},
								{
									"key": "Date",
									"value": "Wed, 10 Jun 2020 13:30:51 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "ETag",
									"value": "W/\"4dc-MxA/IwYmloYVDEU3XwEjvS/ieUw\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"premium\": false,\n    \"followedUsers\": [\n        \"5e8b6d866253cb184eaac150\",\n        \"5e812db054660672fd699881\",\n        \"5edff84830afcb26b83fb1ac\",\n        \"5e82a48054660672fd699883\"\n    ],\n    \"tracks\": [],\n    \"ownedPlaylists\": [\n        \"5e806865ef653f5a541e0b1d\",\n        \"5e8069722fcb0d35900c4d64\",\n        \"5e8078b0dbaafc18605cb029\",\n        \"5e8828df838d9835d207016d\",\n        \"5edfcbf079571909a0c80ff1\",\n        \"5edfd09d79571909a0c810d1\",\n        \"5edfd57079571909a0c81545\",\n        \"5edfd65f79571909a0c8155c\",\n        \"5edfda35d6f6331d3e8e0766\",\n        \"5edfdde7d6f6331d3e8e07dc\",\n        \"5edfdec9d6f6331d3e8e07f7\",\n        \"5edfe061d6f6331d3e8e081c\"\n    ],\n    \"followedAlbums\": [\n        \"5e794163c01c024ecc3c31d3\",\n        \"5edf5a442aa9b365682e46f9\",\n        \"5e701fdf2672a63a60573a06\"\n    ],\n    \"followedTracks\": [\n        \"5e7d2dc03429e24340ff1396\"\n    ],\n    \"deleted\": false,\n    \"_id\": \"5e812a3454660672fd699880\",\n    \"email\": \"test1@test.com\",\n    \"name\": \"user1\",\n    \"dateOfBirth\": \"1999-06-25T00:00:00.000Z\",\n    \"gender\": \"female\",\n    \"type\": \"user\",\n    \"imageUrl\": \"https://thesymphonia.ddns.net/api/v1/images/users/default.png\",\n    \"__v\": 10,\n    \"last_login\": \"2020-06-10T09:29:12.974Z\",\n    \"playerToken\": \"ea1677700c30e32cc4f353f3650522ea1ac4fe2927fccc940e3341585f1c6f81\",\n    \"playerTokenExpires\": \"2020-06-10T09:53:29.790Z\",\n    \"registraionToken\": \"d1paSPuuvv0IgsR6DQLn6s:APA91bHg6-nHHNcgEgvmA5rEwb9IuU19otI9EV_cG5Ie2yQeHxqft_ZF84bnXs-pEjcZKw9as3DPLonu0Q9LTiOuzc4QTdbmRxRo3_a0PlfY8aUH9-039wYlbnBaZSeixT26ChVMf9Nv\"\n}"
						}
					]
				},
				{
					"name": "update user data",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"ahmad\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}api/v1/me/",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"v1",
								"me",
								""
							]
						}
					},
					"response": [
						{
							"name": "update all user data",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"email\": \"test25@test.com\",\n\t\"gender\": \"male\",\n\t\"dateOfBirth\": \"1999-05-31\",\n\t\"phone\": \"1216595487\",\n\t\"name\": \"nice\"\n\t\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}api/v1/me/",
									"host": [
										"{{URL}}api"
									],
									"path": [
										"v1",
										"me",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "1000"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "999"
								},
								{
									"key": "Date",
									"value": "Mon, 06 Apr 2020 12:23:04 GMT"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1586179275"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "ETag",
									"value": "W/\"746-uxb8H/QUWe6FQH1Ds6JLNTiPG+Q\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"queue\": {\n        \"currentlyPlaying\": {\n            \"currentTrack\": \"http://ec2-54-197-122-205.compute-1.amazonaws.com/api/v1/me/player/tracks/5e7d2dc03429e24340ff1396\",\n            \"device\": \"5e8a6b01ed210008a53e2f7f\"\n        },\n        \"queueTracks\": [],\n        \"previousTrack\": null,\n        \"repeat\": false,\n        \"shuffle\": false,\n        \"play\": false,\n        \"repeatOnce\": false,\n        \"devices\": [\n            {\n                \"_id\": \"5e8a107fdf9ed11c1cc2de92\"\n            },\n            {\n                \"_id\": \"5e8a10c3df9ed11c1cc2de95\"\n            },\n            {\n                \"_id\": \"5e8a10cbd56ea252c3860a0a\"\n            },\n            {\n                \"_id\": \"5e8a113bdf9ed11c1cc2de97\"\n            },\n            {\n                \"_id\": \"5e8a1144d56ea252c3860a0c\"\n            },\n            {\n                \"_id\": \"5e8a1185d56ea252c3860a0e\"\n            },\n            {\n                \"_id\": \"5e8a118cdf9ed11c1cc2de99\"\n            },\n            {\n                \"_id\": \"5e8a1d9373973e2554164b1c\"\n            },\n            {\n                \"_id\": \"5e8a206cd021d52aecca8cf7\"\n            },\n            {\n                \"_id\": \"5e8a20a81688d1074869b9d0\"\n            },\n            {\n                \"_id\": \"5e8a2100d56ea252c3860a16\"\n            },\n            {\n                \"_id\": \"5e8a29a7d56ea252c3860a18\"\n            },\n            {\n                \"_id\": \"5e8a29b152566818b8f6822f\"\n            },\n            {\n                \"_id\": \"5e8a29e97e47b03d0428d140\"\n            },\n            {\n                \"_id\": \"5e8a2a7aa8350f239c4b48a4\"\n            },\n            {\n                \"_id\": \"5e8a2a9af04fa83bd860fae7\"\n            },\n            {\n                \"_id\": \"5e8a4d8d7b6f286c4816cbe5\"\n            },\n            {\n                \"_id\": \"5e8a4f39b4d0ab6f38e74f0d\"\n            },\n            {\n                \"_id\": \"5e8a4f4db4d0ab6f38e74f0f\"\n            },\n            {\n                \"_id\": \"5e8a4f4fb4d0ab6f38e74f11\"\n            },\n            {\n                \"_id\": \"5e8a5bc7b2859207bf1fc2eb\"\n            },\n            {\n                \"_id\": \"5e8a5c53b2859207bf1fc2ed\"\n            },\n            {\n                \"_id\": \"5e8a5ce9ed210008a53e2f7b\"\n            },\n            {\n                \"_id\": \"5e8a6578834519135aea4399\"\n            },\n            {\n                \"_id\": \"5e8a65e3834519135aea439b\"\n            },\n            {\n                \"_id\": \"5e8a667c94163072d0c444fb\"\n            },\n            {\n                \"_id\": \"5e8a66b4fbb91d735d629352\"\n            },\n            {\n                \"_id\": \"5e8a66f8ae59df73fc63fbb7\"\n            },\n            {\n                \"_id\": \"5e8a67d4a4ae9f757d0dc54c\"\n            },\n            {\n                \"_id\": \"5e8a67eda4ae9f757d0dc54e\"\n            },\n            {\n                \"_id\": \"5e8a6b01ed210008a53e2f7f\"\n            },\n            {\n                \"_id\": \"5e8a9aaef30cd40c365b8cb8\",\n                \"devicesName\": \"Chrome\"\n            }\n        ]\n    },\n    \"followedUsers\": [],\n    \"tracks\": [],\n    \"ownedPlaylists\": [],\n    \"followedAlbums\": [],\n    \"_id\": \"5e80b341b19a24084cb9b7e7\",\n    \"email\": \"test25@test.com\",\n    \"name\": \"nice\",\n    \"dateOfBirth\": \"1999-05-31T00:00:00.000Z\",\n    \"gender\": \"male\",\n    \"type\": \"artist\",\n    \"__v\": 35,\n    \"last_login\": \"2020-04-06T11:57:33.763Z\",\n    \"passwordChangedAt\": \"2020-03-29T16:53:43.598Z\",\n    \"playlists\": [],\n    \"imageUrl\": \"http://zasymphonia.ddns.net/api/v1/images/users/default.png\",\n    \"phone\": \"1216595487\"\n}"
						},
						{
							"name": "update one user data only",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"email\": \"test29@test.com\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}api/v1/me/",
									"host": [
										"{{URL}}api"
									],
									"path": [
										"v1",
										"me",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "1000"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "998"
								},
								{
									"key": "Date",
									"value": "Mon, 06 Apr 2020 12:25:57 GMT"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1586179275"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "ETag",
									"value": "W/\"746-QT/Lwpu/iZCGkQw+2ZTYZW+MuXg\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"queue\": {\n        \"currentlyPlaying\": {\n            \"currentTrack\": \"http://ec2-54-197-122-205.compute-1.amazonaws.com/api/v1/me/player/tracks/5e7d2dc03429e24340ff1396\",\n            \"device\": \"5e8a6b01ed210008a53e2f7f\"\n        },\n        \"queueTracks\": [],\n        \"previousTrack\": null,\n        \"repeat\": false,\n        \"shuffle\": false,\n        \"play\": false,\n        \"repeatOnce\": false,\n        \"devices\": [\n            {\n                \"_id\": \"5e8a107fdf9ed11c1cc2de92\"\n            },\n            {\n                \"_id\": \"5e8a10c3df9ed11c1cc2de95\"\n            },\n            {\n                \"_id\": \"5e8a10cbd56ea252c3860a0a\"\n            },\n            {\n                \"_id\": \"5e8a113bdf9ed11c1cc2de97\"\n            },\n            {\n                \"_id\": \"5e8a1144d56ea252c3860a0c\"\n            },\n            {\n                \"_id\": \"5e8a1185d56ea252c3860a0e\"\n            },\n            {\n                \"_id\": \"5e8a118cdf9ed11c1cc2de99\"\n            },\n            {\n                \"_id\": \"5e8a1d9373973e2554164b1c\"\n            },\n            {\n                \"_id\": \"5e8a206cd021d52aecca8cf7\"\n            },\n            {\n                \"_id\": \"5e8a20a81688d1074869b9d0\"\n            },\n            {\n                \"_id\": \"5e8a2100d56ea252c3860a16\"\n            },\n            {\n                \"_id\": \"5e8a29a7d56ea252c3860a18\"\n            },\n            {\n                \"_id\": \"5e8a29b152566818b8f6822f\"\n            },\n            {\n                \"_id\": \"5e8a29e97e47b03d0428d140\"\n            },\n            {\n                \"_id\": \"5e8a2a7aa8350f239c4b48a4\"\n            },\n            {\n                \"_id\": \"5e8a2a9af04fa83bd860fae7\"\n            },\n            {\n                \"_id\": \"5e8a4d8d7b6f286c4816cbe5\"\n            },\n            {\n                \"_id\": \"5e8a4f39b4d0ab6f38e74f0d\"\n            },\n            {\n                \"_id\": \"5e8a4f4db4d0ab6f38e74f0f\"\n            },\n            {\n                \"_id\": \"5e8a4f4fb4d0ab6f38e74f11\"\n            },\n            {\n                \"_id\": \"5e8a5bc7b2859207bf1fc2eb\"\n            },\n            {\n                \"_id\": \"5e8a5c53b2859207bf1fc2ed\"\n            },\n            {\n                \"_id\": \"5e8a5ce9ed210008a53e2f7b\"\n            },\n            {\n                \"_id\": \"5e8a6578834519135aea4399\"\n            },\n            {\n                \"_id\": \"5e8a65e3834519135aea439b\"\n            },\n            {\n                \"_id\": \"5e8a667c94163072d0c444fb\"\n            },\n            {\n                \"_id\": \"5e8a66b4fbb91d735d629352\"\n            },\n            {\n                \"_id\": \"5e8a66f8ae59df73fc63fbb7\"\n            },\n            {\n                \"_id\": \"5e8a67d4a4ae9f757d0dc54c\"\n            },\n            {\n                \"_id\": \"5e8a67eda4ae9f757d0dc54e\"\n            },\n            {\n                \"_id\": \"5e8a6b01ed210008a53e2f7f\"\n            },\n            {\n                \"_id\": \"5e8a9aaef30cd40c365b8cb8\",\n                \"devicesName\": \"Chrome\"\n            }\n        ]\n    },\n    \"followedUsers\": [],\n    \"tracks\": [],\n    \"ownedPlaylists\": [],\n    \"followedAlbums\": [],\n    \"_id\": \"5e80b341b19a24084cb9b7e7\",\n    \"email\": \"test29@test.com\",\n    \"name\": \"etsh\",\n    \"dateOfBirth\": \"1999-05-31T00:00:00.000Z\",\n    \"gender\": \"male\",\n    \"type\": \"artist\",\n    \"__v\": 35,\n    \"last_login\": \"2020-04-06T11:57:33.763Z\",\n    \"passwordChangedAt\": \"2020-03-29T16:53:43.598Z\",\n    \"playlists\": [],\n    \"imageUrl\": \"http://zasymphonia.ddns.net/api/v1/images/users/default.png\",\n    \"phone\": \"1216595487\"\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Devices",
			"item": [
				{
					"name": "Delete-Device",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"deviceId\": \"5e88ef4d54142e3db4d01ee5\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}api/v1/me/player/devices",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"v1",
								"me",
								"player",
								"devices"
							]
						},
						"description": "## Delete user device \r\n just delete the user device from the devices list when the user disconnect .\r\n\r\n## Response Format\r\n  On success, the HTTP status code in the response header is 204 no content, the header status code is an error code and the response body contains an error object."
					},
					"response": [
						{
							"name": "Delete-Device",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"deviceId\": \"5e88ef4d54142e3db4d01ee5\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/me/player/devices",
									"host": [
										"{{URL}}"
									],
									"path": [
										"me",
										"player",
										"devices"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "1000"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "965"
								},
								{
									"key": "Date",
									"value": "Sun, 05 Apr 2020 14:24:13 GMT"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1586097230"
								},
								{
									"key": "ETag",
									"value": "W/\"d-XXcxLjB/sjfS0AB6+CxvXcLGrm4\""
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Put-Device",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"device\": \"Safari\" \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}api/v1/me/player/devices",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"v1",
								"me",
								"player",
								"devices"
							]
						},
						"description": "## Patch user queue to be add devices list\r\n Just add new device to the user devices list  .\r\n\r\n## Response Format\r\n  On success, the HTTP status code in the response header is 204 no content, the header status code is an error code and the response body contains an error object."
					},
					"response": [
						{
							"name": "Put-Device",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"device\": \"Safari\" \n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:3000/api/v1/me/player/devices",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"v1",
										"me",
										"player",
										"devices"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "1000"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "989"
								},
								{
									"key": "Date",
									"value": "Sun, 05 Apr 2020 14:08:24 GMT"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1586097230"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "688"
								},
								{
									"key": "ETag",
									"value": "W/\"2b0-fe03BNM2WCL0CMZO+PDjW3BFQpE\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"devices\": [\n        {\n            \"_id\": \"5e88eea554142e3db4d01edb\",\n            \"devicesName\": \"Chrome\"\n        },\n        {\n            \"_id\": \"5e88eee7d56ea252c38609f9\",\n            \"devicesName\": \"Chrome\"\n        },\n        {\n            \"_id\": \"5e88eef254142e3db4d01edf\",\n            \"devicesName\": \"Chrome\"\n        },\n \n        {\n            \"_id\": \"5e88ef4d54142e3db4d01ee5\",\n            \"devicesName\": \"Chrome\"\n        },\n        {\n            \"_id\": \"5e89e659a879619b50cb8c4c\",\n            \"devicesName\": \"Safari\"\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Get-Devices",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}api/v1/me/player/devices",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"v1",
								"me",
								"player",
								"devices"
							]
						},
						"description": "## Get user queue devices list\r\n Just return devices list of user current queue  .\r\n\r\n## Response Format\r\n  On success, the HTTP status code in the response header is 200 OK , the header status code is an error code and the response body contains an error object."
					},
					"response": [
						{
							"name": "Get-Devices",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{URL}}/me/player/devices",
									"host": [
										"{{URL}}"
									],
									"path": [
										"me",
										"player",
										"devices"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "1000"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "984"
								},
								{
									"key": "Date",
									"value": "Sun, 05 Apr 2020 14:14:21 GMT"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1586097230"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "685"
								},
								{
									"key": "ETag",
									"value": "W/\"2ad-rqZEEu9LYKdpPkawmPyjKFH92YQ\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": [\n        {\n            \"_id\": \"5e88eea554142e3db4d01edb\",\n            \"devicesName\": \"Chrome\"\n        },\n        {\n            \"_id\": \"5e88eee7d56ea252c38609f9\",\n            \"devicesName\": \"Chrome\"\n        },\n        {\n            \"_id\": \"5e88eef254142e3db4d01edf\",\n            \"devicesName\": \"Chrome\"\n        },\n        {\n            \"_id\": \"5e88ef4d54142e3db4d01ee5\",\n            \"devicesName\": \"Chrome\"\n        },\n        {\n            \"_id\": \"5e89e659a879619b50cb8c4c\",\n            \"devicesName\": \"Safari\"\n        }\n    ]\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "267dd67b-c3e1-4db6-ad6c-7845b37c8a41",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "9f627c1e-01e4-49ff-a6c6-16166a69b1da",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"protocolProfileBehavior": {}
}